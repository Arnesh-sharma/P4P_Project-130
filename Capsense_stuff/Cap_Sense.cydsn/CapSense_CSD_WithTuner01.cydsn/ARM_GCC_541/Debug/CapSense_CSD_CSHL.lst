ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_sensorBaseline,4,4
  20              		.comm	CapSense_CSD_sensorBaselineLow,2,4
  21              		.comm	CapSense_CSD_sensorSignal,4,4
  22              		.comm	CapSense_CSD_sensorOnMask,1,4
  23              		.comm	CapSense_CSD_lowBaselineResetCnt,2,4
  24              		.global	CapSense_CSD_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_CSD_fingerThreshold, %object
  28              		.size	CapSense_CSD_fingerThreshold, 4
  29              	CapSense_CSD_fingerThreshold:
  30 0000 6400     		.short	100
  31 0002 3200     		.short	50
  32              		.global	CapSense_CSD_noiseThreshold
  33              		.align	2
  34              		.type	CapSense_CSD_noiseThreshold, %object
  35              		.size	CapSense_CSD_noiseThreshold, 4
  36              	CapSense_CSD_noiseThreshold:
  37 0004 1400     		.short	20
  38 0006 1400     		.short	20
  39              		.global	CapSense_CSD_hysteresis
  40              		.align	2
  41              		.type	CapSense_CSD_hysteresis, %object
  42              		.size	CapSense_CSD_hysteresis, 4
  43              	CapSense_CSD_hysteresis:
  44 0008 0A00     		.short	10
  45 000a 0A00     		.short	10
  46              		.global	CapSense_CSD_debounce
  47              		.align	2
  48              		.type	CapSense_CSD_debounce, %object
  49              		.size	CapSense_CSD_debounce, 2
  50              	CapSense_CSD_debounce:
  51 000c 05       		.byte	5
  52 000d 05       		.byte	5
  53              		.global	CapSense_CSD_debounceCounter
  54              		.bss
  55              		.align	2
  56              		.type	CapSense_CSD_debounceCounter, %object
  57              		.size	CapSense_CSD_debounceCounter, 3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 2


  58              	CapSense_CSD_debounceCounter:
  59 0000 000000   		.space	3
  60              		.global	CapSense_CSD_rawDataIndex
  61              		.section	.rodata
  62              		.align	2
  63              		.type	CapSense_CSD_rawDataIndex, %object
  64              		.size	CapSense_CSD_rawDataIndex, 2
  65              	CapSense_CSD_rawDataIndex:
  66 0000 00       		.byte	0
  67 0001 01       		.byte	1
  68              		.global	CapSense_CSD_numberOfSensors
  69 0002 0000     		.align	2
  70              		.type	CapSense_CSD_numberOfSensors, %object
  71              		.size	CapSense_CSD_numberOfSensors, 2
  72              	CapSense_CSD_numberOfSensors:
  73 0004 01       		.byte	1
  74 0005 01       		.byte	1
  75              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  76              		.align	2
  77              		.global	CapSense_CSD_BaseInit
  78              		.thumb
  79              		.thumb_func
  80              		.type	CapSense_CSD_BaseInit, %function
  81              	CapSense_CSD_BaseInit:
  82              	.LFB0:
  83              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 3


  32:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     100u, 50u, 
  50:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     20u, 20u, 
  54:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     10u, 10u, 
  58:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, 5u, 
  62:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  71:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  72:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  73:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  74:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  75:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
  76:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  77:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  79:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  83:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  84:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  85:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  86:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  87:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  88:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 4


  89:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  90:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  91:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  92:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  93:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
  94:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
  95:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
  96:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  97:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  98:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
  99:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  84              		.loc 1 124 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0346     		mov	r3, r0
  97 0008 FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
  98              		.loc 1 127 0
  99 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 100 000c 0F4A     		ldr	r2, .L2
 101 000e D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 5


 102 0010 FB73     		strb	r3, [r7, #15]
 128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 103              		.loc 1 141 0
 104 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 105 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 106 0016 0E49     		ldr	r1, .L2+4
 107 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 108 001c 0D4A     		ldr	r2, .L2+8
 109 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 110              		.loc 1 142 0
 111 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 112 0024 0C4A     		ldr	r2, .L2+12
 113 0026 0021     		movs	r1, #0
 114 0028 D154     		strb	r1, [r2, r3]
 143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 115              		.loc 1 143 0
 116 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117 002c 0B4A     		ldr	r2, .L2+16
 118 002e 0021     		movs	r1, #0
 119 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 120              		.loc 1 145 0
 121 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 122 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 123 0038 0949     		ldr	r1, .L2+20
 124 003a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 125 003c 094A     		ldr	r2, .L2+24
 126 003e D154     		strb	r1, [r2, r3]
 146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 6


 160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 127              		.loc 1 172 0
 128 0040 00BF     		nop
 129 0042 1437     		adds	r7, r7, #20
 130              		.cfi_def_cfa_offset 4
 131 0044 BD46     		mov	sp, r7
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0046 80BC     		pop	{r7}
 135              		.cfi_restore 7
 136              		.cfi_def_cfa_offset 0
 137 0048 7047     		bx	lr
 138              	.L3:
 139 004a 00BF     		.align	2
 140              	.L2:
 141 004c 00000000 		.word	CapSense_CSD_widgetNumber
 142 0050 00000000 		.word	CapSense_CSD_sensorRaw
 143 0054 00000000 		.word	CapSense_CSD_sensorBaseline
 144 0058 00000000 		.word	CapSense_CSD_sensorBaselineLow
 145 005c 00000000 		.word	CapSense_CSD_sensorSignal
 146 0060 00000000 		.word	CapSense_CSD_debounce
 147 0064 00000000 		.word	CapSense_CSD_debounceCounter
 148              		.cfi_endproc
 149              	.LFE0:
 150              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 151              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 152              		.align	2
 153              		.global	CapSense_CSD_InitializeSensorBaseline
 154              		.thumb
 155              		.thumb_func
 156              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 157              	CapSense_CSD_InitializeSensorBaseline:
 158              	.LFB1:
 173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 7


 185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 159              		.loc 1 198 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 82B0     		sub	sp, sp, #8
 168              		.cfi_def_cfa_offset 16
 169 0004 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 171 0006 0346     		mov	r3, r0
 172 0008 FB71     		strb	r3, [r7, #7]
 199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 173              		.loc 1 200 0
 174 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 175 000c 1846     		mov	r0, r3
 176 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 177              		.loc 1 201 0
 178 0012 00BF     		nop
 179              	.L5:
 180              		.loc 1 201 0 is_stmt 0 discriminator 1
 181 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 182 0018 0346     		mov	r3, r0
 183 001a 002B     		cmp	r3, #0
 184 001c FAD1     		bne	.L5
 202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 185              		.loc 1 208 0 is_stmt 1
 186 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 187 0020 1846     		mov	r0, r3
 188 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 8


 212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 189              		.loc 1 225 0
 190 0026 00BF     		nop
 191 0028 0837     		adds	r7, r7, #8
 192              		.cfi_def_cfa_offset 8
 193 002a BD46     		mov	sp, r7
 194              		.cfi_def_cfa_register 13
 195              		@ sp needed
 196 002c 80BD     		pop	{r7, pc}
 197              		.cfi_endproc
 198              	.LFE1:
 199              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 200 002e 00BF     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 201              		.align	2
 202              		.global	CapSense_CSD_InitializeAllBaselines
 203              		.thumb
 204              		.thumb_func
 205              		.type	CapSense_CSD_InitializeAllBaselines, %function
 206              	CapSense_CSD_InitializeAllBaselines:
 207              	.LFB2:
 226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 9


 250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 208              		.loc 1 250 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 82B0     		sub	sp, sp, #8
 217              		.cfi_def_cfa_offset 16
 218 0004 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 220              		.loc 1 254 0
 221 0006 0023     		movs	r3, #0
 222 0008 FB71     		strb	r3, [r7, #7]
 223 000a 06E0     		b	.L7
 224              	.L8:
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 225              		.loc 1 256 0 discriminator 3
 226 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 227 000e 1846     		mov	r0, r3
 228 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 229              		.loc 1 254 0 discriminator 3
 230 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 231 0016 0133     		adds	r3, r3, #1
 232 0018 FB71     		strb	r3, [r7, #7]
 233              	.L7:
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 234              		.loc 1 254 0 is_stmt 0 discriminator 1
 235 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 236 001c 012B     		cmp	r3, #1
 237 001e F5D9     		bls	.L8
 257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 238              		.loc 1 258 0 is_stmt 1
 239 0020 00BF     		nop
 240 0022 0837     		adds	r7, r7, #8
 241              		.cfi_def_cfa_offset 8
 242 0024 BD46     		mov	sp, r7
 243              		.cfi_def_cfa_register 13
 244              		@ sp needed
 245 0026 80BD     		pop	{r7, pc}
 246              		.cfi_endproc
 247              	.LFE2:
 248              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 249              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 250              		.align	2
 251              		.global	CapSense_CSD_InitializeEnabledBaselines
 252              		.thumb
 253              		.thumb_func
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 10


 254              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 255              	CapSense_CSD_InitializeEnabledBaselines:
 256              	.LFB3:
 259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 257              		.loc 1 283 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 82B0     		sub	sp, sp, #8
 266              		.cfi_def_cfa_offset 16
 267 0004 00AF     		add	r7, sp, #0
 268              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 269              		.loc 1 288 0
 270 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 271              		.loc 1 289 0
 272 000a 00BF     		nop
 273              	.L10:
 274              		.loc 1 289 0 is_stmt 0 discriminator 1
 275 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 276 0010 0346     		mov	r3, r0
 277 0012 002B     		cmp	r3, #0
 278 0014 FAD1     		bne	.L10
 290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 11


 291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 279              		.loc 1 294 0 is_stmt 1
 280 0016 0023     		movs	r3, #0
 281 0018 FB71     		strb	r3, [r7, #7]
 282 001a 1DE0     		b	.L11
 283              	.L13:
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 284              		.loc 1 296 0
 285 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 286 001e DB08     		lsrs	r3, r3, #3
 287 0020 BB71     		strb	r3, [r7, #6]
 297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 288              		.loc 1 297 0
 289 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 290 0024 03F00703 		and	r3, r3, #7
 291 0028 0122     		movs	r2, #1
 292 002a 02FA03F3 		lsl	r3, r2, r3
 293 002e 7B71     		strb	r3, [r7, #5]
 298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 294              		.loc 1 300 0
 295 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 296 0032 0D4A     		ldr	r2, .L14
 297 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 298 0036 7B79     		ldrb	r3, [r7, #5]
 299 0038 1340     		ands	r3, r3, r2
 300 003a DBB2     		uxtb	r3, r3
 301 003c 002B     		cmp	r3, #0
 302 003e 04D1     		bne	.L12
 301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 303              		.loc 1 302 0
 304 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 305 0042 0A4A     		ldr	r2, .L14+4
 306 0044 0021     		movs	r1, #0
 307 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 308              	.L12:
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 309              		.loc 1 306 0 discriminator 2
 310 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 004c 1846     		mov	r0, r3
 312 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 313              		.loc 1 294 0 discriminator 2
 314 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 315 0054 0133     		adds	r3, r3, #1
 316 0056 FB71     		strb	r3, [r7, #7]
 317              	.L11:
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 12


 318              		.loc 1 294 0 is_stmt 0 discriminator 1
 319 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 005a 012B     		cmp	r3, #1
 321 005c DED9     		bls	.L13
 307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 322              		.loc 1 308 0 is_stmt 1
 323 005e 00BF     		nop
 324 0060 0837     		adds	r7, r7, #8
 325              		.cfi_def_cfa_offset 8
 326 0062 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0064 80BD     		pop	{r7, pc}
 330              	.L15:
 331 0066 00BF     		.align	2
 332              	.L14:
 333 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 334 006c 00000000 		.word	CapSense_CSD_sensorRaw
 335              		.cfi_endproc
 336              	.LFE3:
 337              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 338              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 339              		.align	2
 340              		.global	CapSense_CSD_UpdateSensorBaseline
 341              		.thumb
 342              		.thumb_func
 343              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 344              	CapSense_CSD_UpdateSensorBaseline:
 345              	.LFB4:
 309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 13


 336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 346              		.loc 1 350 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 24
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
 354 0002 86B0     		sub	sp, sp, #24
 355              		.cfi_def_cfa_offset 32
 356 0004 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 358 0006 0346     		mov	r3, r0
 359 0008 FB71     		strb	r3, [r7, #7]
 351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 360              		.loc 1 354 0
 361 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 362 000c 454A     		ldr	r2, .L26
 363 000e D35C     		ldrb	r3, [r2, r3]
 364 0010 7B75     		strb	r3, [r7, #21]
 355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 365              		.loc 1 355 0
 366 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 367 0014 444A     		ldr	r2, .L26+4
 368 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 369 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 370              		.loc 1 363 0
 371 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 372 001e 434A     		ldr	r2, .L26+8
 373 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 374 0024 3B82     		strh	r3, [r7, #16]	@ movhi
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 14


 364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 375              		.loc 1 410 0
 376 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 377 0028 414A     		ldr	r2, .L26+12
 378 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 379 002e 3A8A     		ldrh	r2, [r7, #16]
 380 0030 9A42     		cmp	r2, r3
 381 0032 09D3     		bcc	.L17
 411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 382              		.loc 1 412 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 15


 383 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 384 0036 3E4A     		ldr	r2, .L26+12
 385 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 386 003c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 387 003e D31A     		subs	r3, r2, r3
 388 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 389              		.loc 1 413 0
 390 0042 0123     		movs	r3, #1
 391 0044 7B75     		strb	r3, [r7, #21]
 392 0046 08E0     		b	.L18
 393              	.L17:
 414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 394              		.loc 1 417 0
 395 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 396 004a 394A     		ldr	r2, .L26+12
 397 004c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 398 0050 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 399 0052 D31A     		subs	r3, r2, r3
 400 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 401              		.loc 1 418 0
 402 0056 0023     		movs	r3, #0
 403 0058 7B75     		strb	r3, [r7, #21]
 404              	.L18:
 419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 405              		.loc 1 421 0
 406 005a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 407 005c 002B     		cmp	r3, #0
 408 005e 18D1     		bne	.L19
 409              		.loc 1 421 0 is_stmt 0 discriminator 1
 410 0060 FB8A     		ldrh	r3, [r7, #22]
 411 0062 142B     		cmp	r3, #20
 412 0064 15D9     		bls	.L19
 422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 413              		.loc 1 423 0 is_stmt 1
 414 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0068 324A     		ldr	r2, .L26+16
 416 006a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 417 006c 042B     		cmp	r3, #4
 418 006e 08D9     		bls	.L20
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 419              		.loc 1 425 0
 420 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 421 0072 1846     		mov	r0, r3
 422 0074 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 423              		.loc 1 426 0
 424 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 425 007a 2E4A     		ldr	r2, .L26+16
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 16


 426 007c 0021     		movs	r1, #0
 427 007e D154     		strb	r1, [r2, r3]
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 428              		.loc 1 423 0
 429 0080 3AE0     		b	.L22
 430              	.L20:
 427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 431              		.loc 1 430 0
 432 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 0084 2B4A     		ldr	r2, .L26+16
 434 0086 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 435 0088 0132     		adds	r2, r2, #1
 436 008a D1B2     		uxtb	r1, r2
 437 008c 294A     		ldr	r2, .L26+16
 438 008e D154     		strb	r1, [r2, r3]
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 439              		.loc 1 423 0
 440 0090 32E0     		b	.L22
 441              	.L19:
 431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 442              		.loc 1 437 0
 443 0092 FA8A     		ldrh	r2, [r7, #22]
 444 0094 7B8A     		ldrh	r3, [r7, #18]
 445 0096 9A42     		cmp	r2, r3
 446 0098 05D9     		bls	.L23
 447              		.loc 1 437 0 is_stmt 0 discriminator 1
 448 009a FB8A     		ldrh	r3, [r7, #22]
 449 009c 132B     		cmp	r3, #19
 450 009e 2BD8     		bhi	.L22
 438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 451              		.loc 1 439 0 is_stmt 1
 452 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 453 00a2 002B     		cmp	r3, #0
 454 00a4 28D1     		bne	.L22
 455              	.L23:
 440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 456              		.loc 1 443 0
 457 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 458 00a8 214A     		ldr	r2, .L26+12
 459 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 460 00ae 1B02     		lsls	r3, r3, #8
 461 00b0 FB60     		str	r3, [r7, #12]
 444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 462              		.loc 1 444 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 17


 463 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 464 00b4 204A     		ldr	r2, .L26+20
 465 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 466 00b8 1A46     		mov	r2, r3
 467 00ba FB68     		ldr	r3, [r7, #12]
 468 00bc 1343     		orrs	r3, r3, r2
 469 00be FB60     		str	r3, [r7, #12]
 445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 470              		.loc 1 447 0
 471 00c0 3B8A     		ldrh	r3, [r7, #16]
 472 00c2 FA68     		ldr	r2, [r7, #12]
 473 00c4 1344     		add	r3, r3, r2
 474 00c6 FB60     		str	r3, [r7, #12]
 448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 475              		.loc 1 450 0
 476 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 477 00ca 194A     		ldr	r2, .L26+12
 478 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 479 00d0 1A46     		mov	r2, r3
 480 00d2 FB68     		ldr	r3, [r7, #12]
 481 00d4 9B1A     		subs	r3, r3, r2
 482 00d6 FB60     		str	r3, [r7, #12]
 451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 483              		.loc 1 453 0
 484 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 485 00da FA68     		ldr	r2, [r7, #12]
 486 00dc 120A     		lsrs	r2, r2, #8
 487 00de 91B2     		uxth	r1, r2
 488 00e0 134A     		ldr	r2, .L26+12
 489 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 490              		.loc 1 454 0
 491 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 492 00e8 FA68     		ldr	r2, [r7, #12]
 493 00ea D1B2     		uxtb	r1, r2
 494 00ec 124A     		ldr	r2, .L26+20
 495 00ee D154     		strb	r1, [r2, r3]
 455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 496              		.loc 1 456 0
 497 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 498 00f2 104A     		ldr	r2, .L26+16
 499 00f4 0021     		movs	r1, #0
 500 00f6 D154     		strb	r1, [r2, r3]
 501              	.L22:
 457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 18


 463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 502              		.loc 1 463 0
 503 00f8 FA8A     		ldrh	r2, [r7, #22]
 504 00fa 7B8A     		ldrh	r3, [r7, #18]
 505 00fc 9A42     		cmp	r2, r3
 506 00fe 08D9     		bls	.L24
 507              		.loc 1 463 0 is_stmt 0 discriminator 1
 508 0100 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 509 0102 002B     		cmp	r3, #0
 510 0104 05D0     		beq	.L24
 464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 511              		.loc 1 476 0 is_stmt 1
 512 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 513 0108 0C49     		ldr	r1, .L26+24
 514 010a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 515 010c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 516 0110 04E0     		b	.L25
 517              	.L24:
 477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 518              		.loc 1 482 0
 519 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 520 0114 094A     		ldr	r2, .L26+24
 521 0116 0021     		movs	r1, #0
 522 0118 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 523              	.L25:
 483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 524              		.loc 1 489 0
 525 011c 00BF     		nop
 526 011e 1837     		adds	r7, r7, #24
 527              		.cfi_def_cfa_offset 8
 528 0120 BD46     		mov	sp, r7
 529              		.cfi_def_cfa_register 13
 530              		@ sp needed
 531 0122 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 19


 532              	.L27:
 533              		.align	2
 534              	.L26:
 535 0124 00000000 		.word	CapSense_CSD_widgetNumber
 536 0128 00000000 		.word	CapSense_CSD_noiseThreshold
 537 012c 00000000 		.word	CapSense_CSD_sensorRaw
 538 0130 00000000 		.word	CapSense_CSD_sensorBaseline
 539 0134 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 540 0138 00000000 		.word	CapSense_CSD_sensorBaselineLow
 541 013c 00000000 		.word	CapSense_CSD_sensorSignal
 542              		.cfi_endproc
 543              	.LFE4:
 544              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 545              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 546              		.align	2
 547              		.global	CapSense_CSD_UpdateEnabledBaselines
 548              		.thumb
 549              		.thumb_func
 550              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 551              	CapSense_CSD_UpdateEnabledBaselines:
 552              	.LFB5:
 490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 553              		.loc 1 523 0
 554              		.cfi_startproc
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 20


 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 82B0     		sub	sp, sp, #8
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 565              		.loc 1 528 0
 566 0006 0023     		movs	r3, #0
 567 0008 FB71     		strb	r3, [r7, #7]
 568 000a 18E0     		b	.L29
 569              	.L31:
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 570              		.loc 1 530 0
 571 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 572 000e DB08     		lsrs	r3, r3, #3
 573 0010 BB71     		strb	r3, [r7, #6]
 531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 574              		.loc 1 531 0
 575 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 576 0014 03F00703 		and	r3, r3, #7
 577 0018 0122     		movs	r2, #1
 578 001a 02FA03F3 		lsl	r3, r2, r3
 579 001e 7B71     		strb	r3, [r7, #5]
 532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 580              		.loc 1 532 0
 581 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 582 0022 0A4A     		ldr	r2, .L32
 583 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 584 0026 7B79     		ldrb	r3, [r7, #5]
 585 0028 1340     		ands	r3, r3, r2
 586 002a DBB2     		uxtb	r3, r3
 587 002c 002B     		cmp	r3, #0
 588 002e 03D0     		beq	.L30
 533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 589              		.loc 1 534 0
 590 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 591 0032 1846     		mov	r0, r3
 592 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 593              	.L30:
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 594              		.loc 1 528 0 discriminator 2
 595 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 596 003a 0133     		adds	r3, r3, #1
 597 003c FB71     		strb	r3, [r7, #7]
 598              	.L29:
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 21


 599              		.loc 1 528 0 is_stmt 0 discriminator 1
 600 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 601 0040 012B     		cmp	r3, #1
 602 0042 E3D9     		bls	.L31
 535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 603              		.loc 1 537 0 is_stmt 1
 604 0044 00BF     		nop
 605 0046 0837     		adds	r7, r7, #8
 606              		.cfi_def_cfa_offset 8
 607 0048 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 004a 80BD     		pop	{r7, pc}
 611              	.L33:
 612              		.align	2
 613              	.L32:
 614 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 615              		.cfi_endproc
 616              	.LFE5:
 617              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 618              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 619              		.align	2
 620              		.global	CapSense_CSD_CheckIsSensorActive
 621              		.thumb
 622              		.thumb_func
 623              		.type	CapSense_CSD_CheckIsSensorActive, %function
 624              	CapSense_CSD_CheckIsSensorActive:
 625              	.LFB6:
 538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 22


 565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 626              		.loc 1 581 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 24
 629              		@ frame_needed = 1, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631 0000 80B4     		push	{r7}
 632              		.cfi_def_cfa_offset 4
 633              		.cfi_offset 7, -4
 634 0002 87B0     		sub	sp, sp, #28
 635              		.cfi_def_cfa_offset 32
 636 0004 00AF     		add	r7, sp, #0
 637              		.cfi_def_cfa_register 7
 638 0006 0346     		mov	r3, r0
 639 0008 FB71     		strb	r3, [r7, #7]
 582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 640              		.loc 1 584 0
 641 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 642 000c DB08     		lsrs	r3, r3, #3
 643 000e FB75     		strb	r3, [r7, #23]
 585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 644              		.loc 1 585 0
 645 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 646 0012 03F00703 		and	r3, r3, #7
 647 0016 0122     		movs	r2, #1
 648 0018 02FA03F3 		lsl	r3, r2, r3
 649 001c BB75     		strb	r3, [r7, #22]
 586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 650              		.loc 1 587 0
 651 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 652 0020 344A     		ldr	r2, .L43
 653 0022 D35C     		ldrb	r3, [r2, r3]
 654 0024 7B75     		strb	r3, [r7, #21]
 588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 655              		.loc 1 588 0
 656 0026 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 657 0028 334A     		ldr	r2, .L43+4
 658 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 23


 659 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 660              		.loc 1 589 0
 661 0030 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 662 0032 324A     		ldr	r2, .L43+8
 663 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 664 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 665              		.loc 1 590 0
 666 003a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 667 003c 304A     		ldr	r2, .L43+12
 668 003e D35C     		ldrb	r3, [r2, r3]
 669 0040 FB73     		strb	r3, [r7, #15]
 591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = widget;
 670              		.loc 1 592 0
 671 0042 7B7D     		ldrb	r3, [r7, #21]
 672 0044 BB73     		strb	r3, [r7, #14]
 593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 673              		.loc 1 596 0
 674 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 675 0048 2E4A     		ldr	r2, .L43+16
 676 004a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 677 004c BB7D     		ldrb	r3, [r7, #22]
 678 004e 1340     		ands	r3, r3, r2
 679 0050 DBB2     		uxtb	r3, r3
 680 0052 002B     		cmp	r3, #0
 681 0054 19D0     		beq	.L35
 597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 682              		.loc 1 599 0
 683 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 0058 2B4A     		ldr	r2, .L43+20
 685 005a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 686 005e 1946     		mov	r1, r3
 687 0060 7A8A     		ldrh	r2, [r7, #18]
 688 0062 3B8A     		ldrh	r3, [r7, #16]
 689 0064 D31A     		subs	r3, r2, r3
 690 0066 9942     		cmp	r1, r3
 691 0068 33DA     		bge	.L37
 600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 692              		.loc 1 601 0
 693 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 694 006c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 695 006e 2549     		ldr	r1, .L43+16
 696 0070 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 697 0072 BA7D     		ldrb	r2, [r7, #22]
 698 0074 D243     		mvns	r2, r2
 699 0076 D2B2     		uxtb	r2, r2
 700 0078 0A40     		ands	r2, r2, r1
 701 007a D1B2     		uxtb	r1, r2
 702 007c 214A     		ldr	r2, .L43+16
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 24


 703 007e D154     		strb	r1, [r2, r3]
 602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 704              		.loc 1 602 0
 705 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 706 0082 2249     		ldr	r1, .L43+24
 707 0084 FA7B     		ldrb	r2, [r7, #15]
 708 0086 CA54     		strb	r2, [r1, r3]
 709 0088 23E0     		b	.L37
 710              	.L35:
 603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 711              		.loc 1 608 0
 712 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 713 008c 1E4A     		ldr	r2, .L43+20
 714 008e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 715 0092 1946     		mov	r1, r3
 716 0094 7A8A     		ldrh	r2, [r7, #18]
 717 0096 3B8A     		ldrh	r3, [r7, #16]
 718 0098 1344     		add	r3, r3, r2
 719 009a 9942     		cmp	r1, r3
 720 009c 15DD     		ble	.L38
 609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 721              		.loc 1 611 0
 722 009e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 723 00a0 1A4A     		ldr	r2, .L43+24
 724 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 725 00a4 012B     		cmp	r3, #1
 726 00a6 08D8     		bhi	.L39
 612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 727              		.loc 1 613 0
 728 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 729 00aa FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 730 00ac 1549     		ldr	r1, .L43+16
 731 00ae 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 732 00b0 BA7D     		ldrb	r2, [r7, #22]
 733 00b2 0A43     		orrs	r2, r2, r1
 734 00b4 D1B2     		uxtb	r1, r2
 735 00b6 134A     		ldr	r2, .L43+16
 736 00b8 D154     		strb	r1, [r2, r3]
 737              	.L39:
 614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 738              		.loc 1 615 0
 739 00ba BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 740 00bc 134A     		ldr	r2, .L43+24
 741 00be D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 742 00c0 013A     		subs	r2, r2, #1
 743 00c2 D1B2     		uxtb	r1, r2
 744 00c4 114A     		ldr	r2, .L43+24
 745 00c6 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 25


 746 00c8 03E0     		b	.L37
 747              	.L38:
 616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 748              		.loc 1 620 0
 749 00ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 750 00cc 0F49     		ldr	r1, .L43+24
 751 00ce FA7B     		ldrb	r2, [r7, #15]
 752 00d0 CA54     		strb	r2, [r1, r3]
 753              	.L37:
 621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 754              		.loc 1 624 0
 755 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 756 00d4 0B4A     		ldr	r2, .L43+16
 757 00d6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 758 00d8 BB7D     		ldrb	r3, [r7, #22]
 759 00da 1340     		ands	r3, r3, r2
 760 00dc DBB2     		uxtb	r3, r3
 761 00de 002B     		cmp	r3, #0
 762 00e0 01D0     		beq	.L40
 763              		.loc 1 624 0 is_stmt 0 discriminator 1
 764 00e2 0123     		movs	r3, #1
 765 00e4 00E0     		b	.L41
 766              	.L40:
 767              		.loc 1 624 0 discriminator 2
 768 00e6 0023     		movs	r3, #0
 769              	.L41:
 625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 770              		.loc 1 625 0 is_stmt 1 discriminator 4
 771 00e8 1846     		mov	r0, r3
 772 00ea 1C37     		adds	r7, r7, #28
 773              		.cfi_def_cfa_offset 4
 774 00ec BD46     		mov	sp, r7
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 00ee 80BC     		pop	{r7}
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 00f0 7047     		bx	lr
 781              	.L44:
 782 00f2 00BF     		.align	2
 783              	.L43:
 784 00f4 00000000 		.word	CapSense_CSD_widgetNumber
 785 00f8 00000000 		.word	CapSense_CSD_fingerThreshold
 786 00fc 00000000 		.word	CapSense_CSD_hysteresis
 787 0100 00000000 		.word	CapSense_CSD_debounce
 788 0104 00000000 		.word	CapSense_CSD_sensorOnMask
 789 0108 00000000 		.word	CapSense_CSD_sensorSignal
 790 010c 00000000 		.word	CapSense_CSD_debounceCounter
 791              		.cfi_endproc
 792              	.LFE6:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 26


 793              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 794              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 795              		.align	2
 796              		.global	CapSense_CSD_CheckIsWidgetActive
 797              		.thumb
 798              		.thumb_func
 799              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 800              	CapSense_CSD_CheckIsWidgetActive:
 801              	.LFB7:
 626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 802              		.loc 1 653 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 16
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 84B0     		sub	sp, sp, #16
 811              		.cfi_def_cfa_offset 24
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 0346     		mov	r3, r0
 815 0008 FB71     		strb	r3, [r7, #7]
 654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 816              		.loc 1 654 0
 817 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 818 000c 0F4A     		ldr	r2, .L49
 819 000e D35C     		ldrb	r3, [r2, r3]
 820 0010 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 27


 655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 821              		.loc 1 655 0
 822 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 823 0014 0E4A     		ldr	r2, .L49+4
 824 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 825 0018 FB7B     		ldrb	r3, [r7, #15]
 826 001a 1344     		add	r3, r3, r2
 827 001c 7B73     		strb	r3, [r7, #13]
 656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 828              		.loc 1 656 0
 829 001e 0023     		movs	r3, #0
 830 0020 BB73     		strb	r3, [r7, #14]
 831              	.L47:
 657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 832              		.loc 1 661 0
 833 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 834 0024 1846     		mov	r0, r3
 835 0026 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 836 002a 0346     		mov	r3, r0
 837 002c 002B     		cmp	r3, #0
 838 002e 01D0     		beq	.L46
 662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 839              		.loc 1 663 0
 840 0030 0123     		movs	r3, #1
 841 0032 BB73     		strb	r3, [r7, #14]
 842              	.L46:
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 843              		.loc 1 665 0
 844 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 845 0036 0133     		adds	r3, r3, #1
 846 0038 FB73     		strb	r3, [r7, #15]
 666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 847              		.loc 1 667 0
 848 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 849 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 850 003e 9A42     		cmp	r2, r3
 851 0040 EFD3     		bcc	.L47
 668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 852              		.loc 1 671 0
 853 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 854              		.loc 1 672 0
 855 0044 1846     		mov	r0, r3
 856 0046 1037     		adds	r7, r7, #16
 857              		.cfi_def_cfa_offset 8
 858 0048 BD46     		mov	sp, r7
 859              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 28


 860              		@ sp needed
 861 004a 80BD     		pop	{r7, pc}
 862              	.L50:
 863              		.align	2
 864              	.L49:
 865 004c 00000000 		.word	CapSense_CSD_rawDataIndex
 866 0050 00000000 		.word	CapSense_CSD_numberOfSensors
 867              		.cfi_endproc
 868              	.LFE7:
 869              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 870              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 871              		.align	2
 872              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 873              		.thumb
 874              		.thumb_func
 875              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 876              	CapSense_CSD_CheckIsAnyWidgetActive:
 877              	.LFB8:
 673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 878              		.loc 1 697 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 29


 890              		.loc 1 699 0
 891 0006 0023     		movs	r3, #0
 892 0008 BB71     		strb	r3, [r7, #6]
 700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 893              		.loc 1 701 0
 894 000a 0023     		movs	r3, #0
 895 000c FB71     		strb	r3, [r7, #7]
 896 000e 0BE0     		b	.L52
 897              	.L54:
 702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 898              		.loc 1 703 0
 899 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 900 0012 1846     		mov	r0, r3
 901 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 902 0018 0346     		mov	r3, r0
 903 001a 002B     		cmp	r3, #0
 904 001c 01D0     		beq	.L53
 704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 905              		.loc 1 705 0
 906 001e 0123     		movs	r3, #1
 907 0020 BB71     		strb	r3, [r7, #6]
 908              	.L53:
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 909              		.loc 1 701 0 discriminator 2
 910 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 911 0024 0133     		adds	r3, r3, #1
 912 0026 FB71     		strb	r3, [r7, #7]
 913              	.L52:
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 914              		.loc 1 701 0 is_stmt 0 discriminator 1
 915 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 916 002a 012B     		cmp	r3, #1
 917 002c F0D9     		bls	.L54
 706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 918              		.loc 1 710 0 is_stmt 1
 919 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 920              		.loc 1 711 0
 921 0030 1846     		mov	r0, r3
 922 0032 0837     		adds	r7, r7, #8
 923              		.cfi_def_cfa_offset 8
 924 0034 BD46     		mov	sp, r7
 925              		.cfi_def_cfa_register 13
 926              		@ sp needed
 927 0036 80BD     		pop	{r7, pc}
 928              		.cfi_endproc
 929              	.LFE8:
 930              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 931              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 932              		.align	2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 30


 933              		.global	CapSense_CSD_EnableWidget
 934              		.thumb
 935              		.thumb_func
 936              		.type	CapSense_CSD_EnableWidget, %function
 937              	CapSense_CSD_EnableWidget:
 938              	.LFB9:
 712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 939              		.loc 1 743 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 16
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 85B0     		sub	sp, sp, #20
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 0346     		mov	r3, r0
 952 0008 FB71     		strb	r3, [r7, #7]
 744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 953              		.loc 1 746 0
 954 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 31


 955 000c 134A     		ldr	r2, .L58
 956 000e D35C     		ldrb	r3, [r2, r3]
 957 0010 FB73     		strb	r3, [r7, #15]
 747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 958              		.loc 1 747 0
 959 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 960 0014 124A     		ldr	r2, .L58+4
 961 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 962 0018 FB7B     		ldrb	r3, [r7, #15]
 963 001a 1344     		add	r3, r3, r2
 964 001c BB73     		strb	r3, [r7, #14]
 965              	.L57:
 748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 966              		.loc 1 752 0 discriminator 1
 967 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 968 0020 DB08     		lsrs	r3, r3, #3
 969 0022 7B73     		strb	r3, [r7, #13]
 753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 970              		.loc 1 753 0 discriminator 1
 971 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 972 0026 03F00703 		and	r3, r3, #7
 973 002a 0122     		movs	r2, #1
 974 002c 02FA03F3 		lsl	r3, r2, r3
 975 0030 3B73     		strb	r3, [r7, #12]
 754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 976              		.loc 1 755 0 discriminator 1
 977 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 978 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 979 0036 0B49     		ldr	r1, .L58+8
 980 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 981 003a 3A7B     		ldrb	r2, [r7, #12]
 982 003c 0A43     		orrs	r2, r2, r1
 983 003e D1B2     		uxtb	r1, r2
 984 0040 084A     		ldr	r2, .L58+8
 985 0042 D154     		strb	r1, [r2, r3]
 756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 986              		.loc 1 756 0 discriminator 1
 987 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 988 0046 0133     		adds	r3, r3, #1
 989 0048 FB73     		strb	r3, [r7, #15]
 757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 990              		.loc 1 758 0 discriminator 1
 991 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 992 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 993 004e 9A42     		cmp	r2, r3
 994 0050 E5D3     		bcc	.L57
 759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 995              		.loc 1 761 0
 996 0052 00BF     		nop
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 32


 997 0054 1437     		adds	r7, r7, #20
 998              		.cfi_def_cfa_offset 4
 999 0056 BD46     		mov	sp, r7
 1000              		.cfi_def_cfa_register 13
 1001              		@ sp needed
 1002 0058 80BC     		pop	{r7}
 1003              		.cfi_restore 7
 1004              		.cfi_def_cfa_offset 0
 1005 005a 7047     		bx	lr
 1006              	.L59:
 1007              		.align	2
 1008              	.L58:
 1009 005c 00000000 		.word	CapSense_CSD_rawDataIndex
 1010 0060 00000000 		.word	CapSense_CSD_numberOfSensors
 1011 0064 00000000 		.word	CapSense_CSD_sensorEnableMask
 1012              		.cfi_endproc
 1013              	.LFE9:
 1014              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1015              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1016              		.align	2
 1017              		.global	CapSense_CSD_DisableWidget
 1018              		.thumb
 1019              		.thumb_func
 1020              		.type	CapSense_CSD_DisableWidget, %function
 1021              	CapSense_CSD_DisableWidget:
 1022              	.LFB10:
 762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 33


 793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 1023              		.loc 1 793 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 16
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 1028 0000 80B4     		push	{r7}
 1029              		.cfi_def_cfa_offset 4
 1030              		.cfi_offset 7, -4
 1031 0002 85B0     		sub	sp, sp, #20
 1032              		.cfi_def_cfa_offset 24
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 1035 0006 0346     		mov	r3, r0
 1036 0008 FB71     		strb	r3, [r7, #7]
 794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1037              		.loc 1 796 0
 1038 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1039 000c 144A     		ldr	r2, .L62
 1040 000e D35C     		ldrb	r3, [r2, r3]
 1041 0010 FB73     		strb	r3, [r7, #15]
 797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1042              		.loc 1 797 0
 1043 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1044 0014 134A     		ldr	r2, .L62+4
 1045 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1046 0018 FB7B     		ldrb	r3, [r7, #15]
 1047 001a 1344     		add	r3, r3, r2
 1048 001c BB73     		strb	r3, [r7, #14]
 1049              	.L61:
 798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1050              		.loc 1 802 0 discriminator 1
 1051 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1052 0020 DB08     		lsrs	r3, r3, #3
 1053 0022 7B73     		strb	r3, [r7, #13]
 803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1054              		.loc 1 803 0 discriminator 1
 1055 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1056 0026 03F00703 		and	r3, r3, #7
 1057 002a 0122     		movs	r2, #1
 1058 002c 02FA03F3 		lsl	r3, r2, r3
 1059 0030 3B73     		strb	r3, [r7, #12]
 804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1060              		.loc 1 805 0 discriminator 1
 1061 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1062 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1063 0036 0C49     		ldr	r1, .L62+8
 1064 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1065 003a 3A7B     		ldrb	r2, [r7, #12]
 1066 003c D243     		mvns	r2, r2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 34


 1067 003e D2B2     		uxtb	r2, r2
 1068 0040 0A40     		ands	r2, r2, r1
 1069 0042 D1B2     		uxtb	r1, r2
 1070 0044 084A     		ldr	r2, .L62+8
 1071 0046 D154     		strb	r1, [r2, r3]
 806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1072              		.loc 1 806 0 discriminator 1
 1073 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1074 004a 0133     		adds	r3, r3, #1
 1075 004c FB73     		strb	r3, [r7, #15]
 807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1076              		.loc 1 808 0 discriminator 1
 1077 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1078 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1079 0052 9A42     		cmp	r2, r3
 1080 0054 E3D3     		bcc	.L61
 809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 810:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 811:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1081              		.loc 1 811 0
 1082 0056 00BF     		nop
 1083 0058 1437     		adds	r7, r7, #20
 1084              		.cfi_def_cfa_offset 4
 1085 005a BD46     		mov	sp, r7
 1086              		.cfi_def_cfa_register 13
 1087              		@ sp needed
 1088 005c 80BC     		pop	{r7}
 1089              		.cfi_restore 7
 1090              		.cfi_def_cfa_offset 0
 1091 005e 7047     		bx	lr
 1092              	.L63:
 1093              		.align	2
 1094              	.L62:
 1095 0060 00000000 		.word	CapSense_CSD_rawDataIndex
 1096 0064 00000000 		.word	CapSense_CSD_numberOfSensors
 1097 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 1098              		.cfi_endproc
 1099              	.LFE10:
 1100              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1101              		.text
 1102              	.Letext0:
 1103              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1104              		.file 3 "Generated_Source\\PSoC5\\CapSense_CSD.h"
 1105              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1106              		.section	.debug_info,"",%progbits
 1107              	.Ldebug_info0:
 1108 0000 55050000 		.4byte	0x555
 1109 0004 0400     		.2byte	0x4
 1110 0006 00000000 		.4byte	.Ldebug_abbrev0
 1111 000a 04       		.byte	0x4
 1112 000b 01       		.uleb128 0x1
 1113 000c 95000000 		.4byte	.LASF58
 1114 0010 0C       		.byte	0xc
 1115 0011 00000000 		.4byte	.LASF59
 1116 0015 D4030000 		.4byte	.LASF60
 1117 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 35


 1118 001d 00000000 		.4byte	0
 1119 0021 00000000 		.4byte	.Ldebug_line0
 1120 0025 02       		.uleb128 0x2
 1121 0026 01       		.byte	0x1
 1122 0027 06       		.byte	0x6
 1123 0028 48010000 		.4byte	.LASF0
 1124 002c 02       		.uleb128 0x2
 1125 002d 01       		.byte	0x1
 1126 002e 08       		.byte	0x8
 1127 002f 49030000 		.4byte	.LASF1
 1128 0033 02       		.uleb128 0x2
 1129 0034 02       		.byte	0x2
 1130 0035 05       		.byte	0x5
 1131 0036 66030000 		.4byte	.LASF2
 1132 003a 02       		.uleb128 0x2
 1133 003b 02       		.byte	0x2
 1134 003c 07       		.byte	0x7
 1135 003d 57020000 		.4byte	.LASF3
 1136 0041 02       		.uleb128 0x2
 1137 0042 04       		.byte	0x4
 1138 0043 05       		.byte	0x5
 1139 0044 94010000 		.4byte	.LASF4
 1140 0048 02       		.uleb128 0x2
 1141 0049 04       		.byte	0x4
 1142 004a 07       		.byte	0x7
 1143 004b 2B020000 		.4byte	.LASF5
 1144 004f 02       		.uleb128 0x2
 1145 0050 08       		.byte	0x8
 1146 0051 05       		.byte	0x5
 1147 0052 3A010000 		.4byte	.LASF6
 1148 0056 02       		.uleb128 0x2
 1149 0057 08       		.byte	0x8
 1150 0058 07       		.byte	0x7
 1151 0059 23010000 		.4byte	.LASF7
 1152 005d 03       		.uleb128 0x3
 1153 005e 04       		.byte	0x4
 1154 005f 05       		.byte	0x5
 1155 0060 696E7400 		.ascii	"int\000"
 1156 0064 02       		.uleb128 0x2
 1157 0065 04       		.byte	0x4
 1158 0066 07       		.byte	0x7
 1159 0067 1E020000 		.4byte	.LASF8
 1160 006b 04       		.uleb128 0x4
 1161 006c B7010000 		.4byte	.LASF9
 1162 0070 02       		.byte	0x2
 1163 0071 9201     		.2byte	0x192
 1164 0073 2C000000 		.4byte	0x2c
 1165 0077 04       		.uleb128 0x4
 1166 0078 48000000 		.4byte	.LASF10
 1167 007c 02       		.byte	0x2
 1168 007d 9301     		.2byte	0x193
 1169 007f 3A000000 		.4byte	0x3a
 1170 0083 04       		.uleb128 0x4
 1171 0084 C4010000 		.4byte	.LASF11
 1172 0088 02       		.byte	0x2
 1173 0089 9401     		.2byte	0x194
 1174 008b 48000000 		.4byte	0x48
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 36


 1175 008f 02       		.uleb128 0x2
 1176 0090 04       		.byte	0x4
 1177 0091 04       		.byte	0x4
 1178 0092 E1020000 		.4byte	.LASF12
 1179 0096 02       		.uleb128 0x2
 1180 0097 08       		.byte	0x8
 1181 0098 04       		.byte	0x4
 1182 0099 BD010000 		.4byte	.LASF13
 1183 009d 02       		.uleb128 0x2
 1184 009e 01       		.byte	0x1
 1185 009f 08       		.byte	0x8
 1186 00a0 49040000 		.4byte	.LASF14
 1187 00a4 02       		.uleb128 0x2
 1188 00a5 08       		.byte	0x8
 1189 00a6 04       		.byte	0x4
 1190 00a7 88020000 		.4byte	.LASF15
 1191 00ab 02       		.uleb128 0x2
 1192 00ac 04       		.byte	0x4
 1193 00ad 07       		.byte	0x7
 1194 00ae 7F020000 		.4byte	.LASF16
 1195 00b2 05       		.uleb128 0x5
 1196 00b3 D6010000 		.4byte	.LASF17
 1197 00b7 01       		.byte	0x1
 1198 00b8 7B       		.byte	0x7b
 1199 00b9 00000000 		.4byte	.LFB0
 1200 00bd 68000000 		.4byte	.LFE0-.LFB0
 1201 00c1 01       		.uleb128 0x1
 1202 00c2 9C       		.byte	0x9c
 1203 00c3 E4000000 		.4byte	0xe4
 1204 00c7 06       		.uleb128 0x6
 1205 00c8 6A020000 		.4byte	.LASF19
 1206 00cc 01       		.byte	0x1
 1207 00cd 7B       		.byte	0x7b
 1208 00ce 6B000000 		.4byte	0x6b
 1209 00d2 02       		.uleb128 0x2
 1210 00d3 91       		.byte	0x91
 1211 00d4 6F       		.sleb128 -17
 1212 00d5 07       		.uleb128 0x7
 1213 00d6 70030000 		.4byte	.LASF21
 1214 00da 01       		.byte	0x1
 1215 00db 7F       		.byte	0x7f
 1216 00dc 6B000000 		.4byte	0x6b
 1217 00e0 02       		.uleb128 0x2
 1218 00e1 91       		.byte	0x91
 1219 00e2 77       		.sleb128 -9
 1220 00e3 00       		.byte	0
 1221 00e4 08       		.uleb128 0x8
 1222 00e5 6F000000 		.4byte	.LASF18
 1223 00e9 01       		.byte	0x1
 1224 00ea C4       		.byte	0xc4
 1225 00eb 00000000 		.4byte	.LFB1
 1226 00ef 2E000000 		.4byte	.LFE1-.LFB1
 1227 00f3 01       		.uleb128 0x1
 1228 00f4 9C       		.byte	0x9c
 1229 00f5 08010000 		.4byte	0x108
 1230 00f9 06       		.uleb128 0x6
 1231 00fa 6A020000 		.4byte	.LASF19
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 37


 1232 00fe 01       		.byte	0x1
 1233 00ff C4       		.byte	0xc4
 1234 0100 6B000000 		.4byte	0x6b
 1235 0104 02       		.uleb128 0x2
 1236 0105 91       		.byte	0x91
 1237 0106 77       		.sleb128 -9
 1238 0107 00       		.byte	0
 1239 0108 08       		.uleb128 0x8
 1240 0109 08030000 		.4byte	.LASF20
 1241 010d 01       		.byte	0x1
 1242 010e F8       		.byte	0xf8
 1243 010f 00000000 		.4byte	.LFB2
 1244 0113 28000000 		.4byte	.LFE2-.LFB2
 1245 0117 01       		.uleb128 0x1
 1246 0118 9C       		.byte	0x9c
 1247 0119 2A010000 		.4byte	0x12a
 1248 011d 09       		.uleb128 0x9
 1249 011e 6900     		.ascii	"i\000"
 1250 0120 01       		.byte	0x1
 1251 0121 FB       		.byte	0xfb
 1252 0122 6B000000 		.4byte	0x6b
 1253 0126 02       		.uleb128 0x2
 1254 0127 91       		.byte	0x91
 1255 0128 77       		.sleb128 -9
 1256 0129 00       		.byte	0
 1257 012a 0A       		.uleb128 0xa
 1258 012b 94020000 		.4byte	.LASF22
 1259 012f 01       		.byte	0x1
 1260 0130 1901     		.2byte	0x119
 1261 0132 00000000 		.4byte	.LFB3
 1262 0136 70000000 		.4byte	.LFE3-.LFB3
 1263 013a 01       		.uleb128 0x1
 1264 013b 9C       		.byte	0x9c
 1265 013c 6C010000 		.4byte	0x16c
 1266 0140 0B       		.uleb128 0xb
 1267 0141 6900     		.ascii	"i\000"
 1268 0143 01       		.byte	0x1
 1269 0144 1C01     		.2byte	0x11c
 1270 0146 6B000000 		.4byte	0x6b
 1271 014a 02       		.uleb128 0x2
 1272 014b 91       		.byte	0x91
 1273 014c 77       		.sleb128 -9
 1274 014d 0B       		.uleb128 0xb
 1275 014e 706F7300 		.ascii	"pos\000"
 1276 0152 01       		.byte	0x1
 1277 0153 1D01     		.2byte	0x11d
 1278 0155 6B000000 		.4byte	0x6b
 1279 0159 02       		.uleb128 0x2
 1280 015a 91       		.byte	0x91
 1281 015b 76       		.sleb128 -10
 1282 015c 0C       		.uleb128 0xc
 1283 015d BC020000 		.4byte	.LASF23
 1284 0161 01       		.byte	0x1
 1285 0162 1E01     		.2byte	0x11e
 1286 0164 6B000000 		.4byte	0x6b
 1287 0168 02       		.uleb128 0x2
 1288 0169 91       		.byte	0x91
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 38


 1289 016a 75       		.sleb128 -11
 1290 016b 00       		.byte	0
 1291 016c 0A       		.uleb128 0xa
 1292 016d 95030000 		.4byte	.LASF24
 1293 0171 01       		.byte	0x1
 1294 0172 5C01     		.2byte	0x15c
 1295 0174 00000000 		.4byte	.LFB4
 1296 0178 40010000 		.4byte	.LFE4-.LFB4
 1297 017c 01       		.uleb128 0x1
 1298 017d 9C       		.byte	0x9c
 1299 017e DD010000 		.4byte	0x1dd
 1300 0182 0D       		.uleb128 0xd
 1301 0183 6A020000 		.4byte	.LASF19
 1302 0187 01       		.byte	0x1
 1303 0188 5C01     		.2byte	0x15c
 1304 018a 6B000000 		.4byte	0x6b
 1305 018e 02       		.uleb128 0x2
 1306 018f 91       		.byte	0x91
 1307 0190 67       		.sleb128 -25
 1308 0191 0C       		.uleb128 0xc
 1309 0192 71020000 		.4byte	.LASF25
 1310 0196 01       		.byte	0x1
 1311 0197 5F01     		.2byte	0x15f
 1312 0199 83000000 		.4byte	0x83
 1313 019d 02       		.uleb128 0x2
 1314 019e 91       		.byte	0x91
 1315 019f 6C       		.sleb128 -20
 1316 01a0 0C       		.uleb128 0xc
 1317 01a1 30050000 		.4byte	.LASF26
 1318 01a5 01       		.byte	0x1
 1319 01a6 6001     		.2byte	0x160
 1320 01a8 77000000 		.4byte	0x77
 1321 01ac 02       		.uleb128 0x2
 1322 01ad 91       		.byte	0x91
 1323 01ae 76       		.sleb128 -10
 1324 01af 0C       		.uleb128 0xc
 1325 01b0 4F000000 		.4byte	.LASF27
 1326 01b4 01       		.byte	0x1
 1327 01b5 6101     		.2byte	0x161
 1328 01b7 77000000 		.4byte	0x77
 1329 01bb 02       		.uleb128 0x2
 1330 01bc 91       		.byte	0x91
 1331 01bd 70       		.sleb128 -16
 1332 01be 0C       		.uleb128 0xc
 1333 01bf 70030000 		.4byte	.LASF21
 1334 01c3 01       		.byte	0x1
 1335 01c4 6201     		.2byte	0x162
 1336 01c6 6B000000 		.4byte	0x6b
 1337 01ca 02       		.uleb128 0x2
 1338 01cb 91       		.byte	0x91
 1339 01cc 75       		.sleb128 -11
 1340 01cd 0C       		.uleb128 0xc
 1341 01ce 57030000 		.4byte	.LASF28
 1342 01d2 01       		.byte	0x1
 1343 01d3 6301     		.2byte	0x163
 1344 01d5 77000000 		.4byte	0x77
 1345 01d9 02       		.uleb128 0x2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 39


 1346 01da 91       		.byte	0x91
 1347 01db 72       		.sleb128 -14
 1348 01dc 00       		.byte	0
 1349 01dd 0A       		.uleb128 0xa
 1350 01de 68040000 		.4byte	.LASF29
 1351 01e2 01       		.byte	0x1
 1352 01e3 0902     		.2byte	0x209
 1353 01e5 00000000 		.4byte	.LFB5
 1354 01e9 50000000 		.4byte	.LFE5-.LFB5
 1355 01ed 01       		.uleb128 0x1
 1356 01ee 9C       		.byte	0x9c
 1357 01ef 1F020000 		.4byte	0x21f
 1358 01f3 0B       		.uleb128 0xb
 1359 01f4 6900     		.ascii	"i\000"
 1360 01f6 01       		.byte	0x1
 1361 01f7 0C02     		.2byte	0x20c
 1362 01f9 6B000000 		.4byte	0x6b
 1363 01fd 02       		.uleb128 0x2
 1364 01fe 91       		.byte	0x91
 1365 01ff 77       		.sleb128 -9
 1366 0200 0B       		.uleb128 0xb
 1367 0201 706F7300 		.ascii	"pos\000"
 1368 0205 01       		.byte	0x1
 1369 0206 0D02     		.2byte	0x20d
 1370 0208 6B000000 		.4byte	0x6b
 1371 020c 02       		.uleb128 0x2
 1372 020d 91       		.byte	0x91
 1373 020e 76       		.sleb128 -10
 1374 020f 0C       		.uleb128 0xc
 1375 0210 BC020000 		.4byte	.LASF23
 1376 0214 01       		.byte	0x1
 1377 0215 0E02     		.2byte	0x20e
 1378 0217 6B000000 		.4byte	0x6b
 1379 021b 02       		.uleb128 0x2
 1380 021c 91       		.byte	0x91
 1381 021d 75       		.sleb128 -11
 1382 021e 00       		.byte	0
 1383 021f 0E       		.uleb128 0xe
 1384 0220 6D010000 		.4byte	.LASF35
 1385 0224 01       		.byte	0x1
 1386 0225 4302     		.2byte	0x243
 1387 0227 6B000000 		.4byte	0x6b
 1388 022b 00000000 		.4byte	.LFB6
 1389 022f 10010000 		.4byte	.LFE6-.LFB6
 1390 0233 01       		.uleb128 0x1
 1391 0234 9C       		.byte	0x9c
 1392 0235 B2020000 		.4byte	0x2b2
 1393 0239 0D       		.uleb128 0xd
 1394 023a 6A020000 		.4byte	.LASF19
 1395 023e 01       		.byte	0x1
 1396 023f 4302     		.2byte	0x243
 1397 0241 6B000000 		.4byte	0x6b
 1398 0245 02       		.uleb128 0x2
 1399 0246 91       		.byte	0x91
 1400 0247 67       		.sleb128 -25
 1401 0248 0C       		.uleb128 0xc
 1402 0249 A4040000 		.4byte	.LASF30
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 40


 1403 024d 01       		.byte	0x1
 1404 024e 4602     		.2byte	0x246
 1405 0250 6B000000 		.4byte	0x6b
 1406 0254 02       		.uleb128 0x2
 1407 0255 91       		.byte	0x91
 1408 0256 6E       		.sleb128 -18
 1409 0257 0B       		.uleb128 0xb
 1410 0258 706F7300 		.ascii	"pos\000"
 1411 025c 01       		.byte	0x1
 1412 025d 4802     		.2byte	0x248
 1413 025f 6B000000 		.4byte	0x6b
 1414 0263 02       		.uleb128 0x2
 1415 0264 91       		.byte	0x91
 1416 0265 77       		.sleb128 -9
 1417 0266 0C       		.uleb128 0xc
 1418 0267 77030000 		.4byte	.LASF31
 1419 026b 01       		.byte	0x1
 1420 026c 4902     		.2byte	0x249
 1421 026e 6B000000 		.4byte	0x6b
 1422 0272 02       		.uleb128 0x2
 1423 0273 91       		.byte	0x91
 1424 0274 76       		.sleb128 -10
 1425 0275 0C       		.uleb128 0xc
 1426 0276 70030000 		.4byte	.LASF21
 1427 027a 01       		.byte	0x1
 1428 027b 4B02     		.2byte	0x24b
 1429 027d 6B000000 		.4byte	0x6b
 1430 0281 02       		.uleb128 0x2
 1431 0282 91       		.byte	0x91
 1432 0283 75       		.sleb128 -11
 1433 0284 0C       		.uleb128 0xc
 1434 0285 5F000000 		.4byte	.LASF32
 1435 0289 01       		.byte	0x1
 1436 028a 4C02     		.2byte	0x24c
 1437 028c 77000000 		.4byte	0x77
 1438 0290 02       		.uleb128 0x2
 1439 0291 91       		.byte	0x91
 1440 0292 72       		.sleb128 -14
 1441 0293 0C       		.uleb128 0xc
 1442 0294 CB010000 		.4byte	.LASF33
 1443 0298 01       		.byte	0x1
 1444 0299 4D02     		.2byte	0x24d
 1445 029b 77000000 		.4byte	0x77
 1446 029f 02       		.uleb128 0x2
 1447 02a0 91       		.byte	0x91
 1448 02a1 70       		.sleb128 -16
 1449 02a2 0C       		.uleb128 0xc
 1450 02a3 76020000 		.4byte	.LASF34
 1451 02a7 01       		.byte	0x1
 1452 02a8 4E02     		.2byte	0x24e
 1453 02aa 6B000000 		.4byte	0x6b
 1454 02ae 02       		.uleb128 0x2
 1455 02af 91       		.byte	0x91
 1456 02b0 6F       		.sleb128 -17
 1457 02b1 00       		.byte	0
 1458 02b2 0F       		.uleb128 0xf
 1459 02b3 D6040000 		.4byte	.LASF36
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 41


 1460 02b7 01       		.byte	0x1
 1461 02b8 8B02     		.2byte	0x28b
 1462 02ba 6B000000 		.4byte	0x6b
 1463 02be 00000000 		.4byte	.LFB7
 1464 02c2 54000000 		.4byte	.LFE7-.LFB7
 1465 02c6 01       		.uleb128 0x1
 1466 02c7 9C       		.byte	0x9c
 1467 02c8 09030000 		.4byte	0x309
 1468 02cc 0D       		.uleb128 0xd
 1469 02cd 70030000 		.4byte	.LASF21
 1470 02d1 01       		.byte	0x1
 1471 02d2 8B02     		.2byte	0x28b
 1472 02d4 6B000000 		.4byte	0x6b
 1473 02d8 02       		.uleb128 0x2
 1474 02d9 91       		.byte	0x91
 1475 02da 6F       		.sleb128 -17
 1476 02db 0C       		.uleb128 0xc
 1477 02dc 54010000 		.4byte	.LASF37
 1478 02e0 01       		.byte	0x1
 1479 02e1 8E02     		.2byte	0x28e
 1480 02e3 6B000000 		.4byte	0x6b
 1481 02e7 02       		.uleb128 0x2
 1482 02e8 91       		.byte	0x91
 1483 02e9 77       		.sleb128 -9
 1484 02ea 0C       		.uleb128 0xc
 1485 02eb 5D010000 		.4byte	.LASF38
 1486 02ef 01       		.byte	0x1
 1487 02f0 8F02     		.2byte	0x28f
 1488 02f2 6B000000 		.4byte	0x6b
 1489 02f6 02       		.uleb128 0x2
 1490 02f7 91       		.byte	0x91
 1491 02f8 75       		.sleb128 -11
 1492 02f9 0C       		.uleb128 0xc
 1493 02fa 8E010000 		.4byte	.LASF39
 1494 02fe 01       		.byte	0x1
 1495 02ff 9002     		.2byte	0x290
 1496 0301 6B000000 		.4byte	0x6b
 1497 0305 02       		.uleb128 0x2
 1498 0306 91       		.byte	0x91
 1499 0307 76       		.sleb128 -10
 1500 0308 00       		.byte	0
 1501 0309 0F       		.uleb128 0xf
 1502 030a B2040000 		.4byte	.LASF40
 1503 030e 01       		.byte	0x1
 1504 030f B702     		.2byte	0x2b7
 1505 0311 6B000000 		.4byte	0x6b
 1506 0315 00000000 		.4byte	.LFB8
 1507 0319 38000000 		.4byte	.LFE8-.LFB8
 1508 031d 01       		.uleb128 0x1
 1509 031e 9C       		.byte	0x9c
 1510 031f 40030000 		.4byte	0x340
 1511 0323 0B       		.uleb128 0xb
 1512 0324 6900     		.ascii	"i\000"
 1513 0326 01       		.byte	0x1
 1514 0327 BA02     		.2byte	0x2ba
 1515 0329 6B000000 		.4byte	0x6b
 1516 032d 02       		.uleb128 0x2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 42


 1517 032e 91       		.byte	0x91
 1518 032f 77       		.sleb128 -9
 1519 0330 0C       		.uleb128 0xc
 1520 0331 8E010000 		.4byte	.LASF39
 1521 0335 01       		.byte	0x1
 1522 0336 BB02     		.2byte	0x2bb
 1523 0338 6B000000 		.4byte	0x6b
 1524 033c 02       		.uleb128 0x2
 1525 033d 91       		.byte	0x91
 1526 033e 76       		.sleb128 -10
 1527 033f 00       		.byte	0
 1528 0340 10       		.uleb128 0x10
 1529 0341 4E040000 		.4byte	.LASF41
 1530 0345 01       		.byte	0x1
 1531 0346 E502     		.2byte	0x2e5
 1532 0348 00000000 		.4byte	.LFB9
 1533 034c 68000000 		.4byte	.LFE9-.LFB9
 1534 0350 01       		.uleb128 0x1
 1535 0351 9C       		.byte	0x9c
 1536 0352 A2030000 		.4byte	0x3a2
 1537 0356 0D       		.uleb128 0xd
 1538 0357 70030000 		.4byte	.LASF21
 1539 035b 01       		.byte	0x1
 1540 035c E502     		.2byte	0x2e5
 1541 035e 6B000000 		.4byte	0x6b
 1542 0362 02       		.uleb128 0x2
 1543 0363 91       		.byte	0x91
 1544 0364 6F       		.sleb128 -17
 1545 0365 0B       		.uleb128 0xb
 1546 0366 706F7300 		.ascii	"pos\000"
 1547 036a 01       		.byte	0x1
 1548 036b E802     		.2byte	0x2e8
 1549 036d 6B000000 		.4byte	0x6b
 1550 0371 02       		.uleb128 0x2
 1551 0372 91       		.byte	0x91
 1552 0373 75       		.sleb128 -11
 1553 0374 0C       		.uleb128 0xc
 1554 0375 BC020000 		.4byte	.LASF23
 1555 0379 01       		.byte	0x1
 1556 037a E902     		.2byte	0x2e9
 1557 037c 6B000000 		.4byte	0x6b
 1558 0380 02       		.uleb128 0x2
 1559 0381 91       		.byte	0x91
 1560 0382 74       		.sleb128 -12
 1561 0383 0C       		.uleb128 0xc
 1562 0384 54010000 		.4byte	.LASF37
 1563 0388 01       		.byte	0x1
 1564 0389 EA02     		.2byte	0x2ea
 1565 038b 6B000000 		.4byte	0x6b
 1566 038f 02       		.uleb128 0x2
 1567 0390 91       		.byte	0x91
 1568 0391 77       		.sleb128 -9
 1569 0392 0C       		.uleb128 0xc
 1570 0393 5D010000 		.4byte	.LASF38
 1571 0397 01       		.byte	0x1
 1572 0398 EB02     		.2byte	0x2eb
 1573 039a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 43


 1574 039e 02       		.uleb128 0x2
 1575 039f 91       		.byte	0x91
 1576 03a0 76       		.sleb128 -10
 1577 03a1 00       		.byte	0
 1578 03a2 10       		.uleb128 0x10
 1579 03a3 38050000 		.4byte	.LASF42
 1580 03a7 01       		.byte	0x1
 1581 03a8 1703     		.2byte	0x317
 1582 03aa 00000000 		.4byte	.LFB10
 1583 03ae 6C000000 		.4byte	.LFE10-.LFB10
 1584 03b2 01       		.uleb128 0x1
 1585 03b3 9C       		.byte	0x9c
 1586 03b4 04040000 		.4byte	0x404
 1587 03b8 0D       		.uleb128 0xd
 1588 03b9 70030000 		.4byte	.LASF21
 1589 03bd 01       		.byte	0x1
 1590 03be 1703     		.2byte	0x317
 1591 03c0 6B000000 		.4byte	0x6b
 1592 03c4 02       		.uleb128 0x2
 1593 03c5 91       		.byte	0x91
 1594 03c6 6F       		.sleb128 -17
 1595 03c7 0B       		.uleb128 0xb
 1596 03c8 706F7300 		.ascii	"pos\000"
 1597 03cc 01       		.byte	0x1
 1598 03cd 1A03     		.2byte	0x31a
 1599 03cf 6B000000 		.4byte	0x6b
 1600 03d3 02       		.uleb128 0x2
 1601 03d4 91       		.byte	0x91
 1602 03d5 75       		.sleb128 -11
 1603 03d6 0C       		.uleb128 0xc
 1604 03d7 BC020000 		.4byte	.LASF23
 1605 03db 01       		.byte	0x1
 1606 03dc 1B03     		.2byte	0x31b
 1607 03de 6B000000 		.4byte	0x6b
 1608 03e2 02       		.uleb128 0x2
 1609 03e3 91       		.byte	0x91
 1610 03e4 74       		.sleb128 -12
 1611 03e5 0C       		.uleb128 0xc
 1612 03e6 54010000 		.4byte	.LASF37
 1613 03ea 01       		.byte	0x1
 1614 03eb 1C03     		.2byte	0x31c
 1615 03ed 6B000000 		.4byte	0x6b
 1616 03f1 02       		.uleb128 0x2
 1617 03f2 91       		.byte	0x91
 1618 03f3 77       		.sleb128 -9
 1619 03f4 0C       		.uleb128 0xc
 1620 03f5 5D010000 		.4byte	.LASF38
 1621 03f9 01       		.byte	0x1
 1622 03fa 1D03     		.2byte	0x31d
 1623 03fc 6B000000 		.4byte	0x6b
 1624 0400 02       		.uleb128 0x2
 1625 0401 91       		.byte	0x91
 1626 0402 76       		.sleb128 -10
 1627 0403 00       		.byte	0
 1628 0404 11       		.uleb128 0x11
 1629 0405 77000000 		.4byte	0x77
 1630 0409 14040000 		.4byte	0x414
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 44


 1631 040d 12       		.uleb128 0x12
 1632 040e AB000000 		.4byte	0xab
 1633 0412 01       		.byte	0x1
 1634 0413 00       		.byte	0
 1635 0414 13       		.uleb128 0x13
 1636 0415 7E030000 		.4byte	.LASF43
 1637 0419 03       		.byte	0x3
 1638 041a BA02     		.2byte	0x2ba
 1639 041c 04040000 		.4byte	0x404
 1640 0420 11       		.uleb128 0x11
 1641 0421 6B000000 		.4byte	0x6b
 1642 0425 30040000 		.4byte	0x430
 1643 0429 12       		.uleb128 0x12
 1644 042a AB000000 		.4byte	0xab
 1645 042e 00       		.byte	0
 1646 042f 00       		.byte	0
 1647 0430 13       		.uleb128 0x13
 1648 0431 C3020000 		.4byte	.LASF44
 1649 0435 04       		.byte	0x4
 1650 0436 0401     		.2byte	0x104
 1651 0438 20040000 		.4byte	0x420
 1652 043c 11       		.uleb128 0x11
 1653 043d 4C040000 		.4byte	0x44c
 1654 0441 4C040000 		.4byte	0x44c
 1655 0445 12       		.uleb128 0x12
 1656 0446 AB000000 		.4byte	0xab
 1657 044a 01       		.byte	0x1
 1658 044b 00       		.byte	0
 1659 044c 14       		.uleb128 0x14
 1660 044d 6B000000 		.4byte	0x6b
 1661 0451 13       		.uleb128 0x13
 1662 0452 9D010000 		.4byte	.LASF45
 1663 0456 04       		.byte	0x4
 1664 0457 0501     		.2byte	0x105
 1665 0459 5D040000 		.4byte	0x45d
 1666 045d 14       		.uleb128 0x14
 1667 045e 3C040000 		.4byte	0x43c
 1668 0462 15       		.uleb128 0x15
 1669 0463 EC010000 		.4byte	.LASF46
 1670 0467 01       		.byte	0x1
 1671 0468 29       		.byte	0x29
 1672 0469 04040000 		.4byte	0x404
 1673 046d 05       		.uleb128 0x5
 1674 046e 03       		.byte	0x3
 1675 046f 00000000 		.4byte	CapSense_CSD_sensorBaseline
 1676 0473 11       		.uleb128 0x11
 1677 0474 6B000000 		.4byte	0x6b
 1678 0478 83040000 		.4byte	0x483
 1679 047c 12       		.uleb128 0x12
 1680 047d AB000000 		.4byte	0xab
 1681 0481 01       		.byte	0x1
 1682 0482 00       		.byte	0
 1683 0483 15       		.uleb128 0x15
 1684 0484 11050000 		.4byte	.LASF47
 1685 0488 01       		.byte	0x1
 1686 0489 2A       		.byte	0x2a
 1687 048a 73040000 		.4byte	0x473
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 45


 1688 048e 05       		.uleb128 0x5
 1689 048f 03       		.byte	0x3
 1690 0490 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 1691 0494 15       		.uleb128 0x15
 1692 0495 3D020000 		.4byte	.LASF48
 1693 0499 01       		.byte	0x1
 1694 049a 2B       		.byte	0x2b
 1695 049b 04040000 		.4byte	0x404
 1696 049f 05       		.uleb128 0x5
 1697 04a0 03       		.byte	0x3
 1698 04a1 00000000 		.4byte	CapSense_CSD_sensorSignal
 1699 04a5 15       		.uleb128 0x15
 1700 04a6 53050000 		.4byte	.LASF49
 1701 04aa 01       		.byte	0x1
 1702 04ab 2C       		.byte	0x2c
 1703 04ac 20040000 		.4byte	0x420
 1704 04b0 05       		.uleb128 0x5
 1705 04b1 03       		.byte	0x3
 1706 04b2 00000000 		.4byte	CapSense_CSD_sensorOnMask
 1707 04b6 15       		.uleb128 0x15
 1708 04b7 E7020000 		.4byte	.LASF50
 1709 04bb 01       		.byte	0x1
 1710 04bc 2E       		.byte	0x2e
 1711 04bd 73040000 		.4byte	0x473
 1712 04c1 05       		.uleb128 0x5
 1713 04c2 03       		.byte	0x3
 1714 04c3 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 1715 04c7 15       		.uleb128 0x15
 1716 04c8 2C030000 		.4byte	.LASF51
 1717 04cc 01       		.byte	0x1
 1718 04cd 30       		.byte	0x30
 1719 04ce 04040000 		.4byte	0x404
 1720 04d2 05       		.uleb128 0x5
 1721 04d3 03       		.byte	0x3
 1722 04d4 00000000 		.4byte	CapSense_CSD_fingerThreshold
 1723 04d8 15       		.uleb128 0x15
 1724 04d9 2D040000 		.4byte	.LASF52
 1725 04dd 01       		.byte	0x1
 1726 04de 34       		.byte	0x34
 1727 04df 04040000 		.4byte	0x404
 1728 04e3 05       		.uleb128 0x5
 1729 04e4 03       		.byte	0x3
 1730 04e5 00000000 		.4byte	CapSense_CSD_noiseThreshold
 1731 04e9 15       		.uleb128 0x15
 1732 04ea 8C040000 		.4byte	.LASF53
 1733 04ee 01       		.byte	0x1
 1734 04ef 38       		.byte	0x38
 1735 04f0 04040000 		.4byte	0x404
 1736 04f4 05       		.uleb128 0x5
 1737 04f5 03       		.byte	0x3
 1738 04f6 00000000 		.4byte	CapSense_CSD_hysteresis
 1739 04fa 15       		.uleb128 0x15
 1740 04fb 08020000 		.4byte	.LASF54
 1741 04ff 01       		.byte	0x1
 1742 0500 3C       		.byte	0x3c
 1743 0501 73040000 		.4byte	0x473
 1744 0505 05       		.uleb128 0x5
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 46


 1745 0506 03       		.byte	0x3
 1746 0507 00000000 		.4byte	CapSense_CSD_debounce
 1747 050b 11       		.uleb128 0x11
 1748 050c 6B000000 		.4byte	0x6b
 1749 0510 1B050000 		.4byte	0x51b
 1750 0514 12       		.uleb128 0x12
 1751 0515 AB000000 		.4byte	0xab
 1752 0519 02       		.byte	0x2
 1753 051a 00       		.byte	0
 1754 051b 15       		.uleb128 0x15
 1755 051c 2B000000 		.4byte	.LASF55
 1756 0520 01       		.byte	0x1
 1757 0521 40       		.byte	0x40
 1758 0522 0B050000 		.4byte	0x50b
 1759 0526 05       		.uleb128 0x5
 1760 0527 03       		.byte	0x3
 1761 0528 00000000 		.4byte	CapSense_CSD_debounceCounter
 1762 052c 15       		.uleb128 0x15
 1763 052d F7040000 		.4byte	.LASF56
 1764 0531 01       		.byte	0x1
 1765 0532 44       		.byte	0x44
 1766 0533 3D050000 		.4byte	0x53d
 1767 0537 05       		.uleb128 0x5
 1768 0538 03       		.byte	0x3
 1769 0539 00000000 		.4byte	CapSense_CSD_rawDataIndex
 1770 053d 14       		.uleb128 0x14
 1771 053e 3C040000 		.4byte	0x43c
 1772 0542 15       		.uleb128 0x15
 1773 0543 B7030000 		.4byte	.LASF57
 1774 0547 01       		.byte	0x1
 1775 0548 4A       		.byte	0x4a
 1776 0549 53050000 		.4byte	0x553
 1777 054d 05       		.uleb128 0x5
 1778 054e 03       		.byte	0x3
 1779 054f 00000000 		.4byte	CapSense_CSD_numberOfSensors
 1780 0553 14       		.uleb128 0x14
 1781 0554 3C040000 		.4byte	0x43c
 1782 0558 00       		.byte	0
 1783              		.section	.debug_abbrev,"",%progbits
 1784              	.Ldebug_abbrev0:
 1785 0000 01       		.uleb128 0x1
 1786 0001 11       		.uleb128 0x11
 1787 0002 01       		.byte	0x1
 1788 0003 25       		.uleb128 0x25
 1789 0004 0E       		.uleb128 0xe
 1790 0005 13       		.uleb128 0x13
 1791 0006 0B       		.uleb128 0xb
 1792 0007 03       		.uleb128 0x3
 1793 0008 0E       		.uleb128 0xe
 1794 0009 1B       		.uleb128 0x1b
 1795 000a 0E       		.uleb128 0xe
 1796 000b 55       		.uleb128 0x55
 1797 000c 17       		.uleb128 0x17
 1798 000d 11       		.uleb128 0x11
 1799 000e 01       		.uleb128 0x1
 1800 000f 10       		.uleb128 0x10
 1801 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 47


 1802 0011 00       		.byte	0
 1803 0012 00       		.byte	0
 1804 0013 02       		.uleb128 0x2
 1805 0014 24       		.uleb128 0x24
 1806 0015 00       		.byte	0
 1807 0016 0B       		.uleb128 0xb
 1808 0017 0B       		.uleb128 0xb
 1809 0018 3E       		.uleb128 0x3e
 1810 0019 0B       		.uleb128 0xb
 1811 001a 03       		.uleb128 0x3
 1812 001b 0E       		.uleb128 0xe
 1813 001c 00       		.byte	0
 1814 001d 00       		.byte	0
 1815 001e 03       		.uleb128 0x3
 1816 001f 24       		.uleb128 0x24
 1817 0020 00       		.byte	0
 1818 0021 0B       		.uleb128 0xb
 1819 0022 0B       		.uleb128 0xb
 1820 0023 3E       		.uleb128 0x3e
 1821 0024 0B       		.uleb128 0xb
 1822 0025 03       		.uleb128 0x3
 1823 0026 08       		.uleb128 0x8
 1824 0027 00       		.byte	0
 1825 0028 00       		.byte	0
 1826 0029 04       		.uleb128 0x4
 1827 002a 16       		.uleb128 0x16
 1828 002b 00       		.byte	0
 1829 002c 03       		.uleb128 0x3
 1830 002d 0E       		.uleb128 0xe
 1831 002e 3A       		.uleb128 0x3a
 1832 002f 0B       		.uleb128 0xb
 1833 0030 3B       		.uleb128 0x3b
 1834 0031 05       		.uleb128 0x5
 1835 0032 49       		.uleb128 0x49
 1836 0033 13       		.uleb128 0x13
 1837 0034 00       		.byte	0
 1838 0035 00       		.byte	0
 1839 0036 05       		.uleb128 0x5
 1840 0037 2E       		.uleb128 0x2e
 1841 0038 01       		.byte	0x1
 1842 0039 3F       		.uleb128 0x3f
 1843 003a 19       		.uleb128 0x19
 1844 003b 03       		.uleb128 0x3
 1845 003c 0E       		.uleb128 0xe
 1846 003d 3A       		.uleb128 0x3a
 1847 003e 0B       		.uleb128 0xb
 1848 003f 3B       		.uleb128 0x3b
 1849 0040 0B       		.uleb128 0xb
 1850 0041 27       		.uleb128 0x27
 1851 0042 19       		.uleb128 0x19
 1852 0043 11       		.uleb128 0x11
 1853 0044 01       		.uleb128 0x1
 1854 0045 12       		.uleb128 0x12
 1855 0046 06       		.uleb128 0x6
 1856 0047 40       		.uleb128 0x40
 1857 0048 18       		.uleb128 0x18
 1858 0049 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 48


 1859 004b 19       		.uleb128 0x19
 1860 004c 01       		.uleb128 0x1
 1861 004d 13       		.uleb128 0x13
 1862 004e 00       		.byte	0
 1863 004f 00       		.byte	0
 1864 0050 06       		.uleb128 0x6
 1865 0051 05       		.uleb128 0x5
 1866 0052 00       		.byte	0
 1867 0053 03       		.uleb128 0x3
 1868 0054 0E       		.uleb128 0xe
 1869 0055 3A       		.uleb128 0x3a
 1870 0056 0B       		.uleb128 0xb
 1871 0057 3B       		.uleb128 0x3b
 1872 0058 0B       		.uleb128 0xb
 1873 0059 49       		.uleb128 0x49
 1874 005a 13       		.uleb128 0x13
 1875 005b 02       		.uleb128 0x2
 1876 005c 18       		.uleb128 0x18
 1877 005d 00       		.byte	0
 1878 005e 00       		.byte	0
 1879 005f 07       		.uleb128 0x7
 1880 0060 34       		.uleb128 0x34
 1881 0061 00       		.byte	0
 1882 0062 03       		.uleb128 0x3
 1883 0063 0E       		.uleb128 0xe
 1884 0064 3A       		.uleb128 0x3a
 1885 0065 0B       		.uleb128 0xb
 1886 0066 3B       		.uleb128 0x3b
 1887 0067 0B       		.uleb128 0xb
 1888 0068 49       		.uleb128 0x49
 1889 0069 13       		.uleb128 0x13
 1890 006a 02       		.uleb128 0x2
 1891 006b 18       		.uleb128 0x18
 1892 006c 00       		.byte	0
 1893 006d 00       		.byte	0
 1894 006e 08       		.uleb128 0x8
 1895 006f 2E       		.uleb128 0x2e
 1896 0070 01       		.byte	0x1
 1897 0071 3F       		.uleb128 0x3f
 1898 0072 19       		.uleb128 0x19
 1899 0073 03       		.uleb128 0x3
 1900 0074 0E       		.uleb128 0xe
 1901 0075 3A       		.uleb128 0x3a
 1902 0076 0B       		.uleb128 0xb
 1903 0077 3B       		.uleb128 0x3b
 1904 0078 0B       		.uleb128 0xb
 1905 0079 27       		.uleb128 0x27
 1906 007a 19       		.uleb128 0x19
 1907 007b 11       		.uleb128 0x11
 1908 007c 01       		.uleb128 0x1
 1909 007d 12       		.uleb128 0x12
 1910 007e 06       		.uleb128 0x6
 1911 007f 40       		.uleb128 0x40
 1912 0080 18       		.uleb128 0x18
 1913 0081 9642     		.uleb128 0x2116
 1914 0083 19       		.uleb128 0x19
 1915 0084 01       		.uleb128 0x1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 49


 1916 0085 13       		.uleb128 0x13
 1917 0086 00       		.byte	0
 1918 0087 00       		.byte	0
 1919 0088 09       		.uleb128 0x9
 1920 0089 34       		.uleb128 0x34
 1921 008a 00       		.byte	0
 1922 008b 03       		.uleb128 0x3
 1923 008c 08       		.uleb128 0x8
 1924 008d 3A       		.uleb128 0x3a
 1925 008e 0B       		.uleb128 0xb
 1926 008f 3B       		.uleb128 0x3b
 1927 0090 0B       		.uleb128 0xb
 1928 0091 49       		.uleb128 0x49
 1929 0092 13       		.uleb128 0x13
 1930 0093 02       		.uleb128 0x2
 1931 0094 18       		.uleb128 0x18
 1932 0095 00       		.byte	0
 1933 0096 00       		.byte	0
 1934 0097 0A       		.uleb128 0xa
 1935 0098 2E       		.uleb128 0x2e
 1936 0099 01       		.byte	0x1
 1937 009a 3F       		.uleb128 0x3f
 1938 009b 19       		.uleb128 0x19
 1939 009c 03       		.uleb128 0x3
 1940 009d 0E       		.uleb128 0xe
 1941 009e 3A       		.uleb128 0x3a
 1942 009f 0B       		.uleb128 0xb
 1943 00a0 3B       		.uleb128 0x3b
 1944 00a1 05       		.uleb128 0x5
 1945 00a2 27       		.uleb128 0x27
 1946 00a3 19       		.uleb128 0x19
 1947 00a4 11       		.uleb128 0x11
 1948 00a5 01       		.uleb128 0x1
 1949 00a6 12       		.uleb128 0x12
 1950 00a7 06       		.uleb128 0x6
 1951 00a8 40       		.uleb128 0x40
 1952 00a9 18       		.uleb128 0x18
 1953 00aa 9642     		.uleb128 0x2116
 1954 00ac 19       		.uleb128 0x19
 1955 00ad 01       		.uleb128 0x1
 1956 00ae 13       		.uleb128 0x13
 1957 00af 00       		.byte	0
 1958 00b0 00       		.byte	0
 1959 00b1 0B       		.uleb128 0xb
 1960 00b2 34       		.uleb128 0x34
 1961 00b3 00       		.byte	0
 1962 00b4 03       		.uleb128 0x3
 1963 00b5 08       		.uleb128 0x8
 1964 00b6 3A       		.uleb128 0x3a
 1965 00b7 0B       		.uleb128 0xb
 1966 00b8 3B       		.uleb128 0x3b
 1967 00b9 05       		.uleb128 0x5
 1968 00ba 49       		.uleb128 0x49
 1969 00bb 13       		.uleb128 0x13
 1970 00bc 02       		.uleb128 0x2
 1971 00bd 18       		.uleb128 0x18
 1972 00be 00       		.byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 50


 1973 00bf 00       		.byte	0
 1974 00c0 0C       		.uleb128 0xc
 1975 00c1 34       		.uleb128 0x34
 1976 00c2 00       		.byte	0
 1977 00c3 03       		.uleb128 0x3
 1978 00c4 0E       		.uleb128 0xe
 1979 00c5 3A       		.uleb128 0x3a
 1980 00c6 0B       		.uleb128 0xb
 1981 00c7 3B       		.uleb128 0x3b
 1982 00c8 05       		.uleb128 0x5
 1983 00c9 49       		.uleb128 0x49
 1984 00ca 13       		.uleb128 0x13
 1985 00cb 02       		.uleb128 0x2
 1986 00cc 18       		.uleb128 0x18
 1987 00cd 00       		.byte	0
 1988 00ce 00       		.byte	0
 1989 00cf 0D       		.uleb128 0xd
 1990 00d0 05       		.uleb128 0x5
 1991 00d1 00       		.byte	0
 1992 00d2 03       		.uleb128 0x3
 1993 00d3 0E       		.uleb128 0xe
 1994 00d4 3A       		.uleb128 0x3a
 1995 00d5 0B       		.uleb128 0xb
 1996 00d6 3B       		.uleb128 0x3b
 1997 00d7 05       		.uleb128 0x5
 1998 00d8 49       		.uleb128 0x49
 1999 00d9 13       		.uleb128 0x13
 2000 00da 02       		.uleb128 0x2
 2001 00db 18       		.uleb128 0x18
 2002 00dc 00       		.byte	0
 2003 00dd 00       		.byte	0
 2004 00de 0E       		.uleb128 0xe
 2005 00df 2E       		.uleb128 0x2e
 2006 00e0 01       		.byte	0x1
 2007 00e1 3F       		.uleb128 0x3f
 2008 00e2 19       		.uleb128 0x19
 2009 00e3 03       		.uleb128 0x3
 2010 00e4 0E       		.uleb128 0xe
 2011 00e5 3A       		.uleb128 0x3a
 2012 00e6 0B       		.uleb128 0xb
 2013 00e7 3B       		.uleb128 0x3b
 2014 00e8 05       		.uleb128 0x5
 2015 00e9 27       		.uleb128 0x27
 2016 00ea 19       		.uleb128 0x19
 2017 00eb 49       		.uleb128 0x49
 2018 00ec 13       		.uleb128 0x13
 2019 00ed 11       		.uleb128 0x11
 2020 00ee 01       		.uleb128 0x1
 2021 00ef 12       		.uleb128 0x12
 2022 00f0 06       		.uleb128 0x6
 2023 00f1 40       		.uleb128 0x40
 2024 00f2 18       		.uleb128 0x18
 2025 00f3 9742     		.uleb128 0x2117
 2026 00f5 19       		.uleb128 0x19
 2027 00f6 01       		.uleb128 0x1
 2028 00f7 13       		.uleb128 0x13
 2029 00f8 00       		.byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 51


 2030 00f9 00       		.byte	0
 2031 00fa 0F       		.uleb128 0xf
 2032 00fb 2E       		.uleb128 0x2e
 2033 00fc 01       		.byte	0x1
 2034 00fd 3F       		.uleb128 0x3f
 2035 00fe 19       		.uleb128 0x19
 2036 00ff 03       		.uleb128 0x3
 2037 0100 0E       		.uleb128 0xe
 2038 0101 3A       		.uleb128 0x3a
 2039 0102 0B       		.uleb128 0xb
 2040 0103 3B       		.uleb128 0x3b
 2041 0104 05       		.uleb128 0x5
 2042 0105 27       		.uleb128 0x27
 2043 0106 19       		.uleb128 0x19
 2044 0107 49       		.uleb128 0x49
 2045 0108 13       		.uleb128 0x13
 2046 0109 11       		.uleb128 0x11
 2047 010a 01       		.uleb128 0x1
 2048 010b 12       		.uleb128 0x12
 2049 010c 06       		.uleb128 0x6
 2050 010d 40       		.uleb128 0x40
 2051 010e 18       		.uleb128 0x18
 2052 010f 9642     		.uleb128 0x2116
 2053 0111 19       		.uleb128 0x19
 2054 0112 01       		.uleb128 0x1
 2055 0113 13       		.uleb128 0x13
 2056 0114 00       		.byte	0
 2057 0115 00       		.byte	0
 2058 0116 10       		.uleb128 0x10
 2059 0117 2E       		.uleb128 0x2e
 2060 0118 01       		.byte	0x1
 2061 0119 3F       		.uleb128 0x3f
 2062 011a 19       		.uleb128 0x19
 2063 011b 03       		.uleb128 0x3
 2064 011c 0E       		.uleb128 0xe
 2065 011d 3A       		.uleb128 0x3a
 2066 011e 0B       		.uleb128 0xb
 2067 011f 3B       		.uleb128 0x3b
 2068 0120 05       		.uleb128 0x5
 2069 0121 27       		.uleb128 0x27
 2070 0122 19       		.uleb128 0x19
 2071 0123 11       		.uleb128 0x11
 2072 0124 01       		.uleb128 0x1
 2073 0125 12       		.uleb128 0x12
 2074 0126 06       		.uleb128 0x6
 2075 0127 40       		.uleb128 0x40
 2076 0128 18       		.uleb128 0x18
 2077 0129 9742     		.uleb128 0x2117
 2078 012b 19       		.uleb128 0x19
 2079 012c 01       		.uleb128 0x1
 2080 012d 13       		.uleb128 0x13
 2081 012e 00       		.byte	0
 2082 012f 00       		.byte	0
 2083 0130 11       		.uleb128 0x11
 2084 0131 01       		.uleb128 0x1
 2085 0132 01       		.byte	0x1
 2086 0133 49       		.uleb128 0x49
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 52


 2087 0134 13       		.uleb128 0x13
 2088 0135 01       		.uleb128 0x1
 2089 0136 13       		.uleb128 0x13
 2090 0137 00       		.byte	0
 2091 0138 00       		.byte	0
 2092 0139 12       		.uleb128 0x12
 2093 013a 21       		.uleb128 0x21
 2094 013b 00       		.byte	0
 2095 013c 49       		.uleb128 0x49
 2096 013d 13       		.uleb128 0x13
 2097 013e 2F       		.uleb128 0x2f
 2098 013f 0B       		.uleb128 0xb
 2099 0140 00       		.byte	0
 2100 0141 00       		.byte	0
 2101 0142 13       		.uleb128 0x13
 2102 0143 34       		.uleb128 0x34
 2103 0144 00       		.byte	0
 2104 0145 03       		.uleb128 0x3
 2105 0146 0E       		.uleb128 0xe
 2106 0147 3A       		.uleb128 0x3a
 2107 0148 0B       		.uleb128 0xb
 2108 0149 3B       		.uleb128 0x3b
 2109 014a 05       		.uleb128 0x5
 2110 014b 49       		.uleb128 0x49
 2111 014c 13       		.uleb128 0x13
 2112 014d 3F       		.uleb128 0x3f
 2113 014e 19       		.uleb128 0x19
 2114 014f 3C       		.uleb128 0x3c
 2115 0150 19       		.uleb128 0x19
 2116 0151 00       		.byte	0
 2117 0152 00       		.byte	0
 2118 0153 14       		.uleb128 0x14
 2119 0154 26       		.uleb128 0x26
 2120 0155 00       		.byte	0
 2121 0156 49       		.uleb128 0x49
 2122 0157 13       		.uleb128 0x13
 2123 0158 00       		.byte	0
 2124 0159 00       		.byte	0
 2125 015a 15       		.uleb128 0x15
 2126 015b 34       		.uleb128 0x34
 2127 015c 00       		.byte	0
 2128 015d 03       		.uleb128 0x3
 2129 015e 0E       		.uleb128 0xe
 2130 015f 3A       		.uleb128 0x3a
 2131 0160 0B       		.uleb128 0xb
 2132 0161 3B       		.uleb128 0x3b
 2133 0162 0B       		.uleb128 0xb
 2134 0163 49       		.uleb128 0x49
 2135 0164 13       		.uleb128 0x13
 2136 0165 3F       		.uleb128 0x3f
 2137 0166 19       		.uleb128 0x19
 2138 0167 02       		.uleb128 0x2
 2139 0168 18       		.uleb128 0x18
 2140 0169 00       		.byte	0
 2141 016a 00       		.byte	0
 2142 016b 00       		.byte	0
 2143              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 53


 2144 0000 6C000000 		.4byte	0x6c
 2145 0004 0200     		.2byte	0x2
 2146 0006 00000000 		.4byte	.Ldebug_info0
 2147 000a 04       		.byte	0x4
 2148 000b 00       		.byte	0
 2149 000c 0000     		.2byte	0
 2150 000e 0000     		.2byte	0
 2151 0010 00000000 		.4byte	.LFB0
 2152 0014 68000000 		.4byte	.LFE0-.LFB0
 2153 0018 00000000 		.4byte	.LFB1
 2154 001c 2E000000 		.4byte	.LFE1-.LFB1
 2155 0020 00000000 		.4byte	.LFB2
 2156 0024 28000000 		.4byte	.LFE2-.LFB2
 2157 0028 00000000 		.4byte	.LFB3
 2158 002c 70000000 		.4byte	.LFE3-.LFB3
 2159 0030 00000000 		.4byte	.LFB4
 2160 0034 40010000 		.4byte	.LFE4-.LFB4
 2161 0038 00000000 		.4byte	.LFB5
 2162 003c 50000000 		.4byte	.LFE5-.LFB5
 2163 0040 00000000 		.4byte	.LFB6
 2164 0044 10010000 		.4byte	.LFE6-.LFB6
 2165 0048 00000000 		.4byte	.LFB7
 2166 004c 54000000 		.4byte	.LFE7-.LFB7
 2167 0050 00000000 		.4byte	.LFB8
 2168 0054 38000000 		.4byte	.LFE8-.LFB8
 2169 0058 00000000 		.4byte	.LFB9
 2170 005c 68000000 		.4byte	.LFE9-.LFB9
 2171 0060 00000000 		.4byte	.LFB10
 2172 0064 6C000000 		.4byte	.LFE10-.LFB10
 2173 0068 00000000 		.4byte	0
 2174 006c 00000000 		.4byte	0
 2175              		.section	.debug_ranges,"",%progbits
 2176              	.Ldebug_ranges0:
 2177 0000 00000000 		.4byte	.LFB0
 2178 0004 68000000 		.4byte	.LFE0
 2179 0008 00000000 		.4byte	.LFB1
 2180 000c 2E000000 		.4byte	.LFE1
 2181 0010 00000000 		.4byte	.LFB2
 2182 0014 28000000 		.4byte	.LFE2
 2183 0018 00000000 		.4byte	.LFB3
 2184 001c 70000000 		.4byte	.LFE3
 2185 0020 00000000 		.4byte	.LFB4
 2186 0024 40010000 		.4byte	.LFE4
 2187 0028 00000000 		.4byte	.LFB5
 2188 002c 50000000 		.4byte	.LFE5
 2189 0030 00000000 		.4byte	.LFB6
 2190 0034 10010000 		.4byte	.LFE6
 2191 0038 00000000 		.4byte	.LFB7
 2192 003c 54000000 		.4byte	.LFE7
 2193 0040 00000000 		.4byte	.LFB8
 2194 0044 38000000 		.4byte	.LFE8
 2195 0048 00000000 		.4byte	.LFB9
 2196 004c 68000000 		.4byte	.LFE9
 2197 0050 00000000 		.4byte	.LFB10
 2198 0054 6C000000 		.4byte	.LFE10
 2199 0058 00000000 		.4byte	0
 2200 005c 00000000 		.4byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 54


 2201              		.section	.debug_line,"",%progbits
 2202              	.Ldebug_line0:
 2203 0000 41020000 		.section	.debug_str,"MS",%progbits,1
 2203      02007700 
 2203      00000201 
 2203      FB0E0D00 
 2203      01010101 
 2204              	.LASF59:
 2205 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 2205      72617465 
 2205      645F536F 
 2205      75726365 
 2205      5C50536F 
 2206              	.LASF55:
 2207 002b 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 2207      656E7365 
 2207      5F435344 
 2207      5F646562 
 2207      6F756E63 
 2208              	.LASF10:
 2209 0048 75696E74 		.ascii	"uint16\000"
 2209      313600
 2210              	.LASF27:
 2211 004f 66696C74 		.ascii	"filteredRawData\000"
 2211      65726564 
 2211      52617744 
 2211      61746100 
 2212              	.LASF32:
 2213 005f 66696E67 		.ascii	"fingerThreshold\000"
 2213      65725468 
 2213      72657368 
 2213      6F6C6400 
 2214              	.LASF18:
 2215 006f 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2215      656E7365 
 2215      5F435344 
 2215      5F496E69 
 2215      7469616C 
 2216              	.LASF58:
 2217 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2217      43313120 
 2217      352E342E 
 2217      31203230 
 2217      31363036 
 2218 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2218      20726576 
 2218      6973696F 
 2218      6E203233 
 2218      37373135 
 2219 00fb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2219      66756E63 
 2219      74696F6E 
 2219      2D736563 
 2219      74696F6E 
 2220              	.LASF7:
 2221 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 2221      206C6F6E 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 55


 2221      6720756E 
 2221      7369676E 
 2221      65642069 
 2222              	.LASF6:
 2223 013a 6C6F6E67 		.ascii	"long long int\000"
 2223      206C6F6E 
 2223      6720696E 
 2223      7400
 2224              	.LASF0:
 2225 0148 7369676E 		.ascii	"signed char\000"
 2225      65642063 
 2225      68617200 
 2226              	.LASF37:
 2227 0154 72617749 		.ascii	"rawIndex\000"
 2227      6E646578 
 2227      00
 2228              	.LASF38:
 2229 015d 6E756D62 		.ascii	"numberOfSensors\000"
 2229      65724F66 
 2229      53656E73 
 2229      6F727300 
 2230              	.LASF35:
 2231 016d 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2231      656E7365 
 2231      5F435344 
 2231      5F436865 
 2231      636B4973 
 2232              	.LASF39:
 2233 018e 73746174 		.ascii	"state\000"
 2233      6500
 2234              	.LASF4:
 2235 0194 6C6F6E67 		.ascii	"long int\000"
 2235      20696E74 
 2235      00
 2236              	.LASF45:
 2237 019d 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2237      656E7365 
 2237      5F435344 
 2237      5F776964 
 2237      6765744E 
 2238              	.LASF9:
 2239 01b7 75696E74 		.ascii	"uint8\000"
 2239      3800
 2240              	.LASF13:
 2241 01bd 646F7562 		.ascii	"double\000"
 2241      6C6500
 2242              	.LASF11:
 2243 01c4 75696E74 		.ascii	"uint32\000"
 2243      333200
 2244              	.LASF33:
 2245 01cb 68797374 		.ascii	"hysteresis\000"
 2245      65726573 
 2245      697300
 2246              	.LASF17:
 2247 01d6 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 2247      656E7365 
 2247      5F435344 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 56


 2247      5F426173 
 2247      65496E69 
 2248              	.LASF46:
 2249 01ec 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 2249      656E7365 
 2249      5F435344 
 2249      5F73656E 
 2249      736F7242 
 2250              	.LASF54:
 2251 0208 43617053 		.ascii	"CapSense_CSD_debounce\000"
 2251      656E7365 
 2251      5F435344 
 2251      5F646562 
 2251      6F756E63 
 2252              	.LASF8:
 2253 021e 756E7369 		.ascii	"unsigned int\000"
 2253      676E6564 
 2253      20696E74 
 2253      00
 2254              	.LASF5:
 2255 022b 6C6F6E67 		.ascii	"long unsigned int\000"
 2255      20756E73 
 2255      69676E65 
 2255      6420696E 
 2255      7400
 2256              	.LASF48:
 2257 023d 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 2257      656E7365 
 2257      5F435344 
 2257      5F73656E 
 2257      736F7253 
 2258              	.LASF3:
 2259 0257 73686F72 		.ascii	"short unsigned int\000"
 2259      7420756E 
 2259      7369676E 
 2259      65642069 
 2259      6E7400
 2260              	.LASF19:
 2261 026a 73656E73 		.ascii	"sensor\000"
 2261      6F7200
 2262              	.LASF25:
 2263 0271 63616C63 		.ascii	"calc\000"
 2263      00
 2264              	.LASF34:
 2265 0276 6465626F 		.ascii	"debounce\000"
 2265      756E6365 
 2265      00
 2266              	.LASF16:
 2267 027f 73697A65 		.ascii	"sizetype\000"
 2267      74797065 
 2267      00
 2268              	.LASF15:
 2269 0288 6C6F6E67 		.ascii	"long double\000"
 2269      20646F75 
 2269      626C6500 
 2270              	.LASF22:
 2271 0294 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 57


 2271      656E7365 
 2271      5F435344 
 2271      5F496E69 
 2271      7469616C 
 2272              	.LASF23:
 2273 02bc 656E4D61 		.ascii	"enMask\000"
 2273      736B00
 2274              	.LASF44:
 2275 02c3 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2275      656E7365 
 2275      5F435344 
 2275      5F73656E 
 2275      736F7245 
 2276              	.LASF12:
 2277 02e1 666C6F61 		.ascii	"float\000"
 2277      7400
 2278              	.LASF50:
 2279 02e7 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 2279      656E7365 
 2279      5F435344 
 2279      5F6C6F77 
 2279      42617365 
 2280              	.LASF20:
 2281 0308 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 2281      656E7365 
 2281      5F435344 
 2281      5F496E69 
 2281      7469616C 
 2282              	.LASF51:
 2283 032c 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 2283      656E7365 
 2283      5F435344 
 2283      5F66696E 
 2283      67657254 
 2284              	.LASF1:
 2285 0349 756E7369 		.ascii	"unsigned char\000"
 2285      676E6564 
 2285      20636861 
 2285      7200
 2286              	.LASF28:
 2287 0357 6E6F6973 		.ascii	"noiseThreshold\000"
 2287      65546872 
 2287      6573686F 
 2287      6C6400
 2288              	.LASF2:
 2289 0366 73686F72 		.ascii	"short int\000"
 2289      7420696E 
 2289      7400
 2290              	.LASF21:
 2291 0370 77696467 		.ascii	"widget\000"
 2291      657400
 2292              	.LASF31:
 2293 0377 6F6E4D61 		.ascii	"onMask\000"
 2293      736B00
 2294              	.LASF43:
 2295 037e 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2295      656E7365 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 58


 2295      5F435344 
 2295      5F73656E 
 2295      736F7252 
 2296              	.LASF24:
 2297 0395 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 2297      656E7365 
 2297      5F435344 
 2297      5F557064 
 2297      61746553 
 2298              	.LASF57:
 2299 03b7 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 2299      656E7365 
 2299      5F435344 
 2299      5F6E756D 
 2299      6265724F 
 2300              	.LASF60:
 2301 03d4 483A5C50 		.ascii	"H:\\P4P\\New\\P4P_Project-130\\Capsense_stuff\\Cap_"
 2301      34505C4E 
 2301      65775C50 
 2301      34505F50 
 2301      726F6A65 
 2302 0402 53656E73 		.ascii	"Sense.cydsn\\CapSense_CSD_WithTuner01.cydsn\000"
 2302      652E6379 
 2302      64736E5C 
 2302      43617053 
 2302      656E7365 
 2303              	.LASF52:
 2304 042d 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 2304      656E7365 
 2304      5F435344 
 2304      5F6E6F69 
 2304      73655468 
 2305              	.LASF14:
 2306 0449 63686172 		.ascii	"char\000"
 2306      00
 2307              	.LASF41:
 2308 044e 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 2308      656E7365 
 2308      5F435344 
 2308      5F456E61 
 2308      626C6557 
 2309              	.LASF29:
 2310 0468 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 2310      656E7365 
 2310      5F435344 
 2310      5F557064 
 2310      61746545 
 2311              	.LASF53:
 2312 048c 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 2312      656E7365 
 2312      5F435344 
 2312      5F687973 
 2312      74657265 
 2313              	.LASF30:
 2314 04a4 6465626F 		.ascii	"debounceIndex\000"
 2314      756E6365 
 2314      496E6465 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc4shfHk.s 			page 59


 2314      7800
 2315              	.LASF40:
 2316 04b2 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 2316      656E7365 
 2316      5F435344 
 2316      5F436865 
 2316      636B4973 
 2317              	.LASF36:
 2318 04d6 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 2318      656E7365 
 2318      5F435344 
 2318      5F436865 
 2318      636B4973 
 2319              	.LASF56:
 2320 04f7 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 2320      656E7365 
 2320      5F435344 
 2320      5F726177 
 2320      44617461 
 2321              	.LASF47:
 2322 0511 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 2322      656E7365 
 2322      5F435344 
 2322      5F73656E 
 2322      736F7242 
 2323              	.LASF26:
 2324 0530 74656D70 		.ascii	"tempRaw\000"
 2324      52617700 
 2325              	.LASF42:
 2326 0538 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 2326      656E7365 
 2326      5F435344 
 2326      5F446973 
 2326      61626C65 
 2327              	.LASF49:
 2328 0553 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 2328      656E7365 
 2328      5F435344 
 2328      5F73656E 
 2328      736F724F 
 2329              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
