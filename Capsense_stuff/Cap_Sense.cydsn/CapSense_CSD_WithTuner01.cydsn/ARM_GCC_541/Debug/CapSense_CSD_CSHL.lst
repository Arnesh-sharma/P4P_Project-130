ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_CSD_sensorBaseline,2,4
  20              		.comm	CapSense_CSD_sensorBaselineLow,1,4
  21              		.comm	CapSense_CSD_sensorSignal,2,4
  22              		.comm	CapSense_CSD_sensorOnMask,1,4
  23              		.comm	CapSense_CSD_lowBaselineResetCnt,1,4
  24              		.global	CapSense_CSD_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_CSD_fingerThreshold, %object
  28              		.size	CapSense_CSD_fingerThreshold, 2
  29              	CapSense_CSD_fingerThreshold:
  30 0000 6400     		.short	100
  31              		.global	CapSense_CSD_noiseThreshold
  32 0002 0000     		.align	2
  33              		.type	CapSense_CSD_noiseThreshold, %object
  34              		.size	CapSense_CSD_noiseThreshold, 2
  35              	CapSense_CSD_noiseThreshold:
  36 0004 1400     		.short	20
  37              		.global	CapSense_CSD_hysteresis
  38 0006 0000     		.align	2
  39              		.type	CapSense_CSD_hysteresis, %object
  40              		.size	CapSense_CSD_hysteresis, 2
  41              	CapSense_CSD_hysteresis:
  42 0008 0A00     		.short	10
  43              		.global	CapSense_CSD_debounce
  44 000a 0000     		.align	2
  45              		.type	CapSense_CSD_debounce, %object
  46              		.size	CapSense_CSD_debounce, 1
  47              	CapSense_CSD_debounce:
  48 000c 05       		.byte	5
  49              		.global	CapSense_CSD_debounceCounter
  50              		.bss
  51              		.align	2
  52              		.type	CapSense_CSD_debounceCounter, %object
  53              		.size	CapSense_CSD_debounceCounter, 2
  54              	CapSense_CSD_debounceCounter:
  55 0000 0000     		.space	2
  56              		.global	CapSense_CSD_rawDataIndex
  57              		.section	.rodata
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 2


  58              		.align	2
  59              		.type	CapSense_CSD_rawDataIndex, %object
  60              		.size	CapSense_CSD_rawDataIndex, 1
  61              	CapSense_CSD_rawDataIndex:
  62 0000 00       		.space	1
  63              		.global	CapSense_CSD_numberOfSensors
  64 0001 000000   		.align	2
  65              		.type	CapSense_CSD_numberOfSensors, %object
  66              		.size	CapSense_CSD_numberOfSensors, 1
  67              	CapSense_CSD_numberOfSensors:
  68 0004 01       		.byte	1
  69              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  70              		.align	2
  71              		.global	CapSense_CSD_BaseInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	CapSense_CSD_BaseInit, %function
  75              	CapSense_CSD_BaseInit:
  76              	.LFB0:
  77              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 3


  38:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     100u, 
  50:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     20u, 
  54:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     10u, 
  58:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, 
  62:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  71:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  72:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  74:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
  75:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  77:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  79:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  81:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  82:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  83:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  84:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  85:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  86:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  87:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  88:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  89:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  90:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  91:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
  92:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
  93:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
  94:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 4


  95:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  96:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
  97:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
  98:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  99:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 100:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 101:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 102:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 103:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 104:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 105:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 106:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 107:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 108:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 109:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 110:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 111:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 112:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 113:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 114:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 115:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 116:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 117:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 118:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 119:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 120:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 121:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 122:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  78              		.loc 1 122 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 16
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 85B0     		sub	sp, sp, #20
  87              		.cfi_def_cfa_offset 24
  88 0004 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  90 0006 0346     		mov	r3, r0
  91 0008 FB71     		strb	r3, [r7, #7]
 123:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 124:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 125:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
  92              		.loc 1 125 0
  93 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  94 000c 0F4A     		ldr	r2, .L2
  95 000e D35C     		ldrb	r3, [r2, r3]
  96 0010 FB73     		strb	r3, [r7, #15]
 126:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 127:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 128:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 129:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 130:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 131:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 132:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 5


 133:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 134:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 135:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 136:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 137:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 138:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 139:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  97              		.loc 1 139 0
  98 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  99 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 100 0016 0E49     		ldr	r1, .L2+4
 101 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 102 001c 0D4A     		ldr	r2, .L2+8
 103 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 140:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 104              		.loc 1 140 0
 105 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 106 0024 0C4A     		ldr	r2, .L2+12
 107 0026 0021     		movs	r1, #0
 108 0028 D154     		strb	r1, [r2, r3]
 141:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 109              		.loc 1 141 0
 110 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 111 002c 0B4A     		ldr	r2, .L2+16
 112 002e 0021     		movs	r1, #0
 113 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 142:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 143:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[widget] =  CapSense_CSD_debounce[widget];
 114              		.loc 1 143 0
 115 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 116 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 117 0038 0949     		ldr	r1, .L2+20
 118 003a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 119 003c 094A     		ldr	r2, .L2+24
 120 003e D154     		strb	r1, [r2, r3]
 144:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 145:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 146:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 147:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 148:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 149:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 150:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 151:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 152:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 153:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 154:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 155:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 156:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 157:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 158:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 159:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 160:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 161:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 162:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 163:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 164:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 165:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 6


 166:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 167:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 168:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 169:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 170:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 121              		.loc 1 170 0
 122 0040 00BF     		nop
 123 0042 1437     		adds	r7, r7, #20
 124              		.cfi_def_cfa_offset 4
 125 0044 BD46     		mov	sp, r7
 126              		.cfi_def_cfa_register 13
 127              		@ sp needed
 128 0046 80BC     		pop	{r7}
 129              		.cfi_restore 7
 130              		.cfi_def_cfa_offset 0
 131 0048 7047     		bx	lr
 132              	.L3:
 133 004a 00BF     		.align	2
 134              	.L2:
 135 004c 00000000 		.word	CapSense_CSD_widgetNumber
 136 0050 00000000 		.word	CapSense_CSD_sensorRaw
 137 0054 00000000 		.word	CapSense_CSD_sensorBaseline
 138 0058 00000000 		.word	CapSense_CSD_sensorBaselineLow
 139 005c 00000000 		.word	CapSense_CSD_sensorSignal
 140 0060 00000000 		.word	CapSense_CSD_debounce
 141 0064 00000000 		.word	CapSense_CSD_debounceCounter
 142              		.cfi_endproc
 143              	.LFE0:
 144              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 145              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 146              		.align	2
 147              		.global	CapSense_CSD_InitializeSensorBaseline
 148              		.thumb
 149              		.thumb_func
 150              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 151              	CapSense_CSD_InitializeSensorBaseline:
 152              	.LFB1:
 171:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 172:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 173:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 174:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 175:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 176:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 177:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 178:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 179:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 180:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 181:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 182:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 183:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 184:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 185:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 186:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 187:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 188:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 189:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 190:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 7


 191:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 192:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 193:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 194:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 195:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 196:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 153              		.loc 1 196 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 0346     		mov	r3, r0
 166 0008 FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 198:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 167              		.loc 1 198 0
 168 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 169 000c 1846     		mov	r0, r3
 170 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 199:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 171              		.loc 1 199 0
 172 0012 00BF     		nop
 173              	.L5:
 174              		.loc 1 199 0 is_stmt 0 discriminator 1
 175 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 176 0018 0346     		mov	r3, r0
 177 001a 002B     		cmp	r3, #0
 178 001c FAD1     		bne	.L5
 200:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 201:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 202:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 203:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 204:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 205:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 206:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 179              		.loc 1 206 0 is_stmt 1
 180 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 181 0020 1846     		mov	r0, r3
 182 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 207:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 208:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 209:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 210:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 211:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 212:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 213:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 214:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 215:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 216:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 217:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 8


 218:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 219:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 220:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 221:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 222:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 223:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 183              		.loc 1 223 0
 184 0026 00BF     		nop
 185 0028 0837     		adds	r7, r7, #8
 186              		.cfi_def_cfa_offset 8
 187 002a BD46     		mov	sp, r7
 188              		.cfi_def_cfa_register 13
 189              		@ sp needed
 190 002c 80BD     		pop	{r7, pc}
 191              		.cfi_endproc
 192              	.LFE1:
 193              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 194 002e 00BF     		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 195              		.align	2
 196              		.global	CapSense_CSD_InitializeAllBaselines
 197              		.thumb
 198              		.thumb_func
 199              		.type	CapSense_CSD_InitializeAllBaselines, %function
 200              	CapSense_CSD_InitializeAllBaselines:
 201              	.LFB2:
 224:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 225:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 226:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 228:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 229:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 230:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 231:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 232:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 233:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 234:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 235:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 236:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 237:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 238:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 239:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 240:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 241:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 242:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 243:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 244:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 245:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 246:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 247:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 248:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 202              		.loc 1 248 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 9


 209              		.cfi_offset 14, -4
 210 0002 82B0     		sub	sp, sp, #8
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 250:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 251:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 214              		.loc 1 252 0
 215 0006 0023     		movs	r3, #0
 216 0008 FB71     		strb	r3, [r7, #7]
 217 000a 06E0     		b	.L7
 218              	.L8:
 253:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 254:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 219              		.loc 1 254 0 discriminator 3
 220 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 000e 1846     		mov	r0, r3
 222 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 223              		.loc 1 252 0 discriminator 3
 224 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 225 0016 0133     		adds	r3, r3, #1
 226 0018 FB71     		strb	r3, [r7, #7]
 227              	.L7:
 252:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 228              		.loc 1 252 0 is_stmt 0 discriminator 1
 229 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 230 001c 002B     		cmp	r3, #0
 231 001e F5D0     		beq	.L8
 255:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 256:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 232              		.loc 1 256 0 is_stmt 1
 233 0020 00BF     		nop
 234 0022 0837     		adds	r7, r7, #8
 235              		.cfi_def_cfa_offset 8
 236 0024 BD46     		mov	sp, r7
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 0026 80BD     		pop	{r7, pc}
 240              		.cfi_endproc
 241              	.LFE2:
 242              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 243              		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 244              		.align	2
 245              		.global	CapSense_CSD_InitializeEnabledBaselines
 246              		.thumb
 247              		.thumb_func
 248              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 249              	CapSense_CSD_InitializeEnabledBaselines:
 250              	.LFB3:
 257:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 258:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 259:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 260:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 261:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 10


 262:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 263:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 264:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 265:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 266:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 267:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 268:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 269:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 270:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 271:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 272:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 273:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 274:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 275:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 276:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 277:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 278:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 280:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 281:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 251              		.loc 1 281 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 82B0     		sub	sp, sp, #8
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 282:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 283:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 284:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 285:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 286:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 263              		.loc 1 286 0
 264 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 287:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 265              		.loc 1 287 0
 266 000a 00BF     		nop
 267              	.L10:
 268              		.loc 1 287 0 is_stmt 0 discriminator 1
 269 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 270 0010 0346     		mov	r3, r0
 271 0012 002B     		cmp	r3, #0
 272 0014 FAD1     		bne	.L10
 288:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 289:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 290:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 291:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 273              		.loc 1 292 0 is_stmt 1
 274 0016 0023     		movs	r3, #0
 275 0018 FB71     		strb	r3, [r7, #7]
 276 001a 1DE0     		b	.L11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 11


 277              	.L13:
 293:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 294:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 278              		.loc 1 294 0
 279 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 280 001e DB08     		lsrs	r3, r3, #3
 281 0020 BB71     		strb	r3, [r7, #6]
 295:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 282              		.loc 1 295 0
 283 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 284 0024 03F00703 		and	r3, r3, #7
 285 0028 0122     		movs	r2, #1
 286 002a 02FA03F3 		lsl	r3, r2, r3
 287 002e 7B71     		strb	r3, [r7, #5]
 296:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 297:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 288              		.loc 1 298 0
 289 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 290 0032 0D4A     		ldr	r2, .L14
 291 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 292 0036 7B79     		ldrb	r3, [r7, #5]
 293 0038 1340     		ands	r3, r3, r2
 294 003a DBB2     		uxtb	r3, r3
 295 003c 002B     		cmp	r3, #0
 296 003e 04D1     		bne	.L12
 299:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 300:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 297              		.loc 1 300 0
 298 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 299 0042 0A4A     		ldr	r2, .L14+4
 300 0044 0021     		movs	r1, #0
 301 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 302              	.L12:
 301:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 302:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 303:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 304:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 303              		.loc 1 304 0 discriminator 2
 304 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 305 004c 1846     		mov	r0, r3
 306 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 307              		.loc 1 292 0 discriminator 2
 308 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 309 0054 0133     		adds	r3, r3, #1
 310 0056 FB71     		strb	r3, [r7, #7]
 311              	.L11:
 292:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 312              		.loc 1 292 0 is_stmt 0 discriminator 1
 313 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 314 005a 002B     		cmp	r3, #0
 315 005c DED0     		beq	.L13
 305:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 306:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 316              		.loc 1 306 0 is_stmt 1
 317 005e 00BF     		nop
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 12


 318 0060 0837     		adds	r7, r7, #8
 319              		.cfi_def_cfa_offset 8
 320 0062 BD46     		mov	sp, r7
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0064 80BD     		pop	{r7, pc}
 324              	.L15:
 325 0066 00BF     		.align	2
 326              	.L14:
 327 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 328 006c 00000000 		.word	CapSense_CSD_sensorRaw
 329              		.cfi_endproc
 330              	.LFE3:
 331              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 332              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 333              		.align	2
 334              		.global	CapSense_CSD_UpdateSensorBaseline
 335              		.thumb
 336              		.thumb_func
 337              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 338              	CapSense_CSD_UpdateSensorBaseline:
 339              	.LFB4:
 307:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 308:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 309:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 310:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 311:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 312:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 313:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 314:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 315:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 318:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 319:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 320:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 321:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 322:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 324:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 325:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 326:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 327:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 328:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 329:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 330:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 331:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 332:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 333:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 334:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 335:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 336:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 337:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 338:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 339:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 340:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 341:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 13


 342:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 343:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 344:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 345:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 346:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 347:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 348:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 340              		.loc 1 348 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 24
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344 0000 80B5     		push	{r7, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 86B0     		sub	sp, sp, #24
 349              		.cfi_def_cfa_offset 32
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 352 0006 0346     		mov	r3, r0
 353 0008 FB71     		strb	r3, [r7, #7]
 349:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 350:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 351:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 352:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 354              		.loc 1 352 0
 355 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 356 000c 454A     		ldr	r2, .L26
 357 000e D35C     		ldrb	r3, [r2, r3]
 358 0010 7B75     		strb	r3, [r7, #21]
 353:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 359              		.loc 1 353 0
 360 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 361 0014 444A     		ldr	r2, .L26+4
 362 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 363 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 354:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 355:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 356:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 357:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 358:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 359:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 360:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 361:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 364              		.loc 1 361 0
 365 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 366 001e 434A     		ldr	r2, .L26+8
 367 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 368 0024 3B82     		strh	r3, [r7, #16]	@ movhi
 362:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 363:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 364:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 365:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 366:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 367:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 368:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 369:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 14


 370:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 371:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 372:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 373:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 374:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 375:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 376:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 377:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 378:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 379:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 380:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 382:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 383:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 384:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 385:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 386:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 387:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 388:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 389:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 390:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 391:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 393:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 394:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 395:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 397:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 398:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 399:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 400:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 401:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 402:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 403:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 404:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 405:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 406:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 407:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 408:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 369              		.loc 1 408 0
 370 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 371 0028 414A     		ldr	r2, .L26+12
 372 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 373 002e 3A8A     		ldrh	r2, [r7, #16]
 374 0030 9A42     		cmp	r2, r3
 375 0032 09D3     		bcc	.L17
 409:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 410:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 376              		.loc 1 410 0
 377 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 0036 3E4A     		ldr	r2, .L26+12
 379 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 380 003c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 381 003e D31A     		subs	r3, r2, r3
 382 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 411:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 383              		.loc 1 411 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 15


 384 0042 0123     		movs	r3, #1
 385 0044 7B75     		strb	r3, [r7, #21]
 386 0046 08E0     		b	.L18
 387              	.L17:
 412:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 413:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 414:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 415:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 388              		.loc 1 415 0
 389 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 004a 394A     		ldr	r2, .L26+12
 391 004c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 392 0050 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 393 0052 D31A     		subs	r3, r2, r3
 394 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 416:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 395              		.loc 1 416 0
 396 0056 0023     		movs	r3, #0
 397 0058 7B75     		strb	r3, [r7, #21]
 398              	.L18:
 417:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 418:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 419:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 399              		.loc 1 419 0
 400 005a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 401 005c 002B     		cmp	r3, #0
 402 005e 18D1     		bne	.L19
 403              		.loc 1 419 0 is_stmt 0 discriminator 1
 404 0060 FB8A     		ldrh	r3, [r7, #22]
 405 0062 142B     		cmp	r3, #20
 406 0064 15D9     		bls	.L19
 420:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 407              		.loc 1 421 0 is_stmt 1
 408 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 409 0068 324A     		ldr	r2, .L26+16
 410 006a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 411 006c 042B     		cmp	r3, #4
 412 006e 08D9     		bls	.L20
 422:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 423:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 413              		.loc 1 423 0
 414 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 0072 1846     		mov	r0, r3
 416 0074 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 424:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 417              		.loc 1 424 0
 418 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 419 007a 2E4A     		ldr	r2, .L26+16
 420 007c 0021     		movs	r1, #0
 421 007e D154     		strb	r1, [r2, r3]
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 422              		.loc 1 421 0
 423 0080 3AE0     		b	.L22
 424              	.L20:
 425:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 426:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 16


 427:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 428:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 425              		.loc 1 428 0
 426 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 427 0084 2B4A     		ldr	r2, .L26+16
 428 0086 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 429 0088 0132     		adds	r2, r2, #1
 430 008a D1B2     		uxtb	r1, r2
 431 008c 294A     		ldr	r2, .L26+16
 432 008e D154     		strb	r1, [r2, r3]
 421:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 433              		.loc 1 421 0
 434 0090 32E0     		b	.L22
 435              	.L19:
 429:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 430:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 431:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 432:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 433:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 434:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 435:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 436              		.loc 1 435 0
 437 0092 FA8A     		ldrh	r2, [r7, #22]
 438 0094 7B8A     		ldrh	r3, [r7, #18]
 439 0096 9A42     		cmp	r2, r3
 440 0098 05D9     		bls	.L23
 441              		.loc 1 435 0 is_stmt 0 discriminator 1
 442 009a FB8A     		ldrh	r3, [r7, #22]
 443 009c 132B     		cmp	r3, #19
 444 009e 2BD8     		bhi	.L22
 436:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 437:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 445              		.loc 1 437 0 is_stmt 1
 446 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 447 00a2 002B     		cmp	r3, #0
 448 00a4 28D1     		bne	.L22
 449              	.L23:
 438:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 439:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 440:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 441:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 450              		.loc 1 441 0
 451 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 452 00a8 214A     		ldr	r2, .L26+12
 453 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 454 00ae 1B02     		lsls	r3, r3, #8
 455 00b0 FB60     		str	r3, [r7, #12]
 442:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 456              		.loc 1 442 0
 457 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 458 00b4 204A     		ldr	r2, .L26+20
 459 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 460 00b8 1A46     		mov	r2, r3
 461 00ba FB68     		ldr	r3, [r7, #12]
 462 00bc 1343     		orrs	r3, r3, r2
 463 00be FB60     		str	r3, [r7, #12]
 443:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 17


 444:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 445:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 464              		.loc 1 445 0
 465 00c0 3B8A     		ldrh	r3, [r7, #16]
 466 00c2 FA68     		ldr	r2, [r7, #12]
 467 00c4 1344     		add	r3, r3, r2
 468 00c6 FB60     		str	r3, [r7, #12]
 446:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 447:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 448:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 469              		.loc 1 448 0
 470 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 471 00ca 194A     		ldr	r2, .L26+12
 472 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 473 00d0 1A46     		mov	r2, r3
 474 00d2 FB68     		ldr	r3, [r7, #12]
 475 00d4 9B1A     		subs	r3, r3, r2
 476 00d6 FB60     		str	r3, [r7, #12]
 449:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 450:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 451:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 477              		.loc 1 451 0
 478 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 479 00da FA68     		ldr	r2, [r7, #12]
 480 00dc 120A     		lsrs	r2, r2, #8
 481 00de 91B2     		uxth	r1, r2
 482 00e0 134A     		ldr	r2, .L26+12
 483 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 452:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 484              		.loc 1 452 0
 485 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 486 00e8 FA68     		ldr	r2, [r7, #12]
 487 00ea D1B2     		uxtb	r1, r2
 488 00ec 124A     		ldr	r2, .L26+20
 489 00ee D154     		strb	r1, [r2, r3]
 453:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 454:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 490              		.loc 1 454 0
 491 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 492 00f2 104A     		ldr	r2, .L26+16
 493 00f4 0021     		movs	r1, #0
 494 00f6 D154     		strb	r1, [r2, r3]
 495              	.L22:
 455:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 456:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 457:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 458:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 459:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 460:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 461:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 496              		.loc 1 461 0
 497 00f8 FA8A     		ldrh	r2, [r7, #22]
 498 00fa 7B8A     		ldrh	r3, [r7, #18]
 499 00fc 9A42     		cmp	r2, r3
 500 00fe 08D9     		bls	.L24
 501              		.loc 1 461 0 is_stmt 0 discriminator 1
 502 0100 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 18


 503 0102 002B     		cmp	r3, #0
 504 0104 05D0     		beq	.L24
 462:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 463:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 464:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 465:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 466:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 467:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 468:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 469:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 470:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 471:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 472:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 473:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 474:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 505              		.loc 1 474 0 is_stmt 1
 506 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 507 0108 0C49     		ldr	r1, .L26+24
 508 010a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 509 010c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 510 0110 04E0     		b	.L25
 511              	.L24:
 475:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 476:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 477:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 478:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 479:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 480:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 512              		.loc 1 480 0
 513 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 514 0114 094A     		ldr	r2, .L26+24
 515 0116 0021     		movs	r1, #0
 516 0118 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 517              	.L25:
 481:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 482:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 483:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 484:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 485:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 486:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 487:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 518              		.loc 1 487 0
 519 011c 00BF     		nop
 520 011e 1837     		adds	r7, r7, #24
 521              		.cfi_def_cfa_offset 8
 522 0120 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0122 80BD     		pop	{r7, pc}
 526              	.L27:
 527              		.align	2
 528              	.L26:
 529 0124 00000000 		.word	CapSense_CSD_widgetNumber
 530 0128 00000000 		.word	CapSense_CSD_noiseThreshold
 531 012c 00000000 		.word	CapSense_CSD_sensorRaw
 532 0130 00000000 		.word	CapSense_CSD_sensorBaseline
 533 0134 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 19


 534 0138 00000000 		.word	CapSense_CSD_sensorBaselineLow
 535 013c 00000000 		.word	CapSense_CSD_sensorSignal
 536              		.cfi_endproc
 537              	.LFE4:
 538              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 539              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 540              		.align	2
 541              		.global	CapSense_CSD_UpdateEnabledBaselines
 542              		.thumb
 543              		.thumb_func
 544              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 545              	CapSense_CSD_UpdateEnabledBaselines:
 546              	.LFB5:
 488:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 489:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 490:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 491:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 492:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 493:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 494:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 495:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 496:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 497:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 498:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 499:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 500:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 501:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 502:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 503:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 504:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 506:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 507:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 508:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 509:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 510:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 511:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 512:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 513:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 514:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 515:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 516:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 517:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 518:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 519:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 520:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 521:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 547              		.loc 1 521 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 82B0     		sub	sp, sp, #8
 556              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 20


 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 523:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 524:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 525:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 559              		.loc 1 526 0
 560 0006 0023     		movs	r3, #0
 561 0008 FB71     		strb	r3, [r7, #7]
 562 000a 18E0     		b	.L29
 563              	.L31:
 527:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 528:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 564              		.loc 1 528 0
 565 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 566 000e DB08     		lsrs	r3, r3, #3
 567 0010 BB71     		strb	r3, [r7, #6]
 529:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 568              		.loc 1 529 0
 569 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 570 0014 03F00703 		and	r3, r3, #7
 571 0018 0122     		movs	r2, #1
 572 001a 02FA03F3 		lsl	r3, r2, r3
 573 001e 7B71     		strb	r3, [r7, #5]
 530:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 574              		.loc 1 530 0
 575 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 576 0022 0A4A     		ldr	r2, .L32
 577 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 578 0026 7B79     		ldrb	r3, [r7, #5]
 579 0028 1340     		ands	r3, r3, r2
 580 002a DBB2     		uxtb	r3, r3
 581 002c 002B     		cmp	r3, #0
 582 002e 03D0     		beq	.L30
 531:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 532:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 583              		.loc 1 532 0
 584 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 585 0032 1846     		mov	r0, r3
 586 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 587              	.L30:
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 588              		.loc 1 526 0 discriminator 2
 589 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 590 003a 0133     		adds	r3, r3, #1
 591 003c FB71     		strb	r3, [r7, #7]
 592              	.L29:
 526:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 593              		.loc 1 526 0 is_stmt 0 discriminator 1
 594 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 595 0040 002B     		cmp	r3, #0
 596 0042 E3D0     		beq	.L31
 533:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 534:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 535:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 597              		.loc 1 535 0 is_stmt 1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 21


 598 0044 00BF     		nop
 599 0046 0837     		adds	r7, r7, #8
 600              		.cfi_def_cfa_offset 8
 601 0048 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 004a 80BD     		pop	{r7, pc}
 605              	.L33:
 606              		.align	2
 607              	.L32:
 608 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 609              		.cfi_endproc
 610              	.LFE5:
 611              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 612              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 613              		.align	2
 614              		.global	CapSense_CSD_CheckIsSensorActive
 615              		.thumb
 616              		.thumb_func
 617              		.type	CapSense_CSD_CheckIsSensorActive, %function
 618              	CapSense_CSD_CheckIsSensorActive:
 619              	.LFB6:
 536:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 537:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 538:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 539:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 540:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 541:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 542:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 543:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 544:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 545:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 546:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 547:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 548:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 549:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 550:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 551:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 552:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 553:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 554:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 555:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 556:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 557:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 558:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 559:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 560:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 561:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 562:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 563:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 564:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 565:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 566:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 567:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 568:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 569:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 570:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 22


 571:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 572:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 573:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 574:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 575:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 576:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 577:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 578:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 579:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 620              		.loc 1 579 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 24
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625 0000 80B4     		push	{r7}
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 0002 87B0     		sub	sp, sp, #28
 629              		.cfi_def_cfa_offset 32
 630 0004 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 632 0006 0346     		mov	r3, r0
 633 0008 FB71     		strb	r3, [r7, #7]
 580:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 581:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 582:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 634              		.loc 1 582 0
 635 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 636 000c DB08     		lsrs	r3, r3, #3
 637 000e FB75     		strb	r3, [r7, #23]
 583:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 638              		.loc 1 583 0
 639 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 640 0012 03F00703 		and	r3, r3, #7
 641 0016 0122     		movs	r2, #1
 642 0018 02FA03F3 		lsl	r3, r2, r3
 643 001c BB75     		strb	r3, [r7, #22]
 584:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 585:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 644              		.loc 1 585 0
 645 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 646 0020 344A     		ldr	r2, .L43
 647 0022 D35C     		ldrb	r3, [r2, r3]
 648 0024 7B75     		strb	r3, [r7, #21]
 586:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 649              		.loc 1 586 0
 650 0026 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 651 0028 334A     		ldr	r2, .L43+4
 652 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 653 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 587:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 654              		.loc 1 587 0
 655 0030 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 656 0032 324A     		ldr	r2, .L43+8
 657 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 658 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 588:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 23


 659              		.loc 1 588 0
 660 003a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 661 003c 304A     		ldr	r2, .L43+12
 662 003e D35C     		ldrb	r3, [r2, r3]
 663 0040 FB73     		strb	r3, [r7, #15]
 589:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 590:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = widget;
 664              		.loc 1 590 0
 665 0042 7B7D     		ldrb	r3, [r7, #21]
 666 0044 BB73     		strb	r3, [r7, #14]
 591:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 592:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 593:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 594:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 667              		.loc 1 594 0
 668 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 669 0048 2E4A     		ldr	r2, .L43+16
 670 004a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 671 004c BB7D     		ldrb	r3, [r7, #22]
 672 004e 1340     		ands	r3, r3, r2
 673 0050 DBB2     		uxtb	r3, r3
 674 0052 002B     		cmp	r3, #0
 675 0054 19D0     		beq	.L35
 595:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 596:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 597:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 676              		.loc 1 597 0
 677 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 678 0058 2B4A     		ldr	r2, .L43+20
 679 005a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 680 005e 1946     		mov	r1, r3
 681 0060 7A8A     		ldrh	r2, [r7, #18]
 682 0062 3B8A     		ldrh	r3, [r7, #16]
 683 0064 D31A     		subs	r3, r2, r3
 684 0066 9942     		cmp	r1, r3
 685 0068 33DA     		bge	.L37
 598:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 599:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 686              		.loc 1 599 0
 687 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 688 006c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 689 006e 2549     		ldr	r1, .L43+16
 690 0070 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 691 0072 BA7D     		ldrb	r2, [r7, #22]
 692 0074 D243     		mvns	r2, r2
 693 0076 D2B2     		uxtb	r2, r2
 694 0078 0A40     		ands	r2, r2, r1
 695 007a D1B2     		uxtb	r1, r2
 696 007c 214A     		ldr	r2, .L43+16
 697 007e D154     		strb	r1, [r2, r3]
 600:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 698              		.loc 1 600 0
 699 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 700 0082 2249     		ldr	r1, .L43+24
 701 0084 FA7B     		ldrb	r2, [r7, #15]
 702 0086 CA54     		strb	r2, [r1, r3]
 703 0088 23E0     		b	.L37
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 24


 704              	.L35:
 601:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 602:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 603:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 604:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 605:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 606:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 705              		.loc 1 606 0
 706 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 707 008c 1E4A     		ldr	r2, .L43+20
 708 008e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 709 0092 1946     		mov	r1, r3
 710 0094 7A8A     		ldrh	r2, [r7, #18]
 711 0096 3B8A     		ldrh	r3, [r7, #16]
 712 0098 1344     		add	r3, r3, r2
 713 009a 9942     		cmp	r1, r3
 714 009c 15DD     		ble	.L38
 607:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 608:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 609:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 715              		.loc 1 609 0
 716 009e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 717 00a0 1A4A     		ldr	r2, .L43+24
 718 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 719 00a4 012B     		cmp	r3, #1
 720 00a6 08D8     		bhi	.L39
 610:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 611:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 721              		.loc 1 611 0
 722 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 723 00aa FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 724 00ac 1549     		ldr	r1, .L43+16
 725 00ae 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 726 00b0 BA7D     		ldrb	r2, [r7, #22]
 727 00b2 0A43     		orrs	r2, r2, r1
 728 00b4 D1B2     		uxtb	r1, r2
 729 00b6 134A     		ldr	r2, .L43+16
 730 00b8 D154     		strb	r1, [r2, r3]
 731              	.L39:
 612:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 613:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 732              		.loc 1 613 0
 733 00ba BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 734 00bc 134A     		ldr	r2, .L43+24
 735 00be D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 736 00c0 013A     		subs	r2, r2, #1
 737 00c2 D1B2     		uxtb	r1, r2
 738 00c4 114A     		ldr	r2, .L43+24
 739 00c6 D154     		strb	r1, [r2, r3]
 740 00c8 03E0     		b	.L37
 741              	.L38:
 614:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 615:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 616:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 617:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 618:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 742              		.loc 1 618 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 25


 743 00ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 744 00cc 0F49     		ldr	r1, .L43+24
 745 00ce FA7B     		ldrb	r2, [r7, #15]
 746 00d0 CA54     		strb	r2, [r1, r3]
 747              	.L37:
 619:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 620:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 621:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 622:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 748              		.loc 1 622 0
 749 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 750 00d4 0B4A     		ldr	r2, .L43+16
 751 00d6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 752 00d8 BB7D     		ldrb	r3, [r7, #22]
 753 00da 1340     		ands	r3, r3, r2
 754 00dc DBB2     		uxtb	r3, r3
 755 00de 002B     		cmp	r3, #0
 756 00e0 01D0     		beq	.L40
 757              		.loc 1 622 0 is_stmt 0 discriminator 1
 758 00e2 0123     		movs	r3, #1
 759 00e4 00E0     		b	.L41
 760              	.L40:
 761              		.loc 1 622 0 discriminator 2
 762 00e6 0023     		movs	r3, #0
 763              	.L41:
 623:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 764              		.loc 1 623 0 is_stmt 1 discriminator 4
 765 00e8 1846     		mov	r0, r3
 766 00ea 1C37     		adds	r7, r7, #28
 767              		.cfi_def_cfa_offset 4
 768 00ec BD46     		mov	sp, r7
 769              		.cfi_def_cfa_register 13
 770              		@ sp needed
 771 00ee 80BC     		pop	{r7}
 772              		.cfi_restore 7
 773              		.cfi_def_cfa_offset 0
 774 00f0 7047     		bx	lr
 775              	.L44:
 776 00f2 00BF     		.align	2
 777              	.L43:
 778 00f4 00000000 		.word	CapSense_CSD_widgetNumber
 779 00f8 00000000 		.word	CapSense_CSD_fingerThreshold
 780 00fc 00000000 		.word	CapSense_CSD_hysteresis
 781 0100 00000000 		.word	CapSense_CSD_debounce
 782 0104 00000000 		.word	CapSense_CSD_sensorOnMask
 783 0108 00000000 		.word	CapSense_CSD_sensorSignal
 784 010c 00000000 		.word	CapSense_CSD_debounceCounter
 785              		.cfi_endproc
 786              	.LFE6:
 787              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 788              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 789              		.align	2
 790              		.global	CapSense_CSD_CheckIsWidgetActive
 791              		.thumb
 792              		.thumb_func
 793              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 794              	CapSense_CSD_CheckIsWidgetActive:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 26


 795              	.LFB7:
 624:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 625:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 626:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 627:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 628:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 629:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 630:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 631:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 632:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 633:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 634:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 635:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 636:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 637:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 638:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 639:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 640:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 641:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 642:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 643:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 644:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 645:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 646:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 647:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 648:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 649:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 650:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 651:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 796              		.loc 1 651 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 16
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800 0000 80B5     		push	{r7, lr}
 801              		.cfi_def_cfa_offset 8
 802              		.cfi_offset 7, -8
 803              		.cfi_offset 14, -4
 804 0002 84B0     		sub	sp, sp, #16
 805              		.cfi_def_cfa_offset 24
 806 0004 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 808 0006 0346     		mov	r3, r0
 809 0008 FB71     		strb	r3, [r7, #7]
 652:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 810              		.loc 1 652 0
 811 000a 0023     		movs	r3, #0
 812 000c FB73     		strb	r3, [r7, #15]
 653:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 813              		.loc 1 653 0
 814 000e 0122     		movs	r2, #1
 815 0010 FB7B     		ldrb	r3, [r7, #15]
 816 0012 1344     		add	r3, r3, r2
 817 0014 7B73     		strb	r3, [r7, #13]
 654:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 818              		.loc 1 654 0
 819 0016 0023     		movs	r3, #0
 820 0018 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 27


 821              	.L47:
 655:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 656:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 657:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 658:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 659:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 822              		.loc 1 659 0
 823 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 824 001c 1846     		mov	r0, r3
 825 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 826 0022 0346     		mov	r3, r0
 827 0024 002B     		cmp	r3, #0
 828 0026 01D0     		beq	.L46
 660:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 661:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 829              		.loc 1 661 0
 830 0028 0123     		movs	r3, #1
 831 002a BB73     		strb	r3, [r7, #14]
 832              	.L46:
 662:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 663:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 833              		.loc 1 663 0
 834 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 835 002e 0133     		adds	r3, r3, #1
 836 0030 FB73     		strb	r3, [r7, #15]
 664:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 665:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 837              		.loc 1 665 0
 838 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 839 0034 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 840 0036 9A42     		cmp	r2, r3
 841 0038 EFD3     		bcc	.L47
 666:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 667:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 668:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 669:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 842              		.loc 1 669 0
 843 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 670:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 844              		.loc 1 670 0
 845 003c 1846     		mov	r0, r3
 846 003e 1037     		adds	r7, r7, #16
 847              		.cfi_def_cfa_offset 8
 848 0040 BD46     		mov	sp, r7
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
 851 0042 80BD     		pop	{r7, pc}
 852              		.cfi_endproc
 853              	.LFE7:
 854              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 855              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 856              		.align	2
 857              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 858              		.thumb
 859              		.thumb_func
 860              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 861              	CapSense_CSD_CheckIsAnyWidgetActive:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 28


 862              	.LFB8:
 671:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 672:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 673:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 674:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 675:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 676:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 677:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 678:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 679:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 680:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 681:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 682:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 683:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 684:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 685:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 686:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 687:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 688:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 689:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 690:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 691:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 692:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 693:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 694:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 695:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 863              		.loc 1 695 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 8
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867 0000 80B5     		push	{r7, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 82B0     		sub	sp, sp, #8
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 696:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 697:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 875              		.loc 1 697 0
 876 0006 0023     		movs	r3, #0
 877 0008 BB71     		strb	r3, [r7, #6]
 698:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 878              		.loc 1 699 0
 879 000a 0023     		movs	r3, #0
 880 000c FB71     		strb	r3, [r7, #7]
 881 000e 0BE0     		b	.L50
 882              	.L52:
 700:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 701:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 883              		.loc 1 701 0
 884 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 885 0012 1846     		mov	r0, r3
 886 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 887 0018 0346     		mov	r3, r0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 29


 888 001a 002B     		cmp	r3, #0
 889 001c 01D0     		beq	.L51
 702:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 703:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 890              		.loc 1 703 0
 891 001e 0123     		movs	r3, #1
 892 0020 BB71     		strb	r3, [r7, #6]
 893              	.L51:
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 894              		.loc 1 699 0 discriminator 2
 895 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 896 0024 0133     		adds	r3, r3, #1
 897 0026 FB71     		strb	r3, [r7, #7]
 898              	.L50:
 699:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 899              		.loc 1 699 0 is_stmt 0 discriminator 1
 900 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 901 002a 002B     		cmp	r3, #0
 902 002c F0D0     		beq	.L52
 704:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 705:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 706:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 707:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 708:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 903              		.loc 1 708 0 is_stmt 1
 904 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 709:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 905              		.loc 1 709 0
 906 0030 1846     		mov	r0, r3
 907 0032 0837     		adds	r7, r7, #8
 908              		.cfi_def_cfa_offset 8
 909 0034 BD46     		mov	sp, r7
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 0036 80BD     		pop	{r7, pc}
 913              		.cfi_endproc
 914              	.LFE8:
 915              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 916              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 917              		.align	2
 918              		.global	CapSense_CSD_EnableWidget
 919              		.thumb
 920              		.thumb_func
 921              		.type	CapSense_CSD_EnableWidget, %function
 922              	CapSense_CSD_EnableWidget:
 923              	.LFB9:
 710:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 711:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 712:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 713:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 714:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 715:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 716:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 717:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 718:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 719:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 720:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 30


 721:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 722:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 723:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 724:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 725:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 726:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 727:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 728:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 729:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 730:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 731:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 732:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 733:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 734:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 735:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 736:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 737:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 738:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 739:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 740:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 741:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 924              		.loc 1 741 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 16
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 929 0000 80B4     		push	{r7}
 930              		.cfi_def_cfa_offset 4
 931              		.cfi_offset 7, -4
 932 0002 85B0     		sub	sp, sp, #20
 933              		.cfi_def_cfa_offset 24
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 0346     		mov	r3, r0
 937 0008 FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 743:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 744:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 938              		.loc 1 744 0
 939 000a 0023     		movs	r3, #0
 940 000c FB73     		strb	r3, [r7, #15]
 745:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 941              		.loc 1 745 0
 942 000e 0122     		movs	r2, #1
 943 0010 FB7B     		ldrb	r3, [r7, #15]
 944 0012 1344     		add	r3, r3, r2
 945 0014 BB73     		strb	r3, [r7, #14]
 946              	.L55:
 746:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 747:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 748:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 749:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 750:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 947              		.loc 1 750 0 discriminator 1
 948 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 949 0018 DB08     		lsrs	r3, r3, #3
 950 001a 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 31


 751:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 951              		.loc 1 751 0 discriminator 1
 952 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 953 001e 03F00703 		and	r3, r3, #7
 954 0022 0122     		movs	r2, #1
 955 0024 02FA03F3 		lsl	r3, r2, r3
 956 0028 3B73     		strb	r3, [r7, #12]
 752:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 753:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 957              		.loc 1 753 0 discriminator 1
 958 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 959 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 960 002e 0949     		ldr	r1, .L56
 961 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 962 0032 3A7B     		ldrb	r2, [r7, #12]
 963 0034 0A43     		orrs	r2, r2, r1
 964 0036 D1B2     		uxtb	r1, r2
 965 0038 064A     		ldr	r2, .L56
 966 003a D154     		strb	r1, [r2, r3]
 754:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 967              		.loc 1 754 0 discriminator 1
 968 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 969 003e 0133     		adds	r3, r3, #1
 970 0040 FB73     		strb	r3, [r7, #15]
 755:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 756:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 971              		.loc 1 756 0 discriminator 1
 972 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 973 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 974 0046 9A42     		cmp	r2, r3
 975 0048 E5D3     		bcc	.L55
 757:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 758:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 759:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 976              		.loc 1 759 0
 977 004a 00BF     		nop
 978 004c 1437     		adds	r7, r7, #20
 979              		.cfi_def_cfa_offset 4
 980 004e BD46     		mov	sp, r7
 981              		.cfi_def_cfa_register 13
 982              		@ sp needed
 983 0050 80BC     		pop	{r7}
 984              		.cfi_restore 7
 985              		.cfi_def_cfa_offset 0
 986 0052 7047     		bx	lr
 987              	.L57:
 988              		.align	2
 989              	.L56:
 990 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 991              		.cfi_endproc
 992              	.LFE9:
 993              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 994              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 995              		.align	2
 996              		.global	CapSense_CSD_DisableWidget
 997              		.thumb
 998              		.thumb_func
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 32


 999              		.type	CapSense_CSD_DisableWidget, %function
 1000              	CapSense_CSD_DisableWidget:
 1001              	.LFB10:
 760:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 761:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 762:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 763:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 764:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 765:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 766:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 767:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 768:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 769:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 770:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 771:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 772:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 773:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 774:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 775:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 776:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 777:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 778:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 779:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 781:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 783:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 784:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 785:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 786:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 787:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 788:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 789:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 790:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 791:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 1002              		.loc 1 791 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 16
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007 0000 80B4     		push	{r7}
 1008              		.cfi_def_cfa_offset 4
 1009              		.cfi_offset 7, -4
 1010 0002 85B0     		sub	sp, sp, #20
 1011              		.cfi_def_cfa_offset 24
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 0346     		mov	r3, r0
 1015 0008 FB71     		strb	r3, [r7, #7]
 792:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 793:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 794:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1016              		.loc 1 794 0
 1017 000a 0023     		movs	r3, #0
 1018 000c FB73     		strb	r3, [r7, #15]
 795:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1019              		.loc 1 795 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 33


 1020 000e 0122     		movs	r2, #1
 1021 0010 FB7B     		ldrb	r3, [r7, #15]
 1022 0012 1344     		add	r3, r3, r2
 1023 0014 BB73     		strb	r3, [r7, #14]
 1024              	.L59:
 796:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 797:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 798:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 799:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 800:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1025              		.loc 1 800 0 discriminator 1
 1026 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1027 0018 DB08     		lsrs	r3, r3, #3
 1028 001a 7B73     		strb	r3, [r7, #13]
 801:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1029              		.loc 1 801 0 discriminator 1
 1030 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1031 001e 03F00703 		and	r3, r3, #7
 1032 0022 0122     		movs	r2, #1
 1033 0024 02FA03F3 		lsl	r3, r2, r3
 1034 0028 3B73     		strb	r3, [r7, #12]
 802:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 803:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1035              		.loc 1 803 0 discriminator 1
 1036 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1037 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1038 002e 0A49     		ldr	r1, .L60
 1039 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1040 0032 3A7B     		ldrb	r2, [r7, #12]
 1041 0034 D243     		mvns	r2, r2
 1042 0036 D2B2     		uxtb	r2, r2
 1043 0038 0A40     		ands	r2, r2, r1
 1044 003a D1B2     		uxtb	r1, r2
 1045 003c 064A     		ldr	r2, .L60
 1046 003e D154     		strb	r1, [r2, r3]
 804:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1047              		.loc 1 804 0 discriminator 1
 1048 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1049 0042 0133     		adds	r3, r3, #1
 1050 0044 FB73     		strb	r3, [r7, #15]
 805:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 806:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1051              		.loc 1 806 0 discriminator 1
 1052 0046 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1053 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1054 004a 9A42     		cmp	r2, r3
 1055 004c E3D3     		bcc	.L59
 807:Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 808:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 809:Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1056              		.loc 1 809 0
 1057 004e 00BF     		nop
 1058 0050 1437     		adds	r7, r7, #20
 1059              		.cfi_def_cfa_offset 4
 1060 0052 BD46     		mov	sp, r7
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 34


 1063 0054 80BC     		pop	{r7}
 1064              		.cfi_restore 7
 1065              		.cfi_def_cfa_offset 0
 1066 0056 7047     		bx	lr
 1067              	.L61:
 1068              		.align	2
 1069              	.L60:
 1070 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1071              		.cfi_endproc
 1072              	.LFE10:
 1073              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1074              		.text
 1075              	.Letext0:
 1076              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1077              		.file 3 "Generated_Source\\PSoC5\\CapSense_CSD.h"
 1078              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1079              		.section	.debug_info,"",%progbits
 1080              	.Ldebug_info0:
 1081 0000 45050000 		.4byte	0x545
 1082 0004 0400     		.2byte	0x4
 1083 0006 00000000 		.4byte	.Ldebug_abbrev0
 1084 000a 04       		.byte	0x4
 1085 000b 01       		.uleb128 0x1
 1086 000c 95000000 		.4byte	.LASF58
 1087 0010 0C       		.byte	0xc
 1088 0011 00000000 		.4byte	.LASF59
 1089 0015 D4030000 		.4byte	.LASF60
 1090 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1091 001d 00000000 		.4byte	0
 1092 0021 00000000 		.4byte	.Ldebug_line0
 1093 0025 02       		.uleb128 0x2
 1094 0026 01       		.byte	0x1
 1095 0027 06       		.byte	0x6
 1096 0028 48010000 		.4byte	.LASF0
 1097 002c 02       		.uleb128 0x2
 1098 002d 01       		.byte	0x1
 1099 002e 08       		.byte	0x8
 1100 002f 49030000 		.4byte	.LASF1
 1101 0033 02       		.uleb128 0x2
 1102 0034 02       		.byte	0x2
 1103 0035 05       		.byte	0x5
 1104 0036 66030000 		.4byte	.LASF2
 1105 003a 02       		.uleb128 0x2
 1106 003b 02       		.byte	0x2
 1107 003c 07       		.byte	0x7
 1108 003d 57020000 		.4byte	.LASF3
 1109 0041 02       		.uleb128 0x2
 1110 0042 04       		.byte	0x4
 1111 0043 05       		.byte	0x5
 1112 0044 94010000 		.4byte	.LASF4
 1113 0048 02       		.uleb128 0x2
 1114 0049 04       		.byte	0x4
 1115 004a 07       		.byte	0x7
 1116 004b 2B020000 		.4byte	.LASF5
 1117 004f 02       		.uleb128 0x2
 1118 0050 08       		.byte	0x8
 1119 0051 05       		.byte	0x5
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 35


 1120 0052 3A010000 		.4byte	.LASF6
 1121 0056 02       		.uleb128 0x2
 1122 0057 08       		.byte	0x8
 1123 0058 07       		.byte	0x7
 1124 0059 23010000 		.4byte	.LASF7
 1125 005d 03       		.uleb128 0x3
 1126 005e 04       		.byte	0x4
 1127 005f 05       		.byte	0x5
 1128 0060 696E7400 		.ascii	"int\000"
 1129 0064 02       		.uleb128 0x2
 1130 0065 04       		.byte	0x4
 1131 0066 07       		.byte	0x7
 1132 0067 1E020000 		.4byte	.LASF8
 1133 006b 04       		.uleb128 0x4
 1134 006c B7010000 		.4byte	.LASF9
 1135 0070 02       		.byte	0x2
 1136 0071 9201     		.2byte	0x192
 1137 0073 2C000000 		.4byte	0x2c
 1138 0077 04       		.uleb128 0x4
 1139 0078 48000000 		.4byte	.LASF10
 1140 007c 02       		.byte	0x2
 1141 007d 9301     		.2byte	0x193
 1142 007f 3A000000 		.4byte	0x3a
 1143 0083 04       		.uleb128 0x4
 1144 0084 C4010000 		.4byte	.LASF11
 1145 0088 02       		.byte	0x2
 1146 0089 9401     		.2byte	0x194
 1147 008b 48000000 		.4byte	0x48
 1148 008f 02       		.uleb128 0x2
 1149 0090 04       		.byte	0x4
 1150 0091 04       		.byte	0x4
 1151 0092 E1020000 		.4byte	.LASF12
 1152 0096 02       		.uleb128 0x2
 1153 0097 08       		.byte	0x8
 1154 0098 04       		.byte	0x4
 1155 0099 BD010000 		.4byte	.LASF13
 1156 009d 02       		.uleb128 0x2
 1157 009e 01       		.byte	0x1
 1158 009f 08       		.byte	0x8
 1159 00a0 49040000 		.4byte	.LASF14
 1160 00a4 02       		.uleb128 0x2
 1161 00a5 08       		.byte	0x8
 1162 00a6 04       		.byte	0x4
 1163 00a7 88020000 		.4byte	.LASF15
 1164 00ab 02       		.uleb128 0x2
 1165 00ac 04       		.byte	0x4
 1166 00ad 07       		.byte	0x7
 1167 00ae 7F020000 		.4byte	.LASF16
 1168 00b2 05       		.uleb128 0x5
 1169 00b3 D6010000 		.4byte	.LASF17
 1170 00b7 01       		.byte	0x1
 1171 00b8 79       		.byte	0x79
 1172 00b9 00000000 		.4byte	.LFB0
 1173 00bd 68000000 		.4byte	.LFE0-.LFB0
 1174 00c1 01       		.uleb128 0x1
 1175 00c2 9C       		.byte	0x9c
 1176 00c3 E4000000 		.4byte	0xe4
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 36


 1177 00c7 06       		.uleb128 0x6
 1178 00c8 6A020000 		.4byte	.LASF19
 1179 00cc 01       		.byte	0x1
 1180 00cd 79       		.byte	0x79
 1181 00ce 6B000000 		.4byte	0x6b
 1182 00d2 02       		.uleb128 0x2
 1183 00d3 91       		.byte	0x91
 1184 00d4 6F       		.sleb128 -17
 1185 00d5 07       		.uleb128 0x7
 1186 00d6 70030000 		.4byte	.LASF21
 1187 00da 01       		.byte	0x1
 1188 00db 7D       		.byte	0x7d
 1189 00dc 6B000000 		.4byte	0x6b
 1190 00e0 02       		.uleb128 0x2
 1191 00e1 91       		.byte	0x91
 1192 00e2 77       		.sleb128 -9
 1193 00e3 00       		.byte	0
 1194 00e4 08       		.uleb128 0x8
 1195 00e5 6F000000 		.4byte	.LASF18
 1196 00e9 01       		.byte	0x1
 1197 00ea C2       		.byte	0xc2
 1198 00eb 00000000 		.4byte	.LFB1
 1199 00ef 2E000000 		.4byte	.LFE1-.LFB1
 1200 00f3 01       		.uleb128 0x1
 1201 00f4 9C       		.byte	0x9c
 1202 00f5 08010000 		.4byte	0x108
 1203 00f9 06       		.uleb128 0x6
 1204 00fa 6A020000 		.4byte	.LASF19
 1205 00fe 01       		.byte	0x1
 1206 00ff C2       		.byte	0xc2
 1207 0100 6B000000 		.4byte	0x6b
 1208 0104 02       		.uleb128 0x2
 1209 0105 91       		.byte	0x91
 1210 0106 77       		.sleb128 -9
 1211 0107 00       		.byte	0
 1212 0108 08       		.uleb128 0x8
 1213 0109 08030000 		.4byte	.LASF20
 1214 010d 01       		.byte	0x1
 1215 010e F6       		.byte	0xf6
 1216 010f 00000000 		.4byte	.LFB2
 1217 0113 28000000 		.4byte	.LFE2-.LFB2
 1218 0117 01       		.uleb128 0x1
 1219 0118 9C       		.byte	0x9c
 1220 0119 2A010000 		.4byte	0x12a
 1221 011d 09       		.uleb128 0x9
 1222 011e 6900     		.ascii	"i\000"
 1223 0120 01       		.byte	0x1
 1224 0121 F9       		.byte	0xf9
 1225 0122 6B000000 		.4byte	0x6b
 1226 0126 02       		.uleb128 0x2
 1227 0127 91       		.byte	0x91
 1228 0128 77       		.sleb128 -9
 1229 0129 00       		.byte	0
 1230 012a 0A       		.uleb128 0xa
 1231 012b 94020000 		.4byte	.LASF22
 1232 012f 01       		.byte	0x1
 1233 0130 1701     		.2byte	0x117
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 37


 1234 0132 00000000 		.4byte	.LFB3
 1235 0136 70000000 		.4byte	.LFE3-.LFB3
 1236 013a 01       		.uleb128 0x1
 1237 013b 9C       		.byte	0x9c
 1238 013c 6C010000 		.4byte	0x16c
 1239 0140 0B       		.uleb128 0xb
 1240 0141 6900     		.ascii	"i\000"
 1241 0143 01       		.byte	0x1
 1242 0144 1A01     		.2byte	0x11a
 1243 0146 6B000000 		.4byte	0x6b
 1244 014a 02       		.uleb128 0x2
 1245 014b 91       		.byte	0x91
 1246 014c 77       		.sleb128 -9
 1247 014d 0B       		.uleb128 0xb
 1248 014e 706F7300 		.ascii	"pos\000"
 1249 0152 01       		.byte	0x1
 1250 0153 1B01     		.2byte	0x11b
 1251 0155 6B000000 		.4byte	0x6b
 1252 0159 02       		.uleb128 0x2
 1253 015a 91       		.byte	0x91
 1254 015b 76       		.sleb128 -10
 1255 015c 0C       		.uleb128 0xc
 1256 015d BC020000 		.4byte	.LASF23
 1257 0161 01       		.byte	0x1
 1258 0162 1C01     		.2byte	0x11c
 1259 0164 6B000000 		.4byte	0x6b
 1260 0168 02       		.uleb128 0x2
 1261 0169 91       		.byte	0x91
 1262 016a 75       		.sleb128 -11
 1263 016b 00       		.byte	0
 1264 016c 0A       		.uleb128 0xa
 1265 016d 95030000 		.4byte	.LASF24
 1266 0171 01       		.byte	0x1
 1267 0172 5A01     		.2byte	0x15a
 1268 0174 00000000 		.4byte	.LFB4
 1269 0178 40010000 		.4byte	.LFE4-.LFB4
 1270 017c 01       		.uleb128 0x1
 1271 017d 9C       		.byte	0x9c
 1272 017e DD010000 		.4byte	0x1dd
 1273 0182 0D       		.uleb128 0xd
 1274 0183 6A020000 		.4byte	.LASF19
 1275 0187 01       		.byte	0x1
 1276 0188 5A01     		.2byte	0x15a
 1277 018a 6B000000 		.4byte	0x6b
 1278 018e 02       		.uleb128 0x2
 1279 018f 91       		.byte	0x91
 1280 0190 67       		.sleb128 -25
 1281 0191 0C       		.uleb128 0xc
 1282 0192 71020000 		.4byte	.LASF25
 1283 0196 01       		.byte	0x1
 1284 0197 5D01     		.2byte	0x15d
 1285 0199 83000000 		.4byte	0x83
 1286 019d 02       		.uleb128 0x2
 1287 019e 91       		.byte	0x91
 1288 019f 6C       		.sleb128 -20
 1289 01a0 0C       		.uleb128 0xc
 1290 01a1 30050000 		.4byte	.LASF26
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 38


 1291 01a5 01       		.byte	0x1
 1292 01a6 5E01     		.2byte	0x15e
 1293 01a8 77000000 		.4byte	0x77
 1294 01ac 02       		.uleb128 0x2
 1295 01ad 91       		.byte	0x91
 1296 01ae 76       		.sleb128 -10
 1297 01af 0C       		.uleb128 0xc
 1298 01b0 4F000000 		.4byte	.LASF27
 1299 01b4 01       		.byte	0x1
 1300 01b5 5F01     		.2byte	0x15f
 1301 01b7 77000000 		.4byte	0x77
 1302 01bb 02       		.uleb128 0x2
 1303 01bc 91       		.byte	0x91
 1304 01bd 70       		.sleb128 -16
 1305 01be 0C       		.uleb128 0xc
 1306 01bf 70030000 		.4byte	.LASF21
 1307 01c3 01       		.byte	0x1
 1308 01c4 6001     		.2byte	0x160
 1309 01c6 6B000000 		.4byte	0x6b
 1310 01ca 02       		.uleb128 0x2
 1311 01cb 91       		.byte	0x91
 1312 01cc 75       		.sleb128 -11
 1313 01cd 0C       		.uleb128 0xc
 1314 01ce 57030000 		.4byte	.LASF28
 1315 01d2 01       		.byte	0x1
 1316 01d3 6101     		.2byte	0x161
 1317 01d5 77000000 		.4byte	0x77
 1318 01d9 02       		.uleb128 0x2
 1319 01da 91       		.byte	0x91
 1320 01db 72       		.sleb128 -14
 1321 01dc 00       		.byte	0
 1322 01dd 0A       		.uleb128 0xa
 1323 01de 68040000 		.4byte	.LASF29
 1324 01e2 01       		.byte	0x1
 1325 01e3 0702     		.2byte	0x207
 1326 01e5 00000000 		.4byte	.LFB5
 1327 01e9 50000000 		.4byte	.LFE5-.LFB5
 1328 01ed 01       		.uleb128 0x1
 1329 01ee 9C       		.byte	0x9c
 1330 01ef 1F020000 		.4byte	0x21f
 1331 01f3 0B       		.uleb128 0xb
 1332 01f4 6900     		.ascii	"i\000"
 1333 01f6 01       		.byte	0x1
 1334 01f7 0A02     		.2byte	0x20a
 1335 01f9 6B000000 		.4byte	0x6b
 1336 01fd 02       		.uleb128 0x2
 1337 01fe 91       		.byte	0x91
 1338 01ff 77       		.sleb128 -9
 1339 0200 0B       		.uleb128 0xb
 1340 0201 706F7300 		.ascii	"pos\000"
 1341 0205 01       		.byte	0x1
 1342 0206 0B02     		.2byte	0x20b
 1343 0208 6B000000 		.4byte	0x6b
 1344 020c 02       		.uleb128 0x2
 1345 020d 91       		.byte	0x91
 1346 020e 76       		.sleb128 -10
 1347 020f 0C       		.uleb128 0xc
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 39


 1348 0210 BC020000 		.4byte	.LASF23
 1349 0214 01       		.byte	0x1
 1350 0215 0C02     		.2byte	0x20c
 1351 0217 6B000000 		.4byte	0x6b
 1352 021b 02       		.uleb128 0x2
 1353 021c 91       		.byte	0x91
 1354 021d 75       		.sleb128 -11
 1355 021e 00       		.byte	0
 1356 021f 0E       		.uleb128 0xe
 1357 0220 6D010000 		.4byte	.LASF35
 1358 0224 01       		.byte	0x1
 1359 0225 4102     		.2byte	0x241
 1360 0227 6B000000 		.4byte	0x6b
 1361 022b 00000000 		.4byte	.LFB6
 1362 022f 10010000 		.4byte	.LFE6-.LFB6
 1363 0233 01       		.uleb128 0x1
 1364 0234 9C       		.byte	0x9c
 1365 0235 B2020000 		.4byte	0x2b2
 1366 0239 0D       		.uleb128 0xd
 1367 023a 6A020000 		.4byte	.LASF19
 1368 023e 01       		.byte	0x1
 1369 023f 4102     		.2byte	0x241
 1370 0241 6B000000 		.4byte	0x6b
 1371 0245 02       		.uleb128 0x2
 1372 0246 91       		.byte	0x91
 1373 0247 67       		.sleb128 -25
 1374 0248 0C       		.uleb128 0xc
 1375 0249 A4040000 		.4byte	.LASF30
 1376 024d 01       		.byte	0x1
 1377 024e 4402     		.2byte	0x244
 1378 0250 6B000000 		.4byte	0x6b
 1379 0254 02       		.uleb128 0x2
 1380 0255 91       		.byte	0x91
 1381 0256 6E       		.sleb128 -18
 1382 0257 0B       		.uleb128 0xb
 1383 0258 706F7300 		.ascii	"pos\000"
 1384 025c 01       		.byte	0x1
 1385 025d 4602     		.2byte	0x246
 1386 025f 6B000000 		.4byte	0x6b
 1387 0263 02       		.uleb128 0x2
 1388 0264 91       		.byte	0x91
 1389 0265 77       		.sleb128 -9
 1390 0266 0C       		.uleb128 0xc
 1391 0267 77030000 		.4byte	.LASF31
 1392 026b 01       		.byte	0x1
 1393 026c 4702     		.2byte	0x247
 1394 026e 6B000000 		.4byte	0x6b
 1395 0272 02       		.uleb128 0x2
 1396 0273 91       		.byte	0x91
 1397 0274 76       		.sleb128 -10
 1398 0275 0C       		.uleb128 0xc
 1399 0276 70030000 		.4byte	.LASF21
 1400 027a 01       		.byte	0x1
 1401 027b 4902     		.2byte	0x249
 1402 027d 6B000000 		.4byte	0x6b
 1403 0281 02       		.uleb128 0x2
 1404 0282 91       		.byte	0x91
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 40


 1405 0283 75       		.sleb128 -11
 1406 0284 0C       		.uleb128 0xc
 1407 0285 5F000000 		.4byte	.LASF32
 1408 0289 01       		.byte	0x1
 1409 028a 4A02     		.2byte	0x24a
 1410 028c 77000000 		.4byte	0x77
 1411 0290 02       		.uleb128 0x2
 1412 0291 91       		.byte	0x91
 1413 0292 72       		.sleb128 -14
 1414 0293 0C       		.uleb128 0xc
 1415 0294 CB010000 		.4byte	.LASF33
 1416 0298 01       		.byte	0x1
 1417 0299 4B02     		.2byte	0x24b
 1418 029b 77000000 		.4byte	0x77
 1419 029f 02       		.uleb128 0x2
 1420 02a0 91       		.byte	0x91
 1421 02a1 70       		.sleb128 -16
 1422 02a2 0C       		.uleb128 0xc
 1423 02a3 76020000 		.4byte	.LASF34
 1424 02a7 01       		.byte	0x1
 1425 02a8 4C02     		.2byte	0x24c
 1426 02aa 6B000000 		.4byte	0x6b
 1427 02ae 02       		.uleb128 0x2
 1428 02af 91       		.byte	0x91
 1429 02b0 6F       		.sleb128 -17
 1430 02b1 00       		.byte	0
 1431 02b2 0F       		.uleb128 0xf
 1432 02b3 D6040000 		.4byte	.LASF36
 1433 02b7 01       		.byte	0x1
 1434 02b8 8902     		.2byte	0x289
 1435 02ba 6B000000 		.4byte	0x6b
 1436 02be 00000000 		.4byte	.LFB7
 1437 02c2 44000000 		.4byte	.LFE7-.LFB7
 1438 02c6 01       		.uleb128 0x1
 1439 02c7 9C       		.byte	0x9c
 1440 02c8 09030000 		.4byte	0x309
 1441 02cc 0D       		.uleb128 0xd
 1442 02cd 70030000 		.4byte	.LASF21
 1443 02d1 01       		.byte	0x1
 1444 02d2 8902     		.2byte	0x289
 1445 02d4 6B000000 		.4byte	0x6b
 1446 02d8 02       		.uleb128 0x2
 1447 02d9 91       		.byte	0x91
 1448 02da 6F       		.sleb128 -17
 1449 02db 0C       		.uleb128 0xc
 1450 02dc 54010000 		.4byte	.LASF37
 1451 02e0 01       		.byte	0x1
 1452 02e1 8C02     		.2byte	0x28c
 1453 02e3 6B000000 		.4byte	0x6b
 1454 02e7 02       		.uleb128 0x2
 1455 02e8 91       		.byte	0x91
 1456 02e9 77       		.sleb128 -9
 1457 02ea 0C       		.uleb128 0xc
 1458 02eb 5D010000 		.4byte	.LASF38
 1459 02ef 01       		.byte	0x1
 1460 02f0 8D02     		.2byte	0x28d
 1461 02f2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 41


 1462 02f6 02       		.uleb128 0x2
 1463 02f7 91       		.byte	0x91
 1464 02f8 75       		.sleb128 -11
 1465 02f9 0C       		.uleb128 0xc
 1466 02fa 8E010000 		.4byte	.LASF39
 1467 02fe 01       		.byte	0x1
 1468 02ff 8E02     		.2byte	0x28e
 1469 0301 6B000000 		.4byte	0x6b
 1470 0305 02       		.uleb128 0x2
 1471 0306 91       		.byte	0x91
 1472 0307 76       		.sleb128 -10
 1473 0308 00       		.byte	0
 1474 0309 0F       		.uleb128 0xf
 1475 030a B2040000 		.4byte	.LASF40
 1476 030e 01       		.byte	0x1
 1477 030f B502     		.2byte	0x2b5
 1478 0311 6B000000 		.4byte	0x6b
 1479 0315 00000000 		.4byte	.LFB8
 1480 0319 38000000 		.4byte	.LFE8-.LFB8
 1481 031d 01       		.uleb128 0x1
 1482 031e 9C       		.byte	0x9c
 1483 031f 40030000 		.4byte	0x340
 1484 0323 0B       		.uleb128 0xb
 1485 0324 6900     		.ascii	"i\000"
 1486 0326 01       		.byte	0x1
 1487 0327 B802     		.2byte	0x2b8
 1488 0329 6B000000 		.4byte	0x6b
 1489 032d 02       		.uleb128 0x2
 1490 032e 91       		.byte	0x91
 1491 032f 77       		.sleb128 -9
 1492 0330 0C       		.uleb128 0xc
 1493 0331 8E010000 		.4byte	.LASF39
 1494 0335 01       		.byte	0x1
 1495 0336 B902     		.2byte	0x2b9
 1496 0338 6B000000 		.4byte	0x6b
 1497 033c 02       		.uleb128 0x2
 1498 033d 91       		.byte	0x91
 1499 033e 76       		.sleb128 -10
 1500 033f 00       		.byte	0
 1501 0340 10       		.uleb128 0x10
 1502 0341 4E040000 		.4byte	.LASF41
 1503 0345 01       		.byte	0x1
 1504 0346 E302     		.2byte	0x2e3
 1505 0348 00000000 		.4byte	.LFB9
 1506 034c 58000000 		.4byte	.LFE9-.LFB9
 1507 0350 01       		.uleb128 0x1
 1508 0351 9C       		.byte	0x9c
 1509 0352 A2030000 		.4byte	0x3a2
 1510 0356 0D       		.uleb128 0xd
 1511 0357 70030000 		.4byte	.LASF21
 1512 035b 01       		.byte	0x1
 1513 035c E302     		.2byte	0x2e3
 1514 035e 6B000000 		.4byte	0x6b
 1515 0362 02       		.uleb128 0x2
 1516 0363 91       		.byte	0x91
 1517 0364 6F       		.sleb128 -17
 1518 0365 0B       		.uleb128 0xb
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 42


 1519 0366 706F7300 		.ascii	"pos\000"
 1520 036a 01       		.byte	0x1
 1521 036b E602     		.2byte	0x2e6
 1522 036d 6B000000 		.4byte	0x6b
 1523 0371 02       		.uleb128 0x2
 1524 0372 91       		.byte	0x91
 1525 0373 75       		.sleb128 -11
 1526 0374 0C       		.uleb128 0xc
 1527 0375 BC020000 		.4byte	.LASF23
 1528 0379 01       		.byte	0x1
 1529 037a E702     		.2byte	0x2e7
 1530 037c 6B000000 		.4byte	0x6b
 1531 0380 02       		.uleb128 0x2
 1532 0381 91       		.byte	0x91
 1533 0382 74       		.sleb128 -12
 1534 0383 0C       		.uleb128 0xc
 1535 0384 54010000 		.4byte	.LASF37
 1536 0388 01       		.byte	0x1
 1537 0389 E802     		.2byte	0x2e8
 1538 038b 6B000000 		.4byte	0x6b
 1539 038f 02       		.uleb128 0x2
 1540 0390 91       		.byte	0x91
 1541 0391 77       		.sleb128 -9
 1542 0392 0C       		.uleb128 0xc
 1543 0393 5D010000 		.4byte	.LASF38
 1544 0397 01       		.byte	0x1
 1545 0398 E902     		.2byte	0x2e9
 1546 039a 6B000000 		.4byte	0x6b
 1547 039e 02       		.uleb128 0x2
 1548 039f 91       		.byte	0x91
 1549 03a0 76       		.sleb128 -10
 1550 03a1 00       		.byte	0
 1551 03a2 10       		.uleb128 0x10
 1552 03a3 38050000 		.4byte	.LASF42
 1553 03a7 01       		.byte	0x1
 1554 03a8 1503     		.2byte	0x315
 1555 03aa 00000000 		.4byte	.LFB10
 1556 03ae 5C000000 		.4byte	.LFE10-.LFB10
 1557 03b2 01       		.uleb128 0x1
 1558 03b3 9C       		.byte	0x9c
 1559 03b4 04040000 		.4byte	0x404
 1560 03b8 0D       		.uleb128 0xd
 1561 03b9 70030000 		.4byte	.LASF21
 1562 03bd 01       		.byte	0x1
 1563 03be 1503     		.2byte	0x315
 1564 03c0 6B000000 		.4byte	0x6b
 1565 03c4 02       		.uleb128 0x2
 1566 03c5 91       		.byte	0x91
 1567 03c6 6F       		.sleb128 -17
 1568 03c7 0B       		.uleb128 0xb
 1569 03c8 706F7300 		.ascii	"pos\000"
 1570 03cc 01       		.byte	0x1
 1571 03cd 1803     		.2byte	0x318
 1572 03cf 6B000000 		.4byte	0x6b
 1573 03d3 02       		.uleb128 0x2
 1574 03d4 91       		.byte	0x91
 1575 03d5 75       		.sleb128 -11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 43


 1576 03d6 0C       		.uleb128 0xc
 1577 03d7 BC020000 		.4byte	.LASF23
 1578 03db 01       		.byte	0x1
 1579 03dc 1903     		.2byte	0x319
 1580 03de 6B000000 		.4byte	0x6b
 1581 03e2 02       		.uleb128 0x2
 1582 03e3 91       		.byte	0x91
 1583 03e4 74       		.sleb128 -12
 1584 03e5 0C       		.uleb128 0xc
 1585 03e6 54010000 		.4byte	.LASF37
 1586 03ea 01       		.byte	0x1
 1587 03eb 1A03     		.2byte	0x31a
 1588 03ed 6B000000 		.4byte	0x6b
 1589 03f1 02       		.uleb128 0x2
 1590 03f2 91       		.byte	0x91
 1591 03f3 77       		.sleb128 -9
 1592 03f4 0C       		.uleb128 0xc
 1593 03f5 5D010000 		.4byte	.LASF38
 1594 03f9 01       		.byte	0x1
 1595 03fa 1B03     		.2byte	0x31b
 1596 03fc 6B000000 		.4byte	0x6b
 1597 0400 02       		.uleb128 0x2
 1598 0401 91       		.byte	0x91
 1599 0402 76       		.sleb128 -10
 1600 0403 00       		.byte	0
 1601 0404 11       		.uleb128 0x11
 1602 0405 77000000 		.4byte	0x77
 1603 0409 14040000 		.4byte	0x414
 1604 040d 12       		.uleb128 0x12
 1605 040e AB000000 		.4byte	0xab
 1606 0412 00       		.byte	0
 1607 0413 00       		.byte	0
 1608 0414 13       		.uleb128 0x13
 1609 0415 7E030000 		.4byte	.LASF43
 1610 0419 03       		.byte	0x3
 1611 041a B902     		.2byte	0x2b9
 1612 041c 04040000 		.4byte	0x404
 1613 0420 11       		.uleb128 0x11
 1614 0421 6B000000 		.4byte	0x6b
 1615 0425 30040000 		.4byte	0x430
 1616 0429 12       		.uleb128 0x12
 1617 042a AB000000 		.4byte	0xab
 1618 042e 00       		.byte	0
 1619 042f 00       		.byte	0
 1620 0430 13       		.uleb128 0x13
 1621 0431 C3020000 		.4byte	.LASF44
 1622 0435 04       		.byte	0x4
 1623 0436 0301     		.2byte	0x103
 1624 0438 20040000 		.4byte	0x420
 1625 043c 11       		.uleb128 0x11
 1626 043d 4C040000 		.4byte	0x44c
 1627 0441 4C040000 		.4byte	0x44c
 1628 0445 12       		.uleb128 0x12
 1629 0446 AB000000 		.4byte	0xab
 1630 044a 00       		.byte	0
 1631 044b 00       		.byte	0
 1632 044c 14       		.uleb128 0x14
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 44


 1633 044d 6B000000 		.4byte	0x6b
 1634 0451 13       		.uleb128 0x13
 1635 0452 9D010000 		.4byte	.LASF45
 1636 0456 04       		.byte	0x4
 1637 0457 0401     		.2byte	0x104
 1638 0459 5D040000 		.4byte	0x45d
 1639 045d 14       		.uleb128 0x14
 1640 045e 3C040000 		.4byte	0x43c
 1641 0462 15       		.uleb128 0x15
 1642 0463 EC010000 		.4byte	.LASF46
 1643 0467 01       		.byte	0x1
 1644 0468 29       		.byte	0x29
 1645 0469 04040000 		.4byte	0x404
 1646 046d 05       		.uleb128 0x5
 1647 046e 03       		.byte	0x3
 1648 046f 00000000 		.4byte	CapSense_CSD_sensorBaseline
 1649 0473 15       		.uleb128 0x15
 1650 0474 11050000 		.4byte	.LASF47
 1651 0478 01       		.byte	0x1
 1652 0479 2A       		.byte	0x2a
 1653 047a 20040000 		.4byte	0x420
 1654 047e 05       		.uleb128 0x5
 1655 047f 03       		.byte	0x3
 1656 0480 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 1657 0484 15       		.uleb128 0x15
 1658 0485 3D020000 		.4byte	.LASF48
 1659 0489 01       		.byte	0x1
 1660 048a 2B       		.byte	0x2b
 1661 048b 04040000 		.4byte	0x404
 1662 048f 05       		.uleb128 0x5
 1663 0490 03       		.byte	0x3
 1664 0491 00000000 		.4byte	CapSense_CSD_sensorSignal
 1665 0495 15       		.uleb128 0x15
 1666 0496 53050000 		.4byte	.LASF49
 1667 049a 01       		.byte	0x1
 1668 049b 2C       		.byte	0x2c
 1669 049c 20040000 		.4byte	0x420
 1670 04a0 05       		.uleb128 0x5
 1671 04a1 03       		.byte	0x3
 1672 04a2 00000000 		.4byte	CapSense_CSD_sensorOnMask
 1673 04a6 15       		.uleb128 0x15
 1674 04a7 E7020000 		.4byte	.LASF50
 1675 04ab 01       		.byte	0x1
 1676 04ac 2E       		.byte	0x2e
 1677 04ad 20040000 		.4byte	0x420
 1678 04b1 05       		.uleb128 0x5
 1679 04b2 03       		.byte	0x3
 1680 04b3 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 1681 04b7 15       		.uleb128 0x15
 1682 04b8 2C030000 		.4byte	.LASF51
 1683 04bc 01       		.byte	0x1
 1684 04bd 30       		.byte	0x30
 1685 04be 04040000 		.4byte	0x404
 1686 04c2 05       		.uleb128 0x5
 1687 04c3 03       		.byte	0x3
 1688 04c4 00000000 		.4byte	CapSense_CSD_fingerThreshold
 1689 04c8 15       		.uleb128 0x15
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 45


 1690 04c9 2D040000 		.4byte	.LASF52
 1691 04cd 01       		.byte	0x1
 1692 04ce 34       		.byte	0x34
 1693 04cf 04040000 		.4byte	0x404
 1694 04d3 05       		.uleb128 0x5
 1695 04d4 03       		.byte	0x3
 1696 04d5 00000000 		.4byte	CapSense_CSD_noiseThreshold
 1697 04d9 15       		.uleb128 0x15
 1698 04da 8C040000 		.4byte	.LASF53
 1699 04de 01       		.byte	0x1
 1700 04df 38       		.byte	0x38
 1701 04e0 04040000 		.4byte	0x404
 1702 04e4 05       		.uleb128 0x5
 1703 04e5 03       		.byte	0x3
 1704 04e6 00000000 		.4byte	CapSense_CSD_hysteresis
 1705 04ea 15       		.uleb128 0x15
 1706 04eb 08020000 		.4byte	.LASF54
 1707 04ef 01       		.byte	0x1
 1708 04f0 3C       		.byte	0x3c
 1709 04f1 20040000 		.4byte	0x420
 1710 04f5 05       		.uleb128 0x5
 1711 04f6 03       		.byte	0x3
 1712 04f7 00000000 		.4byte	CapSense_CSD_debounce
 1713 04fb 11       		.uleb128 0x11
 1714 04fc 6B000000 		.4byte	0x6b
 1715 0500 0B050000 		.4byte	0x50b
 1716 0504 12       		.uleb128 0x12
 1717 0505 AB000000 		.4byte	0xab
 1718 0509 01       		.byte	0x1
 1719 050a 00       		.byte	0
 1720 050b 15       		.uleb128 0x15
 1721 050c 2B000000 		.4byte	.LASF55
 1722 0510 01       		.byte	0x1
 1723 0511 40       		.byte	0x40
 1724 0512 FB040000 		.4byte	0x4fb
 1725 0516 05       		.uleb128 0x5
 1726 0517 03       		.byte	0x3
 1727 0518 00000000 		.4byte	CapSense_CSD_debounceCounter
 1728 051c 15       		.uleb128 0x15
 1729 051d F7040000 		.4byte	.LASF56
 1730 0521 01       		.byte	0x1
 1731 0522 44       		.byte	0x44
 1732 0523 2D050000 		.4byte	0x52d
 1733 0527 05       		.uleb128 0x5
 1734 0528 03       		.byte	0x3
 1735 0529 00000000 		.4byte	CapSense_CSD_rawDataIndex
 1736 052d 14       		.uleb128 0x14
 1737 052e 3C040000 		.4byte	0x43c
 1738 0532 15       		.uleb128 0x15
 1739 0533 B7030000 		.4byte	.LASF57
 1740 0537 01       		.byte	0x1
 1741 0538 49       		.byte	0x49
 1742 0539 43050000 		.4byte	0x543
 1743 053d 05       		.uleb128 0x5
 1744 053e 03       		.byte	0x3
 1745 053f 00000000 		.4byte	CapSense_CSD_numberOfSensors
 1746 0543 14       		.uleb128 0x14
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 46


 1747 0544 3C040000 		.4byte	0x43c
 1748 0548 00       		.byte	0
 1749              		.section	.debug_abbrev,"",%progbits
 1750              	.Ldebug_abbrev0:
 1751 0000 01       		.uleb128 0x1
 1752 0001 11       		.uleb128 0x11
 1753 0002 01       		.byte	0x1
 1754 0003 25       		.uleb128 0x25
 1755 0004 0E       		.uleb128 0xe
 1756 0005 13       		.uleb128 0x13
 1757 0006 0B       		.uleb128 0xb
 1758 0007 03       		.uleb128 0x3
 1759 0008 0E       		.uleb128 0xe
 1760 0009 1B       		.uleb128 0x1b
 1761 000a 0E       		.uleb128 0xe
 1762 000b 55       		.uleb128 0x55
 1763 000c 17       		.uleb128 0x17
 1764 000d 11       		.uleb128 0x11
 1765 000e 01       		.uleb128 0x1
 1766 000f 10       		.uleb128 0x10
 1767 0010 17       		.uleb128 0x17
 1768 0011 00       		.byte	0
 1769 0012 00       		.byte	0
 1770 0013 02       		.uleb128 0x2
 1771 0014 24       		.uleb128 0x24
 1772 0015 00       		.byte	0
 1773 0016 0B       		.uleb128 0xb
 1774 0017 0B       		.uleb128 0xb
 1775 0018 3E       		.uleb128 0x3e
 1776 0019 0B       		.uleb128 0xb
 1777 001a 03       		.uleb128 0x3
 1778 001b 0E       		.uleb128 0xe
 1779 001c 00       		.byte	0
 1780 001d 00       		.byte	0
 1781 001e 03       		.uleb128 0x3
 1782 001f 24       		.uleb128 0x24
 1783 0020 00       		.byte	0
 1784 0021 0B       		.uleb128 0xb
 1785 0022 0B       		.uleb128 0xb
 1786 0023 3E       		.uleb128 0x3e
 1787 0024 0B       		.uleb128 0xb
 1788 0025 03       		.uleb128 0x3
 1789 0026 08       		.uleb128 0x8
 1790 0027 00       		.byte	0
 1791 0028 00       		.byte	0
 1792 0029 04       		.uleb128 0x4
 1793 002a 16       		.uleb128 0x16
 1794 002b 00       		.byte	0
 1795 002c 03       		.uleb128 0x3
 1796 002d 0E       		.uleb128 0xe
 1797 002e 3A       		.uleb128 0x3a
 1798 002f 0B       		.uleb128 0xb
 1799 0030 3B       		.uleb128 0x3b
 1800 0031 05       		.uleb128 0x5
 1801 0032 49       		.uleb128 0x49
 1802 0033 13       		.uleb128 0x13
 1803 0034 00       		.byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 47


 1804 0035 00       		.byte	0
 1805 0036 05       		.uleb128 0x5
 1806 0037 2E       		.uleb128 0x2e
 1807 0038 01       		.byte	0x1
 1808 0039 3F       		.uleb128 0x3f
 1809 003a 19       		.uleb128 0x19
 1810 003b 03       		.uleb128 0x3
 1811 003c 0E       		.uleb128 0xe
 1812 003d 3A       		.uleb128 0x3a
 1813 003e 0B       		.uleb128 0xb
 1814 003f 3B       		.uleb128 0x3b
 1815 0040 0B       		.uleb128 0xb
 1816 0041 27       		.uleb128 0x27
 1817 0042 19       		.uleb128 0x19
 1818 0043 11       		.uleb128 0x11
 1819 0044 01       		.uleb128 0x1
 1820 0045 12       		.uleb128 0x12
 1821 0046 06       		.uleb128 0x6
 1822 0047 40       		.uleb128 0x40
 1823 0048 18       		.uleb128 0x18
 1824 0049 9742     		.uleb128 0x2117
 1825 004b 19       		.uleb128 0x19
 1826 004c 01       		.uleb128 0x1
 1827 004d 13       		.uleb128 0x13
 1828 004e 00       		.byte	0
 1829 004f 00       		.byte	0
 1830 0050 06       		.uleb128 0x6
 1831 0051 05       		.uleb128 0x5
 1832 0052 00       		.byte	0
 1833 0053 03       		.uleb128 0x3
 1834 0054 0E       		.uleb128 0xe
 1835 0055 3A       		.uleb128 0x3a
 1836 0056 0B       		.uleb128 0xb
 1837 0057 3B       		.uleb128 0x3b
 1838 0058 0B       		.uleb128 0xb
 1839 0059 49       		.uleb128 0x49
 1840 005a 13       		.uleb128 0x13
 1841 005b 02       		.uleb128 0x2
 1842 005c 18       		.uleb128 0x18
 1843 005d 00       		.byte	0
 1844 005e 00       		.byte	0
 1845 005f 07       		.uleb128 0x7
 1846 0060 34       		.uleb128 0x34
 1847 0061 00       		.byte	0
 1848 0062 03       		.uleb128 0x3
 1849 0063 0E       		.uleb128 0xe
 1850 0064 3A       		.uleb128 0x3a
 1851 0065 0B       		.uleb128 0xb
 1852 0066 3B       		.uleb128 0x3b
 1853 0067 0B       		.uleb128 0xb
 1854 0068 49       		.uleb128 0x49
 1855 0069 13       		.uleb128 0x13
 1856 006a 02       		.uleb128 0x2
 1857 006b 18       		.uleb128 0x18
 1858 006c 00       		.byte	0
 1859 006d 00       		.byte	0
 1860 006e 08       		.uleb128 0x8
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 48


 1861 006f 2E       		.uleb128 0x2e
 1862 0070 01       		.byte	0x1
 1863 0071 3F       		.uleb128 0x3f
 1864 0072 19       		.uleb128 0x19
 1865 0073 03       		.uleb128 0x3
 1866 0074 0E       		.uleb128 0xe
 1867 0075 3A       		.uleb128 0x3a
 1868 0076 0B       		.uleb128 0xb
 1869 0077 3B       		.uleb128 0x3b
 1870 0078 0B       		.uleb128 0xb
 1871 0079 27       		.uleb128 0x27
 1872 007a 19       		.uleb128 0x19
 1873 007b 11       		.uleb128 0x11
 1874 007c 01       		.uleb128 0x1
 1875 007d 12       		.uleb128 0x12
 1876 007e 06       		.uleb128 0x6
 1877 007f 40       		.uleb128 0x40
 1878 0080 18       		.uleb128 0x18
 1879 0081 9642     		.uleb128 0x2116
 1880 0083 19       		.uleb128 0x19
 1881 0084 01       		.uleb128 0x1
 1882 0085 13       		.uleb128 0x13
 1883 0086 00       		.byte	0
 1884 0087 00       		.byte	0
 1885 0088 09       		.uleb128 0x9
 1886 0089 34       		.uleb128 0x34
 1887 008a 00       		.byte	0
 1888 008b 03       		.uleb128 0x3
 1889 008c 08       		.uleb128 0x8
 1890 008d 3A       		.uleb128 0x3a
 1891 008e 0B       		.uleb128 0xb
 1892 008f 3B       		.uleb128 0x3b
 1893 0090 0B       		.uleb128 0xb
 1894 0091 49       		.uleb128 0x49
 1895 0092 13       		.uleb128 0x13
 1896 0093 02       		.uleb128 0x2
 1897 0094 18       		.uleb128 0x18
 1898 0095 00       		.byte	0
 1899 0096 00       		.byte	0
 1900 0097 0A       		.uleb128 0xa
 1901 0098 2E       		.uleb128 0x2e
 1902 0099 01       		.byte	0x1
 1903 009a 3F       		.uleb128 0x3f
 1904 009b 19       		.uleb128 0x19
 1905 009c 03       		.uleb128 0x3
 1906 009d 0E       		.uleb128 0xe
 1907 009e 3A       		.uleb128 0x3a
 1908 009f 0B       		.uleb128 0xb
 1909 00a0 3B       		.uleb128 0x3b
 1910 00a1 05       		.uleb128 0x5
 1911 00a2 27       		.uleb128 0x27
 1912 00a3 19       		.uleb128 0x19
 1913 00a4 11       		.uleb128 0x11
 1914 00a5 01       		.uleb128 0x1
 1915 00a6 12       		.uleb128 0x12
 1916 00a7 06       		.uleb128 0x6
 1917 00a8 40       		.uleb128 0x40
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 49


 1918 00a9 18       		.uleb128 0x18
 1919 00aa 9642     		.uleb128 0x2116
 1920 00ac 19       		.uleb128 0x19
 1921 00ad 01       		.uleb128 0x1
 1922 00ae 13       		.uleb128 0x13
 1923 00af 00       		.byte	0
 1924 00b0 00       		.byte	0
 1925 00b1 0B       		.uleb128 0xb
 1926 00b2 34       		.uleb128 0x34
 1927 00b3 00       		.byte	0
 1928 00b4 03       		.uleb128 0x3
 1929 00b5 08       		.uleb128 0x8
 1930 00b6 3A       		.uleb128 0x3a
 1931 00b7 0B       		.uleb128 0xb
 1932 00b8 3B       		.uleb128 0x3b
 1933 00b9 05       		.uleb128 0x5
 1934 00ba 49       		.uleb128 0x49
 1935 00bb 13       		.uleb128 0x13
 1936 00bc 02       		.uleb128 0x2
 1937 00bd 18       		.uleb128 0x18
 1938 00be 00       		.byte	0
 1939 00bf 00       		.byte	0
 1940 00c0 0C       		.uleb128 0xc
 1941 00c1 34       		.uleb128 0x34
 1942 00c2 00       		.byte	0
 1943 00c3 03       		.uleb128 0x3
 1944 00c4 0E       		.uleb128 0xe
 1945 00c5 3A       		.uleb128 0x3a
 1946 00c6 0B       		.uleb128 0xb
 1947 00c7 3B       		.uleb128 0x3b
 1948 00c8 05       		.uleb128 0x5
 1949 00c9 49       		.uleb128 0x49
 1950 00ca 13       		.uleb128 0x13
 1951 00cb 02       		.uleb128 0x2
 1952 00cc 18       		.uleb128 0x18
 1953 00cd 00       		.byte	0
 1954 00ce 00       		.byte	0
 1955 00cf 0D       		.uleb128 0xd
 1956 00d0 05       		.uleb128 0x5
 1957 00d1 00       		.byte	0
 1958 00d2 03       		.uleb128 0x3
 1959 00d3 0E       		.uleb128 0xe
 1960 00d4 3A       		.uleb128 0x3a
 1961 00d5 0B       		.uleb128 0xb
 1962 00d6 3B       		.uleb128 0x3b
 1963 00d7 05       		.uleb128 0x5
 1964 00d8 49       		.uleb128 0x49
 1965 00d9 13       		.uleb128 0x13
 1966 00da 02       		.uleb128 0x2
 1967 00db 18       		.uleb128 0x18
 1968 00dc 00       		.byte	0
 1969 00dd 00       		.byte	0
 1970 00de 0E       		.uleb128 0xe
 1971 00df 2E       		.uleb128 0x2e
 1972 00e0 01       		.byte	0x1
 1973 00e1 3F       		.uleb128 0x3f
 1974 00e2 19       		.uleb128 0x19
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 50


 1975 00e3 03       		.uleb128 0x3
 1976 00e4 0E       		.uleb128 0xe
 1977 00e5 3A       		.uleb128 0x3a
 1978 00e6 0B       		.uleb128 0xb
 1979 00e7 3B       		.uleb128 0x3b
 1980 00e8 05       		.uleb128 0x5
 1981 00e9 27       		.uleb128 0x27
 1982 00ea 19       		.uleb128 0x19
 1983 00eb 49       		.uleb128 0x49
 1984 00ec 13       		.uleb128 0x13
 1985 00ed 11       		.uleb128 0x11
 1986 00ee 01       		.uleb128 0x1
 1987 00ef 12       		.uleb128 0x12
 1988 00f0 06       		.uleb128 0x6
 1989 00f1 40       		.uleb128 0x40
 1990 00f2 18       		.uleb128 0x18
 1991 00f3 9742     		.uleb128 0x2117
 1992 00f5 19       		.uleb128 0x19
 1993 00f6 01       		.uleb128 0x1
 1994 00f7 13       		.uleb128 0x13
 1995 00f8 00       		.byte	0
 1996 00f9 00       		.byte	0
 1997 00fa 0F       		.uleb128 0xf
 1998 00fb 2E       		.uleb128 0x2e
 1999 00fc 01       		.byte	0x1
 2000 00fd 3F       		.uleb128 0x3f
 2001 00fe 19       		.uleb128 0x19
 2002 00ff 03       		.uleb128 0x3
 2003 0100 0E       		.uleb128 0xe
 2004 0101 3A       		.uleb128 0x3a
 2005 0102 0B       		.uleb128 0xb
 2006 0103 3B       		.uleb128 0x3b
 2007 0104 05       		.uleb128 0x5
 2008 0105 27       		.uleb128 0x27
 2009 0106 19       		.uleb128 0x19
 2010 0107 49       		.uleb128 0x49
 2011 0108 13       		.uleb128 0x13
 2012 0109 11       		.uleb128 0x11
 2013 010a 01       		.uleb128 0x1
 2014 010b 12       		.uleb128 0x12
 2015 010c 06       		.uleb128 0x6
 2016 010d 40       		.uleb128 0x40
 2017 010e 18       		.uleb128 0x18
 2018 010f 9642     		.uleb128 0x2116
 2019 0111 19       		.uleb128 0x19
 2020 0112 01       		.uleb128 0x1
 2021 0113 13       		.uleb128 0x13
 2022 0114 00       		.byte	0
 2023 0115 00       		.byte	0
 2024 0116 10       		.uleb128 0x10
 2025 0117 2E       		.uleb128 0x2e
 2026 0118 01       		.byte	0x1
 2027 0119 3F       		.uleb128 0x3f
 2028 011a 19       		.uleb128 0x19
 2029 011b 03       		.uleb128 0x3
 2030 011c 0E       		.uleb128 0xe
 2031 011d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 51


 2032 011e 0B       		.uleb128 0xb
 2033 011f 3B       		.uleb128 0x3b
 2034 0120 05       		.uleb128 0x5
 2035 0121 27       		.uleb128 0x27
 2036 0122 19       		.uleb128 0x19
 2037 0123 11       		.uleb128 0x11
 2038 0124 01       		.uleb128 0x1
 2039 0125 12       		.uleb128 0x12
 2040 0126 06       		.uleb128 0x6
 2041 0127 40       		.uleb128 0x40
 2042 0128 18       		.uleb128 0x18
 2043 0129 9742     		.uleb128 0x2117
 2044 012b 19       		.uleb128 0x19
 2045 012c 01       		.uleb128 0x1
 2046 012d 13       		.uleb128 0x13
 2047 012e 00       		.byte	0
 2048 012f 00       		.byte	0
 2049 0130 11       		.uleb128 0x11
 2050 0131 01       		.uleb128 0x1
 2051 0132 01       		.byte	0x1
 2052 0133 49       		.uleb128 0x49
 2053 0134 13       		.uleb128 0x13
 2054 0135 01       		.uleb128 0x1
 2055 0136 13       		.uleb128 0x13
 2056 0137 00       		.byte	0
 2057 0138 00       		.byte	0
 2058 0139 12       		.uleb128 0x12
 2059 013a 21       		.uleb128 0x21
 2060 013b 00       		.byte	0
 2061 013c 49       		.uleb128 0x49
 2062 013d 13       		.uleb128 0x13
 2063 013e 2F       		.uleb128 0x2f
 2064 013f 0B       		.uleb128 0xb
 2065 0140 00       		.byte	0
 2066 0141 00       		.byte	0
 2067 0142 13       		.uleb128 0x13
 2068 0143 34       		.uleb128 0x34
 2069 0144 00       		.byte	0
 2070 0145 03       		.uleb128 0x3
 2071 0146 0E       		.uleb128 0xe
 2072 0147 3A       		.uleb128 0x3a
 2073 0148 0B       		.uleb128 0xb
 2074 0149 3B       		.uleb128 0x3b
 2075 014a 05       		.uleb128 0x5
 2076 014b 49       		.uleb128 0x49
 2077 014c 13       		.uleb128 0x13
 2078 014d 3F       		.uleb128 0x3f
 2079 014e 19       		.uleb128 0x19
 2080 014f 3C       		.uleb128 0x3c
 2081 0150 19       		.uleb128 0x19
 2082 0151 00       		.byte	0
 2083 0152 00       		.byte	0
 2084 0153 14       		.uleb128 0x14
 2085 0154 26       		.uleb128 0x26
 2086 0155 00       		.byte	0
 2087 0156 49       		.uleb128 0x49
 2088 0157 13       		.uleb128 0x13
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 52


 2089 0158 00       		.byte	0
 2090 0159 00       		.byte	0
 2091 015a 15       		.uleb128 0x15
 2092 015b 34       		.uleb128 0x34
 2093 015c 00       		.byte	0
 2094 015d 03       		.uleb128 0x3
 2095 015e 0E       		.uleb128 0xe
 2096 015f 3A       		.uleb128 0x3a
 2097 0160 0B       		.uleb128 0xb
 2098 0161 3B       		.uleb128 0x3b
 2099 0162 0B       		.uleb128 0xb
 2100 0163 49       		.uleb128 0x49
 2101 0164 13       		.uleb128 0x13
 2102 0165 3F       		.uleb128 0x3f
 2103 0166 19       		.uleb128 0x19
 2104 0167 02       		.uleb128 0x2
 2105 0168 18       		.uleb128 0x18
 2106 0169 00       		.byte	0
 2107 016a 00       		.byte	0
 2108 016b 00       		.byte	0
 2109              		.section	.debug_aranges,"",%progbits
 2110 0000 6C000000 		.4byte	0x6c
 2111 0004 0200     		.2byte	0x2
 2112 0006 00000000 		.4byte	.Ldebug_info0
 2113 000a 04       		.byte	0x4
 2114 000b 00       		.byte	0
 2115 000c 0000     		.2byte	0
 2116 000e 0000     		.2byte	0
 2117 0010 00000000 		.4byte	.LFB0
 2118 0014 68000000 		.4byte	.LFE0-.LFB0
 2119 0018 00000000 		.4byte	.LFB1
 2120 001c 2E000000 		.4byte	.LFE1-.LFB1
 2121 0020 00000000 		.4byte	.LFB2
 2122 0024 28000000 		.4byte	.LFE2-.LFB2
 2123 0028 00000000 		.4byte	.LFB3
 2124 002c 70000000 		.4byte	.LFE3-.LFB3
 2125 0030 00000000 		.4byte	.LFB4
 2126 0034 40010000 		.4byte	.LFE4-.LFB4
 2127 0038 00000000 		.4byte	.LFB5
 2128 003c 50000000 		.4byte	.LFE5-.LFB5
 2129 0040 00000000 		.4byte	.LFB6
 2130 0044 10010000 		.4byte	.LFE6-.LFB6
 2131 0048 00000000 		.4byte	.LFB7
 2132 004c 44000000 		.4byte	.LFE7-.LFB7
 2133 0050 00000000 		.4byte	.LFB8
 2134 0054 38000000 		.4byte	.LFE8-.LFB8
 2135 0058 00000000 		.4byte	.LFB9
 2136 005c 58000000 		.4byte	.LFE9-.LFB9
 2137 0060 00000000 		.4byte	.LFB10
 2138 0064 5C000000 		.4byte	.LFE10-.LFB10
 2139 0068 00000000 		.4byte	0
 2140 006c 00000000 		.4byte	0
 2141              		.section	.debug_ranges,"",%progbits
 2142              	.Ldebug_ranges0:
 2143 0000 00000000 		.4byte	.LFB0
 2144 0004 68000000 		.4byte	.LFE0
 2145 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 53


 2146 000c 2E000000 		.4byte	.LFE1
 2147 0010 00000000 		.4byte	.LFB2
 2148 0014 28000000 		.4byte	.LFE2
 2149 0018 00000000 		.4byte	.LFB3
 2150 001c 70000000 		.4byte	.LFE3
 2151 0020 00000000 		.4byte	.LFB4
 2152 0024 40010000 		.4byte	.LFE4
 2153 0028 00000000 		.4byte	.LFB5
 2154 002c 50000000 		.4byte	.LFE5
 2155 0030 00000000 		.4byte	.LFB6
 2156 0034 10010000 		.4byte	.LFE6
 2157 0038 00000000 		.4byte	.LFB7
 2158 003c 44000000 		.4byte	.LFE7
 2159 0040 00000000 		.4byte	.LFB8
 2160 0044 38000000 		.4byte	.LFE8
 2161 0048 00000000 		.4byte	.LFB9
 2162 004c 58000000 		.4byte	.LFE9
 2163 0050 00000000 		.4byte	.LFB10
 2164 0054 5C000000 		.4byte	.LFE10
 2165 0058 00000000 		.4byte	0
 2166 005c 00000000 		.4byte	0
 2167              		.section	.debug_line,"",%progbits
 2168              	.Ldebug_line0:
 2169 0000 41020000 		.section	.debug_str,"MS",%progbits,1
 2169      02007700 
 2169      00000201 
 2169      FB0E0D00 
 2169      01010101 
 2170              	.LASF59:
 2171 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 2171      72617465 
 2171      645F536F 
 2171      75726365 
 2171      5C50536F 
 2172              	.LASF55:
 2173 002b 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 2173      656E7365 
 2173      5F435344 
 2173      5F646562 
 2173      6F756E63 
 2174              	.LASF10:
 2175 0048 75696E74 		.ascii	"uint16\000"
 2175      313600
 2176              	.LASF27:
 2177 004f 66696C74 		.ascii	"filteredRawData\000"
 2177      65726564 
 2177      52617744 
 2177      61746100 
 2178              	.LASF32:
 2179 005f 66696E67 		.ascii	"fingerThreshold\000"
 2179      65725468 
 2179      72657368 
 2179      6F6C6400 
 2180              	.LASF18:
 2181 006f 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2181      656E7365 
 2181      5F435344 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 54


 2181      5F496E69 
 2181      7469616C 
 2182              	.LASF58:
 2183 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2183      43313120 
 2183      352E342E 
 2183      31203230 
 2183      31363036 
 2184 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2184      20726576 
 2184      6973696F 
 2184      6E203233 
 2184      37373135 
 2185 00fb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2185      66756E63 
 2185      74696F6E 
 2185      2D736563 
 2185      74696F6E 
 2186              	.LASF7:
 2187 0123 6C6F6E67 		.ascii	"long long unsigned int\000"
 2187      206C6F6E 
 2187      6720756E 
 2187      7369676E 
 2187      65642069 
 2188              	.LASF6:
 2189 013a 6C6F6E67 		.ascii	"long long int\000"
 2189      206C6F6E 
 2189      6720696E 
 2189      7400
 2190              	.LASF0:
 2191 0148 7369676E 		.ascii	"signed char\000"
 2191      65642063 
 2191      68617200 
 2192              	.LASF37:
 2193 0154 72617749 		.ascii	"rawIndex\000"
 2193      6E646578 
 2193      00
 2194              	.LASF38:
 2195 015d 6E756D62 		.ascii	"numberOfSensors\000"
 2195      65724F66 
 2195      53656E73 
 2195      6F727300 
 2196              	.LASF35:
 2197 016d 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2197      656E7365 
 2197      5F435344 
 2197      5F436865 
 2197      636B4973 
 2198              	.LASF39:
 2199 018e 73746174 		.ascii	"state\000"
 2199      6500
 2200              	.LASF4:
 2201 0194 6C6F6E67 		.ascii	"long int\000"
 2201      20696E74 
 2201      00
 2202              	.LASF45:
 2203 019d 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 55


 2203      656E7365 
 2203      5F435344 
 2203      5F776964 
 2203      6765744E 
 2204              	.LASF9:
 2205 01b7 75696E74 		.ascii	"uint8\000"
 2205      3800
 2206              	.LASF13:
 2207 01bd 646F7562 		.ascii	"double\000"
 2207      6C6500
 2208              	.LASF11:
 2209 01c4 75696E74 		.ascii	"uint32\000"
 2209      333200
 2210              	.LASF33:
 2211 01cb 68797374 		.ascii	"hysteresis\000"
 2211      65726573 
 2211      697300
 2212              	.LASF17:
 2213 01d6 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 2213      656E7365 
 2213      5F435344 
 2213      5F426173 
 2213      65496E69 
 2214              	.LASF46:
 2215 01ec 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 2215      656E7365 
 2215      5F435344 
 2215      5F73656E 
 2215      736F7242 
 2216              	.LASF54:
 2217 0208 43617053 		.ascii	"CapSense_CSD_debounce\000"
 2217      656E7365 
 2217      5F435344 
 2217      5F646562 
 2217      6F756E63 
 2218              	.LASF8:
 2219 021e 756E7369 		.ascii	"unsigned int\000"
 2219      676E6564 
 2219      20696E74 
 2219      00
 2220              	.LASF5:
 2221 022b 6C6F6E67 		.ascii	"long unsigned int\000"
 2221      20756E73 
 2221      69676E65 
 2221      6420696E 
 2221      7400
 2222              	.LASF48:
 2223 023d 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 2223      656E7365 
 2223      5F435344 
 2223      5F73656E 
 2223      736F7253 
 2224              	.LASF3:
 2225 0257 73686F72 		.ascii	"short unsigned int\000"
 2225      7420756E 
 2225      7369676E 
 2225      65642069 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 56


 2225      6E7400
 2226              	.LASF19:
 2227 026a 73656E73 		.ascii	"sensor\000"
 2227      6F7200
 2228              	.LASF25:
 2229 0271 63616C63 		.ascii	"calc\000"
 2229      00
 2230              	.LASF34:
 2231 0276 6465626F 		.ascii	"debounce\000"
 2231      756E6365 
 2231      00
 2232              	.LASF16:
 2233 027f 73697A65 		.ascii	"sizetype\000"
 2233      74797065 
 2233      00
 2234              	.LASF15:
 2235 0288 6C6F6E67 		.ascii	"long double\000"
 2235      20646F75 
 2235      626C6500 
 2236              	.LASF22:
 2237 0294 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 2237      656E7365 
 2237      5F435344 
 2237      5F496E69 
 2237      7469616C 
 2238              	.LASF23:
 2239 02bc 656E4D61 		.ascii	"enMask\000"
 2239      736B00
 2240              	.LASF44:
 2241 02c3 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2241      656E7365 
 2241      5F435344 
 2241      5F73656E 
 2241      736F7245 
 2242              	.LASF12:
 2243 02e1 666C6F61 		.ascii	"float\000"
 2243      7400
 2244              	.LASF50:
 2245 02e7 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 2245      656E7365 
 2245      5F435344 
 2245      5F6C6F77 
 2245      42617365 
 2246              	.LASF20:
 2247 0308 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 2247      656E7365 
 2247      5F435344 
 2247      5F496E69 
 2247      7469616C 
 2248              	.LASF51:
 2249 032c 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 2249      656E7365 
 2249      5F435344 
 2249      5F66696E 
 2249      67657254 
 2250              	.LASF1:
 2251 0349 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 57


 2251      676E6564 
 2251      20636861 
 2251      7200
 2252              	.LASF28:
 2253 0357 6E6F6973 		.ascii	"noiseThreshold\000"
 2253      65546872 
 2253      6573686F 
 2253      6C6400
 2254              	.LASF2:
 2255 0366 73686F72 		.ascii	"short int\000"
 2255      7420696E 
 2255      7400
 2256              	.LASF21:
 2257 0370 77696467 		.ascii	"widget\000"
 2257      657400
 2258              	.LASF31:
 2259 0377 6F6E4D61 		.ascii	"onMask\000"
 2259      736B00
 2260              	.LASF43:
 2261 037e 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2261      656E7365 
 2261      5F435344 
 2261      5F73656E 
 2261      736F7252 
 2262              	.LASF24:
 2263 0395 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 2263      656E7365 
 2263      5F435344 
 2263      5F557064 
 2263      61746553 
 2264              	.LASF57:
 2265 03b7 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 2265      656E7365 
 2265      5F435344 
 2265      5F6E756D 
 2265      6265724F 
 2266              	.LASF60:
 2267 03d4 483A5C50 		.ascii	"H:\\P4P\\New\\P4P_Project-130\\Capsense_stuff\\Cap_"
 2267      34505C4E 
 2267      65775C50 
 2267      34505F50 
 2267      726F6A65 
 2268 0402 53656E73 		.ascii	"Sense.cydsn\\CapSense_CSD_WithTuner01.cydsn\000"
 2268      652E6379 
 2268      64736E5C 
 2268      43617053 
 2268      656E7365 
 2269              	.LASF52:
 2270 042d 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 2270      656E7365 
 2270      5F435344 
 2270      5F6E6F69 
 2270      73655468 
 2271              	.LASF14:
 2272 0449 63686172 		.ascii	"char\000"
 2272      00
 2273              	.LASF41:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 58


 2274 044e 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 2274      656E7365 
 2274      5F435344 
 2274      5F456E61 
 2274      626C6557 
 2275              	.LASF29:
 2276 0468 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 2276      656E7365 
 2276      5F435344 
 2276      5F557064 
 2276      61746545 
 2277              	.LASF53:
 2278 048c 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 2278      656E7365 
 2278      5F435344 
 2278      5F687973 
 2278      74657265 
 2279              	.LASF30:
 2280 04a4 6465626F 		.ascii	"debounceIndex\000"
 2280      756E6365 
 2280      496E6465 
 2280      7800
 2281              	.LASF40:
 2282 04b2 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 2282      656E7365 
 2282      5F435344 
 2282      5F436865 
 2282      636B4973 
 2283              	.LASF36:
 2284 04d6 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 2284      656E7365 
 2284      5F435344 
 2284      5F436865 
 2284      636B4973 
 2285              	.LASF56:
 2286 04f7 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 2286      656E7365 
 2286      5F435344 
 2286      5F726177 
 2286      44617461 
 2287              	.LASF47:
 2288 0511 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 2288      656E7365 
 2288      5F435344 
 2288      5F73656E 
 2288      736F7242 
 2289              	.LASF26:
 2290 0530 74656D70 		.ascii	"tempRaw\000"
 2290      52617700 
 2291              	.LASF42:
 2292 0538 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 2292      656E7365 
 2292      5F435344 
 2292      5F446973 
 2292      61626C65 
 2293              	.LASF49:
 2294 0553 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccoL50IN.s 			page 59


 2294      656E7365 
 2294      5F435344 
 2294      5F73656E 
 2294      736F724F 
 2295              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
