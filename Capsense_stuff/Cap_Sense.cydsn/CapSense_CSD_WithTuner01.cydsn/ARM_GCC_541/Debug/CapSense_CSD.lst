ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,2,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 01       		.byte	1
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 4
  37              	CapSense_CSD_pcTable:
  38 0000 05500040 		.word	1073762309
  39              		.global	CapSense_CSD_portTable
  40              		.align	2
  41              		.type	CapSense_CSD_portTable, %object
  42              		.size	CapSense_CSD_portTable, 1
  43              	CapSense_CSD_portTable:
  44 0004 00       		.space	1
  45              		.global	CapSense_CSD_maskTable
  46 0005 000000   		.align	2
  47              		.type	CapSense_CSD_maskTable, %object
  48              		.size	CapSense_CSD_maskTable, 1
  49              	CapSense_CSD_maskTable:
  50 0008 20       		.byte	32
  51              		.global	CapSense_CSD_csTable
  52 0009 000000   		.align	2
  53              		.type	CapSense_CSD_csTable, %object
  54              		.size	CapSense_CSD_csTable, 32
  55              	CapSense_CSD_csTable:
  56 000c 06520040 		.word	1073762822
  57 0010 0E520040 		.word	1073762830
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 2


  58 0014 16520040 		.word	1073762838
  59 0018 1E520040 		.word	1073762846
  60 001c 26520040 		.word	1073762854
  61 0020 2E520040 		.word	1073762862
  62 0024 36520040 		.word	1073762870
  63 0028 7E520040 		.word	1073762942
  64              		.global	CapSense_CSD_idacSettings
  65              		.data
  66 0001 000000   		.align	2
  67              		.type	CapSense_CSD_idacSettings, %object
  68              		.size	CapSense_CSD_idacSettings, 1
  69              	CapSense_CSD_idacSettings:
  70 0004 C8       		.byte	-56
  71              		.global	CapSense_CSD_widgetResolution
  72 0005 000000   		.align	2
  73              		.type	CapSense_CSD_widgetResolution, %object
  74              		.size	CapSense_CSD_widgetResolution, 1
  75              	CapSense_CSD_widgetResolution:
  76 0008 FF       		.byte	-1
  77              		.global	CapSense_CSD_analogSwitchDivider
  78 0009 000000   		.align	2
  79              		.type	CapSense_CSD_analogSwitchDivider, %object
  80              		.size	CapSense_CSD_analogSwitchDivider, 1
  81              	CapSense_CSD_analogSwitchDivider:
  82 000c 0B       		.byte	11
  83              		.global	CapSense_CSD_widgetNumber
  84              		.section	.rodata
  85              		.align	2
  86              		.type	CapSense_CSD_widgetNumber, %object
  87              		.size	CapSense_CSD_widgetNumber, 1
  88              	CapSense_CSD_widgetNumber:
  89 002c 00       		.space	1
  90              		.section	.text.CapSense_CSD_Init,"ax",%progbits
  91              		.align	2
  92              		.global	CapSense_CSD_Init
  93              		.thumb
  94              		.thumb_func
  95              		.type	CapSense_CSD_Init, %function
  96              	CapSense_CSD_Init:
  97              	.LFB0:
  98              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 3


  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c **** };
  49:Generated_Source\PSoC5/CapSense_CSD.c **** 
  50:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  52:Generated_Source\PSoC5/CapSense_CSD.c **** };
  53:Generated_Source\PSoC5/CapSense_CSD.c **** 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  55:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  56:Generated_Source\PSoC5/CapSense_CSD.c **** };
  57:Generated_Source\PSoC5/CapSense_CSD.c **** 
  58:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  60:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  61:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  62:Generated_Source\PSoC5/CapSense_CSD.c **** };
  63:Generated_Source\PSoC5/CapSense_CSD.c **** 
  64:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_idacSettings[] = {
  65:Generated_Source\PSoC5/CapSense_CSD.c ****     200u,
  66:Generated_Source\PSoC5/CapSense_CSD.c **** };
  67:Generated_Source\PSoC5/CapSense_CSD.c **** 
  68:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_widgetResolution[] = {
  69:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_16_BITS,
  70:Generated_Source\PSoC5/CapSense_CSD.c **** };
  71:Generated_Source\PSoC5/CapSense_CSD.c **** 
  72:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     11u, 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 4


  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, /* Button0__BTN */
  78:Generated_Source\PSoC5/CapSense_CSD.c ****     
  79:Generated_Source\PSoC5/CapSense_CSD.c **** };
  80:Generated_Source\PSoC5/CapSense_CSD.c **** 
  81:Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD.c **** 
  83:Generated_Source\PSoC5/CapSense_CSD.c **** 
  84:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
  86:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  87:Generated_Source\PSoC5/CapSense_CSD.c **** *
  88:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
  89:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
  90:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
  91:Generated_Source\PSoC5/CapSense_CSD.c **** *
  92:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
  93:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
  94:Generated_Source\PSoC5/CapSense_CSD.c **** *
  95:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
  96:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
  97:Generated_Source\PSoC5/CapSense_CSD.c **** *
  98:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  99:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 100:Generated_Source\PSoC5/CapSense_CSD.c **** {
  99              		.loc 1 100 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 82B0     		sub	sp, sp, #8
 108              		.cfi_def_cfa_offset 16
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 101:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 102:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 103:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 104:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 105:Generated_Source\PSoC5/CapSense_CSD.c ****         
 106:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 107:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 108:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 109:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 110:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 111:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 112:Generated_Source\PSoC5/CapSense_CSD.c ****     
 113:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 114:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 111              		.loc 1 114 0
 112 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 115:Generated_Source\PSoC5/CapSense_CSD.c **** 
 116:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 5


 117:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 118:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 119:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 120:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 121:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 122:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 123:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 124:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 125:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 126:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 127:Generated_Source\PSoC5/CapSense_CSD.c **** 
 128:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 130:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 131:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 132:Generated_Source\PSoC5/CapSense_CSD.c **** 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 134:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 135:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 136:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 137:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 138:Generated_Source\PSoC5/CapSense_CSD.c ****         
 139:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 141:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 143:Generated_Source\PSoC5/CapSense_CSD.c ****         
 144:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 145:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 146:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 148:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 149:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 150:Generated_Source\PSoC5/CapSense_CSD.c ****         
 151:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 153:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 154:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 155:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 156:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 166:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         
 169:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 171:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 172:Generated_Source\PSoC5/CapSense_CSD.c ****     
 173:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 6


 174:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 113              		.loc 1 174 0
 114 000a 2E4B     		ldr	r3, .L2
 115 000c 0722     		movs	r2, #7
 116 000e 1A70     		strb	r2, [r3]
 175:Generated_Source\PSoC5/CapSense_CSD.c ****     
 176:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 177:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 178:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 180:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 181:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****     
 188:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 117              		.loc 1 190 0
 118 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 119 0014 0346     		mov	r3, r0
 120 0016 FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 121              		.loc 1 191 0
 122 0018 2B4A     		ldr	r2, .L2+4
 123 001a 2B4B     		ldr	r3, .L2+4
 124 001c 1B78     		ldrb	r3, [r3]
 125 001e DBB2     		uxtb	r3, r3
 126 0020 43F00303 		orr	r3, r3, #3
 127 0024 DBB2     		uxtb	r3, r3
 128 0026 1370     		strb	r3, [r2]
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 129              		.loc 1 192 0
 130 0028 284A     		ldr	r2, .L2+8
 131 002a 284B     		ldr	r3, .L2+8
 132 002c 1B78     		ldrb	r3, [r3]
 133 002e DBB2     		uxtb	r3, r3
 134 0030 43F00303 		orr	r3, r3, #3
 135 0034 DBB2     		uxtb	r3, r3
 136 0036 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 137              		.loc 1 193 0
 138 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 139 003a 1846     		mov	r0, r3
 140 003c FFF7FEFF 		bl	CyExitCriticalSection
 194:Generated_Source\PSoC5/CapSense_CSD.c ****         
 195:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 141              		.loc 1 196 0
 142 0040 234B     		ldr	r3, .L2+12
 143 0042 FF22     		movs	r2, #255
 144 0044 1A70     		strb	r2, [r3]
 197:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 145              		.loc 1 197 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 7


 146 0046 234B     		ldr	r3, .L2+16
 147 0048 FF22     		movs	r2, #255
 148 004a 1A70     		strb	r2, [r3]
 198:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 149              		.loc 1 198 0
 150 004c 224B     		ldr	r3, .L2+20
 151 004e FF22     		movs	r2, #255
 152 0050 1A70     		strb	r2, [r3]
 199:Generated_Source\PSoC5/CapSense_CSD.c ****         
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 153              		.loc 1 201 0
 154 0052 224B     		ldr	r3, .L2+24
 155 0054 FF22     		movs	r2, #255
 156 0056 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 157              		.loc 1 202 0
 158 0058 214B     		ldr	r3, .L2+28
 159 005a FF22     		movs	r2, #255
 160 005c 1A70     		strb	r2, [r3]
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 161              		.loc 1 203 0
 162 005e 214B     		ldr	r3, .L2+32
 163 0060 FF22     		movs	r2, #255
 164 0062 1A70     		strb	r2, [r3]
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 206:Generated_Source\PSoC5/CapSense_CSD.c ****     
 207:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 209:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 210:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 211:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 212:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 213:Generated_Source\PSoC5/CapSense_CSD.c ****             
 214:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 215:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 216:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 217:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 218:Generated_Source\PSoC5/CapSense_CSD.c ****            
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 220:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 221:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 222:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 223:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 224:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 225:Generated_Source\PSoC5/CapSense_CSD.c ****             
 226:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 227:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 228:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 229:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 230:Generated_Source\PSoC5/CapSense_CSD.c ****             
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 8


 236:Generated_Source\PSoC5/CapSense_CSD.c ****             
 237:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 238:Generated_Source\PSoC5/CapSense_CSD.c ****     
 239:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 240:Generated_Source\PSoC5/CapSense_CSD.c ****     
 241:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 242:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 165              		.loc 1 242 0
 166 0064 204B     		ldr	r3, .L2+36
 167 0066 0122     		movs	r2, #1
 168 0068 1A60     		str	r2, [r3]
 243:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 169              		.loc 1 243 0
 170 006a 2049     		ldr	r1, .L2+40
 171 006c 0020     		movs	r0, #0
 172 006e FFF7FEFF 		bl	CyIntSetVector
 244:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 173              		.loc 1 244 0
 174 0072 0721     		movs	r1, #7
 175 0074 0020     		movs	r0, #0
 176 0076 FFF7FEFF 		bl	CyIntSetPriority
 245:Generated_Source\PSoC5/CapSense_CSD.c ****     
 246:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 247:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 248:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 249:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 250:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 251:Generated_Source\PSoC5/CapSense_CSD.c ****     
 252:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 253:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 177              		.loc 1 253 0
 178 007a FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 254:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 179              		.loc 1 254 0
 180 007e 0120     		movs	r0, #1
 181 0080 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 255:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 182              		.loc 1 255 0
 183 0084 0220     		movs	r0, #2
 184 0086 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 256:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 257:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 185              		.loc 1 257 0
 186 008a 0320     		movs	r0, #3
 187 008c FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 258:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 259:Generated_Source\PSoC5/CapSense_CSD.c ****     
 260:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 261:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 262:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 263:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 264:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 265:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 266:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     
 269:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 9


 270:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 188              		.loc 1 275 0
 189 0090 174A     		ldr	r2, .L2+44
 190 0092 174B     		ldr	r3, .L2+44
 191 0094 1B78     		ldrb	r3, [r3]
 192 0096 DBB2     		uxtb	r3, r3
 193 0098 43F00403 		orr	r3, r3, #4
 194 009c DBB2     		uxtb	r3, r3
 195 009e 1370     		strb	r3, [r2]
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 277:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 279:Generated_Source\PSoC5/CapSense_CSD.c ****     
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 196              		.loc 1 281 0
 197 00a0 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 198              		.loc 1 283 0
 199 00a4 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 284:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 200              		.loc 1 284 0
 201 00a8 0020     		movs	r0, #0
 202 00aa FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 285:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 203              		.loc 1 285 0
 204 00ae 0820     		movs	r0, #8
 205 00b0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 286:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 206              		.loc 1 286 0
 207 00b4 0020     		movs	r0, #0
 208 00b6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 287:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 288:Generated_Source\PSoC5/CapSense_CSD.c ****     
 289:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 290:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 291:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 292:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 293:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 294:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 295:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 296:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 298:Generated_Source\PSoC5/CapSense_CSD.c ****     
 299:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 301:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 302:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 303:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 304:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 305:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 10


 306:Generated_Source\PSoC5/CapSense_CSD.c **** }
 209              		.loc 1 306 0
 210 00ba 00BF     		nop
 211 00bc 0837     		adds	r7, r7, #8
 212              		.cfi_def_cfa_offset 8
 213 00be BD46     		mov	sp, r7
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 00c0 80BD     		pop	{r7, pc}
 217              	.L3:
 218 00c2 00BF     		.align	2
 219              	.L2:
 220 00c4 8B640040 		.word	1073767563
 221 00c8 9A640040 		.word	1073767578
 222 00cc 9B640040 		.word	1073767579
 223 00d0 2A640040 		.word	1073767466
 224 00d4 4A640040 		.word	1073767498
 225 00d8 0A640040 		.word	1073767434
 226 00dc 2B640040 		.word	1073767467
 227 00e0 5B640040 		.word	1073767515
 228 00e4 4B640040 		.word	1073767499
 229 00e8 80E100E0 		.word	-536813184
 230 00ec 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 231 00f0 78640040 		.word	1073767544
 232              		.cfi_endproc
 233              	.LFE0:
 234              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 235              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_CSD_Enable
 238              		.thumb
 239              		.thumb_func
 240              		.type	CapSense_CSD_Enable, %function
 241              	CapSense_CSD_Enable:
 242              	.LFB1:
 307:Generated_Source\PSoC5/CapSense_CSD.c **** 
 308:Generated_Source\PSoC5/CapSense_CSD.c **** 
 309:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 310:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 311:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 312:Generated_Source\PSoC5/CapSense_CSD.c **** *
 313:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 314:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 315:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 316:Generated_Source\PSoC5/CapSense_CSD.c **** *
 317:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 318:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 319:Generated_Source\PSoC5/CapSense_CSD.c **** *
 320:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 321:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 322:Generated_Source\PSoC5/CapSense_CSD.c **** *
 323:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 324:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 325:Generated_Source\PSoC5/CapSense_CSD.c **** {
 243              		.loc 1 325 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 11


 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 82B0     		sub	sp, sp, #8
 252              		.cfi_def_cfa_offset 16
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 326:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 327:Generated_Source\PSoC5/CapSense_CSD.c ****     
 328:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 255              		.loc 1 328 0
 256 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 257 000a 0346     		mov	r3, r0
 258 000c FB71     		strb	r3, [r7, #7]
 329:Generated_Source\PSoC5/CapSense_CSD.c ****     
 330:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 331:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 332:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 333:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 334:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 335:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 336:Generated_Source\PSoC5/CapSense_CSD.c ****         
 337:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 338:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 339:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 340:Generated_Source\PSoC5/CapSense_CSD.c ****     
 341:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 342:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 259              		.loc 1 342 0
 260 000e 1C4A     		ldr	r2, .L5
 261 0010 1B4B     		ldr	r3, .L5
 262 0012 1B78     		ldrb	r3, [r3]
 263 0014 DBB2     		uxtb	r3, r3
 264 0016 43F02003 		orr	r3, r3, #32
 265 001a DBB2     		uxtb	r3, r3
 266 001c 1370     		strb	r3, [r2]
 343:Generated_Source\PSoC5/CapSense_CSD.c ****     
 344:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 345:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 346:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 347:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 348:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 349:Generated_Source\PSoC5/CapSense_CSD.c ****         
 350:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 351:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 352:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 353:Generated_Source\PSoC5/CapSense_CSD.c ****         
 354:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 355:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 356:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         
 358:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     
 360:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 361:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 12


 362:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 363:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 364:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 365:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 366:Generated_Source\PSoC5/CapSense_CSD.c ****             
 367:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 368:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 369:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****            
 371:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 372:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         
 375:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 376:Generated_Source\PSoC5/CapSense_CSD.c ****     
 377:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 378:Generated_Source\PSoC5/CapSense_CSD.c ****     
 379:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 380:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 381:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 267              		.loc 1 381 0
 268 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     
 384:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 385:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 269              		.loc 1 385 0
 270 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 386:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 387:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 271              		.loc 1 387 0
 272 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 388:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 389:Generated_Source\PSoC5/CapSense_CSD.c ****     
 390:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 391:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 392:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 393:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 394:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 396:Generated_Source\PSoC5/CapSense_CSD.c ****     
 397:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 399:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 400:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 401:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 402:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 403:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 404:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 405:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 406:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 273              		.loc 1 407 0
 274 002a 164A     		ldr	r2, .L5+4
 275 002c 154B     		ldr	r3, .L5+4
 276 002e 1B78     		ldrb	r3, [r3]
 277 0030 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 13


 278 0032 43F01003 		orr	r3, r3, #16
 279 0036 DBB2     		uxtb	r3, r3
 280 0038 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 281              		.loc 1 408 0
 282 003a 134A     		ldr	r2, .L5+8
 283 003c 124B     		ldr	r3, .L5+8
 284 003e 1B78     		ldrb	r3, [r3]
 285 0040 DBB2     		uxtb	r3, r3
 286 0042 43F01003 		orr	r3, r3, #16
 287 0046 DBB2     		uxtb	r3, r3
 288 0048 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         
 410:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 411:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 412:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 414:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 415:Generated_Source\PSoC5/CapSense_CSD.c ****     
 416:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 418:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 419:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 420:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 421:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         
 424:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 425:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 426:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 289              		.loc 1 426 0
 290 004a 104A     		ldr	r2, .L5+12
 291 004c 0F4B     		ldr	r3, .L5+12
 292 004e 1B78     		ldrb	r3, [r3]
 293 0050 DBB2     		uxtb	r3, r3
 294 0052 43F00103 		orr	r3, r3, #1
 295 0056 DBB2     		uxtb	r3, r3
 296 0058 1370     		strb	r3, [r2]
 427:Generated_Source\PSoC5/CapSense_CSD.c ****         
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 429:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 431:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 432:Generated_Source\PSoC5/CapSense_CSD.c ****     
 433:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 297              		.loc 1 433 0
 298 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 299 005c 1846     		mov	r0, r3
 300 005e FFF7FEFF 		bl	CyExitCriticalSection
 434:Generated_Source\PSoC5/CapSense_CSD.c ****     
 435:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 301              		.loc 1 436 0
 302 0062 0B4B     		ldr	r3, .L5+16
 303 0064 0122     		movs	r2, #1
 304 0066 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 14


 438:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 440:Generated_Source\PSoC5/CapSense_CSD.c ****     
 441:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 442:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 305              		.loc 1 442 0
 306 0068 0A4A     		ldr	r2, .L5+20
 307 006a 0A4B     		ldr	r3, .L5+20
 308 006c 1B78     		ldrb	r3, [r3]
 309 006e DBB2     		uxtb	r3, r3
 310 0070 63F07F03 		orn	r3, r3, #127
 311 0074 DBB2     		uxtb	r3, r3
 312 0076 1370     		strb	r3, [r2]
 443:Generated_Source\PSoC5/CapSense_CSD.c **** }
 313              		.loc 1 443 0
 314 0078 00BF     		nop
 315 007a 0837     		adds	r7, r7, #8
 316              		.cfi_def_cfa_offset 8
 317 007c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 007e 80BD     		pop	{r7, pc}
 321              	.L6:
 322              		.align	2
 323              	.L5:
 324 0080 9B640040 		.word	1073767579
 325 0084 BB430040 		.word	1073759163
 326 0088 AB430040 		.word	1073759147
 327 008c 70580040 		.word	1073764464
 328 0090 00E100E0 		.word	-536813312
 329 0094 78640040 		.word	1073767544
 330              		.cfi_endproc
 331              	.LFE1:
 332              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 333              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_CSD_Start
 336              		.thumb
 337              		.thumb_func
 338              		.type	CapSense_CSD_Start, %function
 339              	CapSense_CSD_Start:
 340              	.LFB2:
 444:Generated_Source\PSoC5/CapSense_CSD.c **** 
 445:Generated_Source\PSoC5/CapSense_CSD.c **** 
 446:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 447:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 448:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 449:Generated_Source\PSoC5/CapSense_CSD.c **** *
 450:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 451:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 452:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 453:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 454:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 455:Generated_Source\PSoC5/CapSense_CSD.c **** *
 456:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 457:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 458:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 15


 459:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 460:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 461:Generated_Source\PSoC5/CapSense_CSD.c **** *
 462:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 463:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 464:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 465:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 466:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 467:Generated_Source\PSoC5/CapSense_CSD.c **** *
 468:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 469:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 470:Generated_Source\PSoC5/CapSense_CSD.c **** *
 471:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 472:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 477:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 478:Generated_Source\PSoC5/CapSense_CSD.c **** {
 341              		.loc 1 478 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 479:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 351              		.loc 1 479 0
 352 0004 064B     		ldr	r3, .L9
 353 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 0008 002B     		cmp	r3, #0
 355 000a 04D1     		bne	.L8
 480:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 481:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 356              		.loc 1 481 0
 357 000c FFF7FEFF 		bl	CapSense_CSD_Init
 482:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 358              		.loc 1 482 0
 359 0010 034B     		ldr	r3, .L9
 360 0012 0122     		movs	r2, #1
 361 0014 1A70     		strb	r2, [r3]
 362              	.L8:
 483:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 484:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 363              		.loc 1 484 0
 364 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 485:Generated_Source\PSoC5/CapSense_CSD.c ****     
 486:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 487:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 488:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 489:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 490:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 491:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 16


 492:Generated_Source\PSoC5/CapSense_CSD.c **** }
 365              		.loc 1 492 0
 366 001a 00BF     		nop
 367 001c 80BD     		pop	{r7, pc}
 368              	.L10:
 369 001e 00BF     		.align	2
 370              	.L9:
 371 0020 00000000 		.word	CapSense_CSD_initVar
 372              		.cfi_endproc
 373              	.LFE2:
 374              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 375              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 376              		.align	2
 377              		.global	CapSense_CSD_Stop
 378              		.thumb
 379              		.thumb_func
 380              		.type	CapSense_CSD_Stop, %function
 381              	CapSense_CSD_Stop:
 382              	.LFB3:
 493:Generated_Source\PSoC5/CapSense_CSD.c **** 
 494:Generated_Source\PSoC5/CapSense_CSD.c **** 
 495:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 496:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 497:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 498:Generated_Source\PSoC5/CapSense_CSD.c **** *
 499:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 500:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 501:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 502:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 503:Generated_Source\PSoC5/CapSense_CSD.c **** *
 504:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 505:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 506:Generated_Source\PSoC5/CapSense_CSD.c **** *
 507:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 508:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 509:Generated_Source\PSoC5/CapSense_CSD.c **** *
 510:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 511:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 512:Generated_Source\PSoC5/CapSense_CSD.c **** *
 513:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 514:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 515:Generated_Source\PSoC5/CapSense_CSD.c **** {
 383              		.loc 1 515 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 516:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 517:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 393              		.loc 1 517 0
 394 0004 1E4A     		ldr	r2, .L12
 395 0006 1E4B     		ldr	r3, .L12
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 17


 396 0008 1B78     		ldrb	r3, [r3]
 397 000a DBB2     		uxtb	r3, r3
 398 000c 23F00203 		bic	r3, r3, #2
 399 0010 DBB2     		uxtb	r3, r3
 400 0012 1370     		strb	r3, [r2]
 518:Generated_Source\PSoC5/CapSense_CSD.c ****     
 519:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 520:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 401              		.loc 1 520 0
 402 0014 1B4B     		ldr	r3, .L12+4
 403 0016 0122     		movs	r2, #1
 404 0018 1A60     		str	r2, [r3]
 521:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 522:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 523:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 524:Generated_Source\PSoC5/CapSense_CSD.c ****     
 525:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 526:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 405              		.loc 1 526 0
 406 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 527:Generated_Source\PSoC5/CapSense_CSD.c ****     
 528:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 529:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 530:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 531:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 532:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 533:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 534:Generated_Source\PSoC5/CapSense_CSD.c ****         
 535:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 536:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 537:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 407              		.loc 1 540 0
 408 001e 1A4A     		ldr	r2, .L12+8
 409 0020 194B     		ldr	r3, .L12+8
 410 0022 1B78     		ldrb	r3, [r3]
 411 0024 DBB2     		uxtb	r3, r3
 412 0026 23F02003 		bic	r3, r3, #32
 413 002a DBB2     		uxtb	r3, r3
 414 002c 1370     		strb	r3, [r2]
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 545:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 546:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 547:Generated_Source\PSoC5/CapSense_CSD.c **** 
 548:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 549:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 550:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 551:Generated_Source\PSoC5/CapSense_CSD.c **** 
 552:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 553:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 18


 556:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     
 558:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 560:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 561:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 562:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 563:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     
 565:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 566:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 567:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****            
 569:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 570:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         
 573:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 574:Generated_Source\PSoC5/CapSense_CSD.c ****     
 575:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 576:Generated_Source\PSoC5/CapSense_CSD.c ****     
 577:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 578:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 579:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 415              		.loc 1 579 0
 416 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 580:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 581:Generated_Source\PSoC5/CapSense_CSD.c ****     
 582:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 583:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 417              		.loc 1 583 0
 418 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 584:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 585:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 419              		.loc 1 585 0
 420 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 587:Generated_Source\PSoC5/CapSense_CSD.c ****     
 588:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 589:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 590:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 591:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 592:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 593:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 594:Generated_Source\PSoC5/CapSense_CSD.c ****     
 595:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 597:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 598:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 599:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 600:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 601:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 602:Generated_Source\PSoC5/CapSense_CSD.c **** 
 603:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 604:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 606:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 19


 607:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 421              		.loc 1 607 0
 422 003a 144A     		ldr	r2, .L12+12
 423 003c 134B     		ldr	r3, .L12+12
 424 003e 1B78     		ldrb	r3, [r3]
 425 0040 DBB2     		uxtb	r3, r3
 426 0042 23F00103 		bic	r3, r3, #1
 427 0046 DBB2     		uxtb	r3, r3
 428 0048 1370     		strb	r3, [r2]
 608:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 429              		.loc 1 608 0
 430 004a 114A     		ldr	r2, .L12+16
 431 004c 104B     		ldr	r3, .L12+16
 432 004e 1B78     		ldrb	r3, [r3]
 433 0050 DBB2     		uxtb	r3, r3
 434 0052 23F01003 		bic	r3, r3, #16
 435 0056 DBB2     		uxtb	r3, r3
 436 0058 1370     		strb	r3, [r2]
 609:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 437              		.loc 1 609 0
 438 005a 0E4A     		ldr	r2, .L12+20
 439 005c 0D4B     		ldr	r3, .L12+20
 440 005e 1B78     		ldrb	r3, [r3]
 441 0060 DBB2     		uxtb	r3, r3
 442 0062 23F01003 		bic	r3, r3, #16
 443 0066 DBB2     		uxtb	r3, r3
 444 0068 1370     		strb	r3, [r2]
 610:Generated_Source\PSoC5/CapSense_CSD.c ****         
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 612:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 615:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 616:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     
 618:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 619:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 445              		.loc 1 619 0
 446 006a 054A     		ldr	r2, .L12
 447 006c 044B     		ldr	r3, .L12
 448 006e 1B78     		ldrb	r3, [r3]
 449 0070 DBB2     		uxtb	r3, r3
 450 0072 03F07F03 		and	r3, r3, #127
 451 0076 DBB2     		uxtb	r3, r3
 452 0078 1370     		strb	r3, [r2]
 620:Generated_Source\PSoC5/CapSense_CSD.c **** }
 453              		.loc 1 620 0
 454 007a 00BF     		nop
 455 007c 80BD     		pop	{r7, pc}
 456              	.L13:
 457 007e 00BF     		.align	2
 458              	.L12:
 459 0080 78640040 		.word	1073767544
 460 0084 80E100E0 		.word	-536813184
 461 0088 9B640040 		.word	1073767579
 462 008c 70580040 		.word	1073764464
 463 0090 AB430040 		.word	1073759147
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 20


 464 0094 BB430040 		.word	1073759163
 465              		.cfi_endproc
 466              	.LFE3:
 467              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 468              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 469              		.align	2
 470              		.global	CapSense_CSD_FindNextSensor
 471              		.thumb
 472              		.thumb_func
 473              		.type	CapSense_CSD_FindNextSensor, %function
 474              	CapSense_CSD_FindNextSensor:
 475              	.LFB4:
 621:Generated_Source\PSoC5/CapSense_CSD.c **** 
 622:Generated_Source\PSoC5/CapSense_CSD.c **** 
 623:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 624:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 625:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 626:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 627:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 628:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 629:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 630:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 631:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 632:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 633:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 634:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 635:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 636:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 637:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 642:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 643:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 644:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 645:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 476              		.loc 1 653 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 16
 479              		@ frame_needed = 1, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481 0000 80B4     		push	{r7}
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 85B0     		sub	sp, sp, #20
 485              		.cfi_def_cfa_offset 24
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 21


 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 490              	.L17:
 654:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 655:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 656:Generated_Source\PSoC5/CapSense_CSD.c ****         
 657:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 658:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 659:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 660:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 661:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 491              		.loc 1 661 0
 492 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 493 000c 0133     		adds	r3, r3, #1
 494 000e FB71     		strb	r3, [r7, #7]
 662:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 495              		.loc 1 662 0
 496 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 497 0012 012B     		cmp	r3, #1
 498 0014 12D0     		beq	.L19
 663:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 664:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 665:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 666:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 499              		.loc 1 666 0
 500 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501 0018 DB08     		lsrs	r3, r3, #3
 502 001a FB73     		strb	r3, [r7, #15]
 667:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 503              		.loc 1 667 0
 504 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 505 001e 03F00703 		and	r3, r3, #7
 506 0022 0122     		movs	r2, #1
 507 0024 02FA03F3 		lsl	r3, r2, r3
 508 0028 BB73     		strb	r3, [r7, #14]
 668:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 669:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 509              		.loc 1 669 0
 510 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 511 002c 074A     		ldr	r2, .L20
 512 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 513 0030 BB7B     		ldrb	r3, [r7, #14]
 514 0032 1340     		ands	r3, r3, r2
 515 0034 DBB2     		uxtb	r3, r3
 516 0036 002B     		cmp	r3, #0
 517 0038 E7D0     		beq	.L17
 518 003a 00E0     		b	.L16
 519              	.L19:
 664:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 520              		.loc 1 664 0
 521 003c 00BF     		nop
 522              	.L16:
 670:Generated_Source\PSoC5/CapSense_CSD.c ****         
 671:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 523              		.loc 1 671 0
 524 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 672:Generated_Source\PSoC5/CapSense_CSD.c ****     }
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 22


 525              		.loc 1 672 0
 526 0040 1846     		mov	r0, r3
 527 0042 1437     		adds	r7, r7, #20
 528              		.cfi_def_cfa_offset 4
 529 0044 BD46     		mov	sp, r7
 530              		.cfi_def_cfa_register 13
 531              		@ sp needed
 532 0046 80BC     		pop	{r7}
 533              		.cfi_restore 7
 534              		.cfi_def_cfa_offset 0
 535 0048 7047     		bx	lr
 536              	.L21:
 537 004a 00BF     		.align	2
 538              	.L20:
 539 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 540              		.cfi_endproc
 541              	.LFE4:
 542              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 543              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 544              		.align	2
 545              		.global	CapSense_CSD_SetScanSlotSettings
 546              		.thumb
 547              		.thumb_func
 548              		.type	CapSense_CSD_SetScanSlotSettings, %function
 549              	CapSense_CSD_SetScanSlotSettings:
 550              	.LFB5:
 673:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 674:Generated_Source\PSoC5/CapSense_CSD.c ****  
 675:Generated_Source\PSoC5/CapSense_CSD.c ****  
 676:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 677:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 678:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 679:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 680:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 681:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 682:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 683:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 684:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 685:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 686:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 687:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 688:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 689:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 690:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 691:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 692:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 693:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 695:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 696:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 697:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 698:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 23


 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 707:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 708:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 709:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 710:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 711:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 712:Generated_Source\PSoC5/CapSense_CSD.c ****         
 713:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 714:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 715:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 716:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 717:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 718:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 719:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 720:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 721:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 722:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 723:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 724:Generated_Source\PSoC5/CapSense_CSD.c ****             
 725:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 726:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 727:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 728:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 729:Generated_Source\PSoC5/CapSense_CSD.c ****         
 730:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 731:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 733:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 734:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 735:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 736:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 737:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 738:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 739:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 741:Generated_Source\PSoC5/CapSense_CSD.c ****             
 742:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 743:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 744:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 745:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 746:Generated_Source\PSoC5/CapSense_CSD.c ****         
 747:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 748:Generated_Source\PSoC5/CapSense_CSD.c ****         
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 752:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 753:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 754:Generated_Source\PSoC5/CapSense_CSD.c ****             
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 756:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 757:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 758:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 759:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 760:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 24


 761:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 762:Generated_Source\PSoC5/CapSense_CSD.c ****            
 763:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 765:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 766:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 767:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 768:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 770:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 771:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 772:Generated_Source\PSoC5/CapSense_CSD.c ****             
 773:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 774:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 777:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 778:Generated_Source\PSoC5/CapSense_CSD.c ****         
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 780:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 781:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 782:Generated_Source\PSoC5/CapSense_CSD.c **** 
 783:Generated_Source\PSoC5/CapSense_CSD.c **** 
 784:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 785:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 786:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 787:Generated_Source\PSoC5/CapSense_CSD.c **** *
 788:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 789:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 790:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 791:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 792:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 793:Generated_Source\PSoC5/CapSense_CSD.c **** *
 794:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 795:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 796:Generated_Source\PSoC5/CapSense_CSD.c **** *
 797:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 798:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 799:Generated_Source\PSoC5/CapSense_CSD.c **** *
 800:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 801:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 802:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 803:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 804:Generated_Source\PSoC5/CapSense_CSD.c **** *
 805:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 807:Generated_Source\PSoC5/CapSense_CSD.c **** {
 551              		.loc 1 807 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 16
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 84B0     		sub	sp, sp, #16
 560              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 25


 561 0004 00AF     		add	r7, sp, #0
 562              		.cfi_def_cfa_register 7
 563 0006 0346     		mov	r3, r0
 564 0008 FB71     		strb	r3, [r7, #7]
 808:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 809:Generated_Source\PSoC5/CapSense_CSD.c ****     
 810:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 811:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 812:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 565              		.loc 1 812 0
 566 000a 0023     		movs	r3, #0
 567 000c FB73     		strb	r3, [r7, #15]
 813:Generated_Source\PSoC5/CapSense_CSD.c ****         
 814:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 815:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 816:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 568              		.loc 1 816 0
 569 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 570 0010 094A     		ldr	r2, .L23
 571 0012 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 572 0014 1846     		mov	r0, r3
 573 0016 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 817:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 818:Generated_Source\PSoC5/CapSense_CSD.c ****         
 819:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 820:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 821:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 822:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 823:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 824:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 574              		.loc 1 824 0
 575 001a 084A     		ldr	r2, .L23+4
 576 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 577 001e 0849     		ldr	r1, .L23+8
 578 0020 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 579 0022 1370     		strb	r3, [r2]
 825:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 826:Generated_Source\PSoC5/CapSense_CSD.c **** 
 827:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 828:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 829:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 580              		.loc 1 829 0
 581 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 582 0026 074A     		ldr	r2, .L23+12
 583 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 584 002a 1846     		mov	r0, r3
 585 002c FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 830:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 831:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 832:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 833:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 834:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 835:Generated_Source\PSoC5/CapSense_CSD.c **** 
 836:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 838:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 839:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 26


 840:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 841:Generated_Source\PSoC5/CapSense_CSD.c ****             
 842:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 844:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 845:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             
 847:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 848:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 849:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 850:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 852:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 854:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 855:Generated_Source\PSoC5/CapSense_CSD.c ****         
 856:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 857:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 858:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         
 860:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 861:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 862:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 863:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 864:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             
 866:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 867:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 868:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 869:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 871:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 872:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 873:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 874:Generated_Source\PSoC5/CapSense_CSD.c **** 
 875:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 876:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 877:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 879:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 880:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 881:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 882:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 883:Generated_Source\PSoC5/CapSense_CSD.c **** 
 884:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 885:Generated_Source\PSoC5/CapSense_CSD.c **** }
 586              		.loc 1 885 0
 587 0030 00BF     		nop
 588 0032 1037     		adds	r7, r7, #16
 589              		.cfi_def_cfa_offset 8
 590 0034 BD46     		mov	sp, r7
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 0036 80BD     		pop	{r7, pc}
 594              	.L24:
 595              		.align	2
 596              	.L23:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 27


 597 0038 00000000 		.word	CapSense_CSD_idacSettings
 598 003c 5A640040 		.word	1073767514
 599 0040 00000000 		.word	CapSense_CSD_widgetResolution
 600 0044 00000000 		.word	CapSense_CSD_analogSwitchDivider
 601              		.cfi_endproc
 602              	.LFE5:
 603              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 604              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 605              		.align	2
 606              		.global	CapSense_CSD_ScanSensor
 607              		.thumb
 608              		.thumb_func
 609              		.type	CapSense_CSD_ScanSensor, %function
 610              	CapSense_CSD_ScanSensor:
 611              	.LFB6:
 886:Generated_Source\PSoC5/CapSense_CSD.c **** 
 887:Generated_Source\PSoC5/CapSense_CSD.c **** 
 888:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 889:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 890:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 891:Generated_Source\PSoC5/CapSense_CSD.c **** *
 892:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 893:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 894:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 895:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 896:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 897:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 898:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 899:Generated_Source\PSoC5/CapSense_CSD.c **** *
 900:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 901:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 902:Generated_Source\PSoC5/CapSense_CSD.c **** *
 903:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 904:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 905:Generated_Source\PSoC5/CapSense_CSD.c **** *
 906:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 907:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 908:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 909:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 911:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 912:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 918:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 919:Generated_Source\PSoC5/CapSense_CSD.c **** {
 612              		.loc 1 919 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 28


 620 0002 82B0     		sub	sp, sp, #8
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 624 0006 0346     		mov	r3, r0
 625 0008 FB71     		strb	r3, [r7, #7]
 920:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 921:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 626              		.loc 1 921 0
 627 000a 084B     		ldr	r3, .L26
 628 000c 0022     		movs	r2, #0
 629 000e 1A70     		strb	r2, [r3]
 922:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 630              		.loc 1 922 0
 631 0010 074A     		ldr	r2, .L26+4
 632 0012 FB79     		ldrb	r3, [r7, #7]
 633 0014 1370     		strb	r3, [r2]
 923:Generated_Source\PSoC5/CapSense_CSD.c ****     
 924:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 925:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 926:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 634              		.loc 1 926 0
 635 0016 054B     		ldr	r3, .L26
 636 0018 8122     		movs	r2, #129
 637 001a 1A70     		strb	r2, [r3]
 927:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 638              		.loc 1 927 0
 639 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 640 001e 1846     		mov	r0, r3
 641 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 928:Generated_Source\PSoC5/CapSense_CSD.c ****         
 929:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 930:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 931:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 932:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 933:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 934:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 935:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 936:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 937:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 938:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 939:Generated_Source\PSoC5/CapSense_CSD.c ****         
 940:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 941:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 942:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 943:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 944:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 945:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 946:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 947:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 951:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 952:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 29


 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 956:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         
 959:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 960:Generated_Source\PSoC5/CapSense_CSD.c **** }
 642              		.loc 1 960 0
 643 0024 00BF     		nop
 644 0026 0837     		adds	r7, r7, #8
 645              		.cfi_def_cfa_offset 8
 646 0028 BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 002a 80BD     		pop	{r7, pc}
 650              	.L27:
 651              		.align	2
 652              	.L26:
 653 002c 00000000 		.word	CapSense_CSD_csv
 654 0030 00000000 		.word	CapSense_CSD_sensorIndex
 655              		.cfi_endproc
 656              	.LFE6:
 657              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 658              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 659              		.align	2
 660              		.global	CapSense_CSD_ScanEnabledWidgets
 661              		.thumb
 662              		.thumb_func
 663              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 664              	CapSense_CSD_ScanEnabledWidgets:
 665              	.LFB7:
 961:Generated_Source\PSoC5/CapSense_CSD.c **** 
 962:Generated_Source\PSoC5/CapSense_CSD.c **** 
 963:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 964:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 965:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 966:Generated_Source\PSoC5/CapSense_CSD.c **** *
 967:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 968:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 969:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 970:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 971:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 972:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 973:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 974:Generated_Source\PSoC5/CapSense_CSD.c **** *
 975:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 976:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 977:Generated_Source\PSoC5/CapSense_CSD.c **** *
 978:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 979:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 980:Generated_Source\PSoC5/CapSense_CSD.c **** *
 981:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 982:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 983:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 984:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 985:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
 986:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 987:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 30


 988:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
 989:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *
 991:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 993:Generated_Source\PSoC5/CapSense_CSD.c **** *
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
 996:Generated_Source\PSoC5/CapSense_CSD.c **** {
 666              		.loc 1 996 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 998:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 676              		.loc 1 998 0
 677 0004 124B     		ldr	r3, .L31
 678 0006 0022     		movs	r2, #0
 679 0008 1A70     		strb	r2, [r3]
 999:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 680              		.loc 1 999 0
 681 000a 124B     		ldr	r3, .L31+4
 682 000c FF22     		movs	r2, #255
 683 000e 1A70     		strb	r2, [r3]
1000:Generated_Source\PSoC5/CapSense_CSD.c ****     
1001:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1002:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1003:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 684              		.loc 1 1003 0
 685 0010 104B     		ldr	r3, .L31+4
 686 0012 1B78     		ldrb	r3, [r3]
 687 0014 DBB2     		uxtb	r3, r3
 688 0016 1846     		mov	r0, r3
 689 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 690 001c 0346     		mov	r3, r0
 691 001e 1A46     		mov	r2, r3
 692 0020 0C4B     		ldr	r3, .L31+4
 693 0022 1A70     		strb	r2, [r3]
1004:Generated_Source\PSoC5/CapSense_CSD.c **** 
1005:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1006:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 694              		.loc 1 1006 0
 695 0024 0B4B     		ldr	r3, .L31+4
 696 0026 1B78     		ldrb	r3, [r3]
 697 0028 DBB2     		uxtb	r3, r3
 698 002a 002B     		cmp	r3, #0
 699 002c 0DD1     		bne	.L30
1007:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1008:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 700              		.loc 1 1008 0
 701 002e 084B     		ldr	r3, .L31
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 31


 702 0030 1B78     		ldrb	r3, [r3]
 703 0032 DBB2     		uxtb	r3, r3
 704 0034 43F00103 		orr	r3, r3, #1
 705 0038 DAB2     		uxtb	r2, r3
 706 003a 054B     		ldr	r3, .L31
 707 003c 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 708              		.loc 1 1009 0
 709 003e 054B     		ldr	r3, .L31+4
 710 0040 1B78     		ldrb	r3, [r3]
 711 0042 DBB2     		uxtb	r3, r3
 712 0044 1846     		mov	r0, r3
 713 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 714              	.L30:
1010:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1011:Generated_Source\PSoC5/CapSense_CSD.c ****         
1012:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1013:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1014:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1015:Generated_Source\PSoC5/CapSense_CSD.c ****         
1016:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1017:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1018:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1019:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1020:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1021:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1022:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1023:Generated_Source\PSoC5/CapSense_CSD.c ****         
1024:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1025:Generated_Source\PSoC5/CapSense_CSD.c **** }
 715              		.loc 1 1025 0
 716 004a 00BF     		nop
 717 004c 80BD     		pop	{r7, pc}
 718              	.L32:
 719 004e 00BF     		.align	2
 720              	.L31:
 721 0050 00000000 		.word	CapSense_CSD_csv
 722 0054 00000000 		.word	CapSense_CSD_sensorIndex
 723              		.cfi_endproc
 724              	.LFE7:
 725              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 726              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 727              		.align	2
 728              		.global	CapSense_CSD_IsBusy
 729              		.thumb
 730              		.thumb_func
 731              		.type	CapSense_CSD_IsBusy, %function
 732              	CapSense_CSD_IsBusy:
 733              	.LFB8:
1026:Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:Generated_Source\PSoC5/CapSense_CSD.c **** 
1028:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1029:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1030:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1031:Generated_Source\PSoC5/CapSense_CSD.c **** *
1032:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1033:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 32


1034:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1035:Generated_Source\PSoC5/CapSense_CSD.c **** *
1036:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1037:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1038:Generated_Source\PSoC5/CapSense_CSD.c **** *
1039:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1040:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1041:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1042:Generated_Source\PSoC5/CapSense_CSD.c **** *
1043:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1044:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1045:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1046:Generated_Source\PSoC5/CapSense_CSD.c **** *
1047:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1048:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1049:Generated_Source\PSoC5/CapSense_CSD.c **** {
 734              		.loc 1 1049 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 0002 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
1050:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 744              		.loc 1 1050 0
 745 0004 044B     		ldr	r3, .L35
 746 0006 1B78     		ldrb	r3, [r3]
 747 0008 DBB2     		uxtb	r3, r3
 748 000a 03F00103 		and	r3, r3, #1
 749 000e DBB2     		uxtb	r3, r3
1051:Generated_Source\PSoC5/CapSense_CSD.c **** }
 750              		.loc 1 1051 0
 751 0010 1846     		mov	r0, r3
 752 0012 BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 0014 80BC     		pop	{r7}
 756              		.cfi_restore 7
 757              		.cfi_def_cfa_offset 0
 758 0016 7047     		bx	lr
 759              	.L36:
 760              		.align	2
 761              	.L35:
 762 0018 00000000 		.word	CapSense_CSD_csv
 763              		.cfi_endproc
 764              	.LFE8:
 765              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 766              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 767              		.align	2
 768              		.global	CapSense_CSD_ReadSensorRaw
 769              		.thumb
 770              		.thumb_func
 771              		.type	CapSense_CSD_ReadSensorRaw, %function
 772              	CapSense_CSD_ReadSensorRaw:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 33


 773              	.LFB9:
1052:Generated_Source\PSoC5/CapSense_CSD.c **** 
1053:Generated_Source\PSoC5/CapSense_CSD.c **** 
1054:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1055:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1056:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1060:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1061:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *
1063:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1065:Generated_Source\PSoC5/CapSense_CSD.c **** *
1066:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1068:Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1070:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1071:Generated_Source\PSoC5/CapSense_CSD.c **** *
1072:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1073:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1074:Generated_Source\PSoC5/CapSense_CSD.c **** {
 774              		.loc 1 1074 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 8
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779 0000 80B4     		push	{r7}
 780              		.cfi_def_cfa_offset 4
 781              		.cfi_offset 7, -4
 782 0002 83B0     		sub	sp, sp, #12
 783              		.cfi_def_cfa_offset 16
 784 0004 00AF     		add	r7, sp, #0
 785              		.cfi_def_cfa_register 7
 786 0006 0346     		mov	r3, r0
 787 0008 FB71     		strb	r3, [r7, #7]
1075:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 788              		.loc 1 1075 0
 789 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 790 000c 034A     		ldr	r2, .L39
 791 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1076:Generated_Source\PSoC5/CapSense_CSD.c **** }
 792              		.loc 1 1076 0
 793 0012 1846     		mov	r0, r3
 794 0014 0C37     		adds	r7, r7, #12
 795              		.cfi_def_cfa_offset 4
 796 0016 BD46     		mov	sp, r7
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 0018 80BC     		pop	{r7}
 800              		.cfi_restore 7
 801              		.cfi_def_cfa_offset 0
 802 001a 7047     		bx	lr
 803              	.L40:
 804              		.align	2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 34


 805              	.L39:
 806 001c 00000000 		.word	CapSense_CSD_sensorRaw
 807              		.cfi_endproc
 808              	.LFE9:
 809              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 810              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 811              		.align	2
 812              		.global	CapSense_CSD_ClearSensors
 813              		.thumb
 814              		.thumb_func
 815              		.type	CapSense_CSD_ClearSensors, %function
 816              	CapSense_CSD_ClearSensors:
 817              	.LFB10:
1077:Generated_Source\PSoC5/CapSense_CSD.c **** 
1078:Generated_Source\PSoC5/CapSense_CSD.c **** 
1079:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1080:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1081:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *
1083:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1085:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1086:Generated_Source\PSoC5/CapSense_CSD.c **** *
1087:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1088:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1089:Generated_Source\PSoC5/CapSense_CSD.c **** *
1090:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1091:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1092:Generated_Source\PSoC5/CapSense_CSD.c **** *
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1094:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1095:Generated_Source\PSoC5/CapSense_CSD.c **** {
 818              		.loc 1 1095 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 82B0     		sub	sp, sp, #8
 827              		.cfi_def_cfa_offset 16
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
1096:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1097:Generated_Source\PSoC5/CapSense_CSD.c ****    
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 830              		.loc 1 1098 0
 831 0006 0023     		movs	r3, #0
 832 0008 FB71     		strb	r3, [r7, #7]
 833 000a 06E0     		b	.L42
 834              	.L43:
1099:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1100:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 835              		.loc 1 1100 0 discriminator 3
 836 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 837 000e 1846     		mov	r0, r3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 35


 838 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 839              		.loc 1 1098 0 discriminator 3
 840 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 841 0016 0133     		adds	r3, r3, #1
 842 0018 FB71     		strb	r3, [r7, #7]
 843              	.L42:
1098:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 844              		.loc 1 1098 0 is_stmt 0 discriminator 1
 845 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 846 001c 002B     		cmp	r3, #0
 847 001e F5D0     		beq	.L43
1101:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1102:Generated_Source\PSoC5/CapSense_CSD.c **** }
 848              		.loc 1 1102 0 is_stmt 1
 849 0020 00BF     		nop
 850 0022 0837     		adds	r7, r7, #8
 851              		.cfi_def_cfa_offset 8
 852 0024 BD46     		mov	sp, r7
 853              		.cfi_def_cfa_register 13
 854              		@ sp needed
 855 0026 80BD     		pop	{r7, pc}
 856              		.cfi_endproc
 857              	.LFE10:
 858              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 859              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 860              		.align	2
 861              		.global	CapSense_CSD_EnableSensor
 862              		.thumb
 863              		.thumb_func
 864              		.type	CapSense_CSD_EnableSensor, %function
 865              	CapSense_CSD_EnableSensor:
 866              	.LFB11:
1103:Generated_Source\PSoC5/CapSense_CSD.c **** 
1104:Generated_Source\PSoC5/CapSense_CSD.c **** 
1105:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1106:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1107:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1108:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1109:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1110:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1111:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1112:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1113:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1114:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1115:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1116:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1117:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1119:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1122:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1124:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1125:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1126:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 36


1127:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1134:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1135:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1136:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1137:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1138:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1139:Generated_Source\PSoC5/CapSense_CSD.c ****         
1140:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1141:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1142:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1143:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1144:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1145:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1146:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1147:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1148:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1149:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1150:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1151:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1152:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1153:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1154:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1155:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1156:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1158:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1159:Generated_Source\PSoC5/CapSense_CSD.c ****     
1160:Generated_Source\PSoC5/CapSense_CSD.c ****     
1161:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1162:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1163:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1164:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1165:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1166:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1167:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1168:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1169:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1170:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1171:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1172:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1173:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1174:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1175:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1176:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1177:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1178:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1179:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 37


1184:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1188:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1189:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1190:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1191:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1192:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1193:Generated_Source\PSoC5/CapSense_CSD.c ****         
1194:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1195:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1196:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1197:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1198:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1199:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1200:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1201:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1202:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1203:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1204:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1205:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1206:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1207:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1208:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1209:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1210:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1212:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1213:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1214:Generated_Source\PSoC5/CapSense_CSD.c **** 
1215:Generated_Source\PSoC5/CapSense_CSD.c **** 
1216:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1217:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1218:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1219:Generated_Source\PSoC5/CapSense_CSD.c **** *
1220:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1221:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1222:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1223:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1224:Generated_Source\PSoC5/CapSense_CSD.c **** *
1225:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1226:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1227:Generated_Source\PSoC5/CapSense_CSD.c **** *
1228:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1229:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1230:Generated_Source\PSoC5/CapSense_CSD.c **** *
1231:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1232:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1233:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1234:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1235:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1236:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1237:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1238:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1239:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1240:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 38


1241:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1242:Generated_Source\PSoC5/CapSense_CSD.c **** *
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1244:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1245:Generated_Source\PSoC5/CapSense_CSD.c **** {
 867              		.loc 1 1245 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 16
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871 0000 80B5     		push	{r7, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 84B0     		sub	sp, sp, #16
 876              		.cfi_def_cfa_offset 24
 877 0004 00AF     		add	r7, sp, #0
 878              		.cfi_def_cfa_register 7
 879 0006 0346     		mov	r3, r0
 880 0008 FB71     		strb	r3, [r7, #7]
1246:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 881              		.loc 1 1246 0
 882 000a 0023     		movs	r3, #0
 883 000c FB73     		strb	r3, [r7, #15]
1247:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 884              		.loc 1 1247 0
 885 000e 2023     		movs	r3, #32
 886 0010 BB73     		strb	r3, [r7, #14]
1248:Generated_Source\PSoC5/CapSense_CSD.c ****     
1249:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1250:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1251:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1252:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1253:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1254:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1255:Generated_Source\PSoC5/CapSense_CSD.c ****     
1256:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1257:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 887              		.loc 1 1257 0
 888 0012 0E4B     		ldr	r3, .L46
 889 0014 0922     		movs	r2, #9
 890 0016 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/CapSense_CSD.c ****     
1259:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1260:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 891              		.loc 1 1260 0
 892 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 893 001a 0F2B     		cmp	r3, #15
 894 001c 01D1     		bne	.L45
1261:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1262:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 895              		.loc 1 1262 0
 896 001e 0723     		movs	r3, #7
 897 0020 FB73     		strb	r3, [r7, #15]
 898              	.L45:
1263:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1264:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 899              		.loc 1 1264 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 39


 900 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 901 0024 0A4A     		ldr	r2, .L46+4
 902 0026 52F82330 		ldr	r3, [r2, r3, lsl #2]
 903 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 904 002c 0849     		ldr	r1, .L46+4
 905 002e 51F82220 		ldr	r2, [r1, r2, lsl #2]
 906 0032 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 907 0034 BA7B     		ldrb	r2, [r7, #14]
 908 0036 0A43     		orrs	r2, r2, r1
 909 0038 D2B2     		uxtb	r2, r2
 910 003a 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/CapSense_CSD.c ****     
1266:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1267:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1268:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1269:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1270:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1271:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 911              		.loc 1 1271 0
 912 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 913 003e 1846     		mov	r0, r3
 914 0040 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1272:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1273:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1274:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1275:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1277:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1278:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1279:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1280:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1281:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1282:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1283:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1284:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1285:Generated_Source\PSoC5/CapSense_CSD.c ****             
1286:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1287:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1288:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1289:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1290:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1292:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1293:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1294:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1295:Generated_Source\PSoC5/CapSense_CSD.c ****             
1296:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1297:Generated_Source\PSoC5/CapSense_CSD.c ****         
1298:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1299:Generated_Source\PSoC5/CapSense_CSD.c **** }
 915              		.loc 1 1299 0
 916 0044 00BF     		nop
 917 0046 1037     		adds	r7, r7, #16
 918              		.cfi_def_cfa_offset 8
 919 0048 BD46     		mov	sp, r7
 920              		.cfi_def_cfa_register 13
 921              		@ sp needed
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 40


 922 004a 80BD     		pop	{r7, pc}
 923              	.L47:
 924              		.align	2
 925              	.L46:
 926 004c 05500040 		.word	1073762309
 927 0050 00000000 		.word	CapSense_CSD_csTable
 928              		.cfi_endproc
 929              	.LFE11:
 930              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 931              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 932              		.align	2
 933              		.global	CapSense_CSD_DisableSensor
 934              		.thumb
 935              		.thumb_func
 936              		.type	CapSense_CSD_DisableSensor, %function
 937              	CapSense_CSD_DisableSensor:
 938              	.LFB12:
1300:Generated_Source\PSoC5/CapSense_CSD.c **** 
1301:Generated_Source\PSoC5/CapSense_CSD.c **** 
1302:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1303:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1304:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1305:Generated_Source\PSoC5/CapSense_CSD.c **** *
1306:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1307:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1308:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1309:Generated_Source\PSoC5/CapSense_CSD.c **** *
1310:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1311:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1312:Generated_Source\PSoC5/CapSense_CSD.c **** *
1313:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1314:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1315:Generated_Source\PSoC5/CapSense_CSD.c **** *
1316:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1317:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1318:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1319:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1320:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1321:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1322:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1323:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1324:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1325:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1326:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1329:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1330:Generated_Source\PSoC5/CapSense_CSD.c **** {
 939              		.loc 1 1330 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 16
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 41


 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 0346     		mov	r3, r0
 952 0008 FB71     		strb	r3, [r7, #7]
1331:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 953              		.loc 1 1331 0
 954 000a 0023     		movs	r3, #0
 955 000c FB73     		strb	r3, [r7, #15]
1332:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 956              		.loc 1 1332 0
 957 000e 2023     		movs	r3, #32
 958 0010 BB73     		strb	r3, [r7, #14]
1333:Generated_Source\PSoC5/CapSense_CSD.c ****     
1334:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1335:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1336:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1337:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1338:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1339:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1340:Generated_Source\PSoC5/CapSense_CSD.c ****     
1341:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1342:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1343:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1344:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1345:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1346:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 959              		.loc 1 1346 0
 960 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 961 0014 1846     		mov	r0, r3
 962 0016 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1347:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1348:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1349:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1350:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1351:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1352:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1353:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1354:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1355:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1356:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1357:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1358:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1359:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             
1361:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1362:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1363:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1364:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1365:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1367:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1368:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1369:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1370:Generated_Source\PSoC5/CapSense_CSD.c ****             
1371:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1372:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 42


1373:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1374:Generated_Source\PSoC5/CapSense_CSD.c ****     
1375:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1376:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 963              		.loc 1 1376 0
 964 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 965 001c 0F2B     		cmp	r3, #15
 966 001e 01D1     		bne	.L49
1377:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1378:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 967              		.loc 1 1378 0
 968 0020 0723     		movs	r3, #7
 969 0022 FB73     		strb	r3, [r7, #15]
 970              	.L49:
1379:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1380:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 971              		.loc 1 1380 0
 972 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 973 0026 0A4A     		ldr	r2, .L50
 974 0028 52F82330 		ldr	r3, [r2, r3, lsl #2]
 975 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 976 002e 0849     		ldr	r1, .L50
 977 0030 51F82220 		ldr	r2, [r1, r2, lsl #2]
 978 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 979 0036 BA7B     		ldrb	r2, [r7, #14]
 980 0038 D243     		mvns	r2, r2
 981 003a D2B2     		uxtb	r2, r2
 982 003c 0A40     		ands	r2, r2, r1
 983 003e D2B2     		uxtb	r2, r2
 984 0040 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC5/CapSense_CSD.c ****     
1382:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1383:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1384:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
1385:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1386:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 985              		.loc 1 1386 0
 986 0042 044B     		ldr	r3, .L50+4
 987 0044 0922     		movs	r2, #9
 988 0046 1A70     		strb	r2, [r3]
1387:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1388:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1389:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1390:Generated_Source\PSoC5/CapSense_CSD.c **** }
 989              		.loc 1 1390 0
 990 0048 00BF     		nop
 991 004a 1037     		adds	r7, r7, #16
 992              		.cfi_def_cfa_offset 8
 993 004c BD46     		mov	sp, r7
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 004e 80BD     		pop	{r7, pc}
 997              	.L51:
 998              		.align	2
 999              	.L50:
 1000 0050 00000000 		.word	CapSense_CSD_csTable
 1001 0054 05500040 		.word	1073762309
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 43


 1002              		.cfi_endproc
 1003              	.LFE12:
 1004              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1005              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1006              		.align	2
 1007              		.global	CapSense_CSD_PreScan
 1008              		.thumb
 1009              		.thumb_func
 1010              		.type	CapSense_CSD_PreScan, %function
 1011              	CapSense_CSD_PreScan:
 1012              	.LFB13:
1391:Generated_Source\PSoC5/CapSense_CSD.c **** 
1392:Generated_Source\PSoC5/CapSense_CSD.c **** 
1393:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1394:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1395:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1396:Generated_Source\PSoC5/CapSense_CSD.c **** *
1397:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1398:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1399:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1400:Generated_Source\PSoC5/CapSense_CSD.c **** *
1401:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1402:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1403:Generated_Source\PSoC5/CapSense_CSD.c **** *
1404:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1405:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1406:Generated_Source\PSoC5/CapSense_CSD.c **** *
1407:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1408:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1409:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1410:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1411:Generated_Source\PSoC5/CapSense_CSD.c **** *
1412:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1413:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1414:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1013              		.loc 1 1414 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 0346     		mov	r3, r0
 1026 0008 FB71     		strb	r3, [r7, #7]
1415:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1416:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1027              		.loc 1 1416 0
 1028 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1029 000c 1846     		mov	r0, r3
 1030 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1417:Generated_Source\PSoC5/CapSense_CSD.c ****     
1418:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 44


1419:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1420:Generated_Source\PSoC5/CapSense_CSD.c **** 
1421:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1422:Generated_Source\PSoC5/CapSense_CSD.c ****     
1423:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1424:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1425:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1426:Generated_Source\PSoC5/CapSense_CSD.c **** 
1427:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1428:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1031              		.loc 1 1428 0
 1032 0012 104A     		ldr	r2, .L53
 1033 0014 0F4B     		ldr	r3, .L53
 1034 0016 1B78     		ldrb	r3, [r3]
 1035 0018 DBB2     		uxtb	r3, r3
 1036 001a 43F00103 		orr	r3, r3, #1
 1037 001e DBB2     		uxtb	r3, r3
 1038 0020 1370     		strb	r3, [r2]
1429:Generated_Source\PSoC5/CapSense_CSD.c ****         
1430:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1431:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1432:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1433:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1434:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1435:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1436:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1039              		.loc 1 1436 0
 1040 0022 0D4A     		ldr	r2, .L53+4
 1041 0024 0C4B     		ldr	r3, .L53+4
 1042 0026 1B78     		ldrb	r3, [r3]
 1043 0028 DBB2     		uxtb	r3, r3
 1044 002a 23F00103 		bic	r3, r3, #1
 1045 002e DBB2     		uxtb	r3, r3
 1046 0030 1370     		strb	r3, [r2]
1437:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1438:Generated_Source\PSoC5/CapSense_CSD.c **** 
1439:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1440:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1047              		.loc 1 1440 0
 1048 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1049 0034 1846     		mov	r0, r3
 1050 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1441:Generated_Source\PSoC5/CapSense_CSD.c ****             
1442:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1443:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1444:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1445:Generated_Source\PSoC5/CapSense_CSD.c ****             
1446:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1447:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1448:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1449:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1450:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1451:Generated_Source\PSoC5/CapSense_CSD.c ****             
1452:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1453:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 45


1456:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1458:Generated_Source\PSoC5/CapSense_CSD.c ****              
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1460:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1461:Generated_Source\PSoC5/CapSense_CSD.c ****         
1462:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1463:Generated_Source\PSoC5/CapSense_CSD.c ****         
1464:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1465:Generated_Source\PSoC5/CapSense_CSD.c **** 
1466:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1467:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1469:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1470:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1471:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1472:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1473:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1474:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1475:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1476:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1477:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1478:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1479:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1480:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1481:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1482:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1483:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1484:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1485:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1486:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1487:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1488:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1489:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1490:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1498:Generated_Source\PSoC5/CapSense_CSD.c ****             
1499:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1500:Generated_Source\PSoC5/CapSense_CSD.c ****             
1501:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1502:Generated_Source\PSoC5/CapSense_CSD.c ****         
1503:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1504:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1505:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1506:Generated_Source\PSoC5/CapSense_CSD.c ****             
1507:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1510:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1511:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1512:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 46


1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1518:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1520:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1521:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1522:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1523:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1524:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1525:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1526:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1527:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1528:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1529:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1537:Generated_Source\PSoC5/CapSense_CSD.c ****             
1538:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1539:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1540:Generated_Source\PSoC5/CapSense_CSD.c ****     
1541:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****     
1543:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1544:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1051              		.loc 1 1544 0
 1052 003a 064A     		ldr	r2, .L53
 1053 003c 054B     		ldr	r3, .L53
 1054 003e 1B78     		ldrb	r3, [r3]
 1055 0040 DBB2     		uxtb	r3, r3
 1056 0042 43F00203 		orr	r3, r3, #2
 1057 0046 DBB2     		uxtb	r3, r3
 1058 0048 1370     		strb	r3, [r2]
1545:Generated_Source\PSoC5/CapSense_CSD.c ****     
1546:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1548:Generated_Source\PSoC5/CapSense_CSD.c **** 
1549:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1550:Generated_Source\PSoC5/CapSense_CSD.c **** 
1551:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1552:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1553:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1554:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1059              		.loc 1 1554 0
 1060 004a 00BF     		nop
 1061 004c 0837     		adds	r7, r7, #8
 1062              		.cfi_def_cfa_offset 8
 1063 004e BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 47


 1066 0050 80BD     		pop	{r7, pc}
 1067              	.L54:
 1068 0052 00BF     		.align	2
 1069              	.L53:
 1070 0054 78640040 		.word	1073767544
 1071 0058 70580040 		.word	1073764464
 1072              		.cfi_endproc
 1073              	.LFE13:
 1074              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1075              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1076              		.align	2
 1077              		.global	CapSense_CSD_PostScan
 1078              		.thumb
 1079              		.thumb_func
 1080              		.type	CapSense_CSD_PostScan, %function
 1081              	CapSense_CSD_PostScan:
 1082              	.LFB14:
1555:Generated_Source\PSoC5/CapSense_CSD.c **** 
1556:Generated_Source\PSoC5/CapSense_CSD.c **** 
1557:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1558:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1559:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1560:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1561:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1562:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1567:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1570:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1572:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1574:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1576:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1577:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1578:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1579:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1083              		.loc 1 1582 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 8
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 80B5     		push	{r7, lr}
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 82B0     		sub	sp, sp, #8
 1092              		.cfi_def_cfa_offset 16
 1093 0004 00AF     		add	r7, sp, #0
 1094              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 48


 1095 0006 0346     		mov	r3, r0
 1096 0008 FB71     		strb	r3, [r7, #7]
1583:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1584:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1097              		.loc 1 1584 0
 1098 000a 1E4A     		ldr	r2, .L56
 1099 000c 1D4B     		ldr	r3, .L56
 1100 000e 1B78     		ldrb	r3, [r3]
 1101 0010 DBB2     		uxtb	r3, r3
 1102 0012 23F00303 		bic	r3, r3, #3
 1103 0016 DBB2     		uxtb	r3, r3
 1104 0018 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/CapSense_CSD.c ****         
1586:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1587:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1588:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1589:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1590:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1591:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1105              		.loc 1 1591 0
 1106 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1107 001c 1A4A     		ldr	r2, .L56+4
 1108 001e 1278     		ldrb	r2, [r2]
 1109 0020 D2B2     		uxtb	r2, r2
 1110 0022 92B2     		uxth	r2, r2
 1111 0024 1202     		lsls	r2, r2, #8
 1112 0026 91B2     		uxth	r1, r2
 1113 0028 184A     		ldr	r2, .L56+8
 1114 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1592:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1115              		.loc 1 1592 0
 1116 002e 184B     		ldr	r3, .L56+12
 1117 0030 1B78     		ldrb	r3, [r3]
 1118 0032 DBB2     		uxtb	r3, r3
 1119 0034 9AB2     		uxth	r2, r3
 1120 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1121 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1122 003a 1448     		ldr	r0, .L56+8
 1123 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1124 0040 0A43     		orrs	r2, r2, r1
 1125 0042 91B2     		uxth	r1, r2
 1126 0044 114A     		ldr	r2, .L56+8
 1127 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1593:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1128              		.loc 1 1593 0
 1129 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1594:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1130              		.loc 1 1594 0
 1131 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1132 004e 0F49     		ldr	r1, .L56+8
 1133 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1593:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1134              		.loc 1 1593 0
 1135 0054 D243     		mvns	r2, r2
 1136 0056 91B2     		uxth	r1, r2
 1137 0058 0C4A     		ldr	r2, .L56+8
 1138 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 49


1595:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1596:Generated_Source\PSoC5/CapSense_CSD.c ****         
1597:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1598:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1139              		.loc 1 1598 0
 1140 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1141 0060 1846     		mov	r0, r3
 1142 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1599:Generated_Source\PSoC5/CapSense_CSD.c ****         
1600:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1601:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1602:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1143              		.loc 1 1602 0
 1144 0066 0020     		movs	r0, #0
 1145 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1603:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1604:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1605:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1606:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1608:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1609:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1610:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1611:Generated_Source\PSoC5/CapSense_CSD.c ****             
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1613:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1615:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1616:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1146              		.loc 1 1616 0
 1147 006c 094A     		ldr	r2, .L56+16
 1148 006e 094B     		ldr	r3, .L56+16
 1149 0070 1B78     		ldrb	r3, [r3]
 1150 0072 DBB2     		uxtb	r3, r3
 1151 0074 43F00103 		orr	r3, r3, #1
 1152 0078 DBB2     		uxtb	r3, r3
 1153 007a 1370     		strb	r3, [r2]
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1154              		.loc 1 1618 0
 1155 007c 00BF     		nop
 1156 007e 0837     		adds	r7, r7, #8
 1157              		.cfi_def_cfa_offset 8
 1158 0080 BD46     		mov	sp, r7
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
 1161 0082 80BD     		pop	{r7, pc}
 1162              	.L57:
 1163              		.align	2
 1164              	.L56:
 1165 0084 78640040 		.word	1073767544
 1166 0088 1B640040 		.word	1073767451
 1167 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1168 0090 0B640040 		.word	1073767435
 1169 0094 70580040 		.word	1073764464
 1170              		.cfi_endproc
 1171              	.LFE14:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 50


 1172              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1173              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1174              		.align	2
 1175              		.global	CapSense_CSD_SetPrescaler
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	CapSense_CSD_SetPrescaler, %function
 1179              	CapSense_CSD_SetPrescaler:
 1180              	.LFB15:
1619:Generated_Source\PSoC5/CapSense_CSD.c ****     
1620:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1621:Generated_Source\PSoC5/CapSense_CSD.c **** 
1622:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1623:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1624:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1625:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1626:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1627:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1628:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1629:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1630:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1631:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1632:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1633:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1634:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1635:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1636:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1637:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1638:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1639:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1642:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1643:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1647:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1648:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1649:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1650:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1651:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1652:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1653:Generated_Source\PSoC5/CapSense_CSD.c ****         
1654:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1655:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1656:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1657:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1658:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1659:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1660:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1661:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1662:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1663:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1664:Generated_Source\PSoC5/CapSense_CSD.c ****         
1665:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1666:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 51


1667:Generated_Source\PSoC5/CapSense_CSD.c ****         
1668:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1669:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1670:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1671:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1672:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1673:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1674:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1676:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1677:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1678:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1679:Generated_Source\PSoC5/CapSense_CSD.c ****         
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1681:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1683:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1684:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1685:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1686:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1687:Generated_Source\PSoC5/CapSense_CSD.c ****     
1688:Generated_Source\PSoC5/CapSense_CSD.c ****     
1689:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1690:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1691:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1692:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1693:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1694:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1695:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1696:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1697:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1698:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1699:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1700:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1701:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1702:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1703:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1704:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1705:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1706:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1707:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1714:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1715:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1716:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1717:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1718:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1719:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1720:Generated_Source\PSoC5/CapSense_CSD.c ****         
1721:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1722:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1723:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 52


1724:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1725:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1726:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1727:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1728:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1729:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1730:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1731:Generated_Source\PSoC5/CapSense_CSD.c ****         
1732:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1733:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1734:Generated_Source\PSoC5/CapSense_CSD.c ****         
1735:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1736:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1737:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1738:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1739:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1740:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1741:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1742:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1743:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1744:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1745:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1746:Generated_Source\PSoC5/CapSense_CSD.c **** 
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1748:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1750:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1751:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1753:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1754:Generated_Source\PSoC5/CapSense_CSD.c ****     
1755:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1756:Generated_Source\PSoC5/CapSense_CSD.c **** 
1757:Generated_Source\PSoC5/CapSense_CSD.c **** 
1758:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1759:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1760:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1761:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1762:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1763:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1764:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1765:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1766:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1767:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1768:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1769:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1770:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1771:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1772:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1773:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1774:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1777:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1778:Generated_Source\PSoC5/CapSense_CSD.c ****         
1779:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1780:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 53


1781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1782:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1783:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1784:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1786:Generated_Source\PSoC5/CapSense_CSD.c ****     
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1789:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1799:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1800:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1801:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1802:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1803:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1804:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1805:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1806:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1819:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1820:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1821:Generated_Source\PSoC5/CapSense_CSD.c ****             
1822:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1823:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1824:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1825:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1826:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1827:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1828:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1829:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1830:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1831:Generated_Source\PSoC5/CapSense_CSD.c ****     
1832:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1833:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1834:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1835:Generated_Source\PSoC5/CapSense_CSD.c **** 
1836:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1837:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 54


1838:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1839:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1840:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1841:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1842:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1843:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1844:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1845:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1846:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1847:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1848:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1849:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1850:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1851:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1852:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1181              		.loc 1 1852 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186 0000 80B4     		push	{r7}
 1187              		.cfi_def_cfa_offset 4
 1188              		.cfi_offset 7, -4
 1189 0002 83B0     		sub	sp, sp, #12
 1190              		.cfi_def_cfa_offset 16
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 0346     		mov	r3, r0
 1194 0008 FB71     		strb	r3, [r7, #7]
1853:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1854:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1855:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1195              		.loc 1 1855 0
 1196 000a 064A     		ldr	r2, .L59
 1197 000c FB79     		ldrb	r3, [r7, #7]
 1198 000e 1370     		strb	r3, [r2]
1856:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1199              		.loc 1 1856 0
 1200 0010 054A     		ldr	r2, .L59+4
 1201 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1202 0014 5B08     		lsrs	r3, r3, #1
 1203 0016 DBB2     		uxtb	r3, r3
 1204 0018 1370     		strb	r3, [r2]
1857:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1858:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1859:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1860:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1861:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1862:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1205              		.loc 1 1863 0
 1206 001a 00BF     		nop
 1207 001c 0C37     		adds	r7, r7, #12
 1208              		.cfi_def_cfa_offset 4
 1209 001e BD46     		mov	sp, r7
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 55


 1212 0020 80BC     		pop	{r7}
 1213              		.cfi_restore 7
 1214              		.cfi_def_cfa_offset 0
 1215 0022 7047     		bx	lr
 1216              	.L60:
 1217              		.align	2
 1218              	.L59:
 1219 0024 29640040 		.word	1073767465
 1220 0028 39640040 		.word	1073767481
 1221              		.cfi_endproc
 1222              	.LFE15:
 1223              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1224              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1225              		.align	2
 1226              		.global	CapSense_CSD_GetPrescaler
 1227              		.thumb
 1228              		.thumb_func
 1229              		.type	CapSense_CSD_GetPrescaler, %function
 1230              	CapSense_CSD_GetPrescaler:
 1231              	.LFB16:
1864:Generated_Source\PSoC5/CapSense_CSD.c **** 
1865:Generated_Source\PSoC5/CapSense_CSD.c **** 
1866:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1867:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1869:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1870:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1875:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1876:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1877:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1878:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1879:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1880:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1881:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1232              		.loc 1 1881 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 8
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237 0000 80B4     		push	{r7}
 1238              		.cfi_def_cfa_offset 4
 1239              		.cfi_offset 7, -4
 1240 0002 83B0     		sub	sp, sp, #12
 1241              		.cfi_def_cfa_offset 16
 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
1882:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1244              		.loc 1 1882 0
 1245 0006 0023     		movs	r3, #0
 1246 0008 FB71     		strb	r3, [r7, #7]
1883:Generated_Source\PSoC5/CapSense_CSD.c **** 
1884:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1885:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 56


1886:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1247              		.loc 1 1886 0
 1248 000a 044B     		ldr	r3, .L63
 1249 000c 1B78     		ldrb	r3, [r3]
 1250 000e FB71     		strb	r3, [r7, #7]
1887:Generated_Source\PSoC5/CapSense_CSD.c ****             
1888:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1889:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1890:Generated_Source\PSoC5/CapSense_CSD.c ****             
1891:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1892:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1893:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1894:Generated_Source\PSoC5/CapSense_CSD.c ****         
1895:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1251              		.loc 1 1895 0
 1252 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1896:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1253              		.loc 1 1896 0
 1254 0012 1846     		mov	r0, r3
 1255 0014 0C37     		adds	r7, r7, #12
 1256              		.cfi_def_cfa_offset 4
 1257 0016 BD46     		mov	sp, r7
 1258              		.cfi_def_cfa_register 13
 1259              		@ sp needed
 1260 0018 80BC     		pop	{r7}
 1261              		.cfi_restore 7
 1262              		.cfi_def_cfa_offset 0
 1263 001a 7047     		bx	lr
 1264              	.L64:
 1265              		.align	2
 1266              	.L63:
 1267 001c 29640040 		.word	1073767465
 1268              		.cfi_endproc
 1269              	.LFE16:
 1270              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1271              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1272              		.align	2
 1273              		.global	CapSense_CSD_SetScanSpeed
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	CapSense_CSD_SetScanSpeed, %function
 1277              	CapSense_CSD_SetScanSpeed:
 1278              	.LFB17:
1897:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1898:Generated_Source\PSoC5/CapSense_CSD.c **** 
1899:Generated_Source\PSoC5/CapSense_CSD.c **** 
1900:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1901:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1902:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1903:Generated_Source\PSoC5/CapSense_CSD.c **** *
1904:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1905:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1906:Generated_Source\PSoC5/CapSense_CSD.c **** *
1907:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1908:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1909:Generated_Source\PSoC5/CapSense_CSD.c **** *
1910:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 57


1911:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1912:Generated_Source\PSoC5/CapSense_CSD.c **** *
1913:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1914:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1915:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1279              		.loc 1 1915 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
 1284 0000 80B4     		push	{r7}
 1285              		.cfi_def_cfa_offset 4
 1286              		.cfi_offset 7, -4
 1287 0002 83B0     		sub	sp, sp, #12
 1288              		.cfi_def_cfa_offset 16
 1289 0004 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 0006 0346     		mov	r3, r0
 1292 0008 FB71     		strb	r3, [r7, #7]
1916:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1293              		.loc 1 1916 0
 1294 000a 044A     		ldr	r2, .L66
 1295 000c FB79     		ldrb	r3, [r7, #7]
 1296 000e 1370     		strb	r3, [r2]
1917:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1297              		.loc 1 1917 0
 1298 0010 00BF     		nop
 1299 0012 0C37     		adds	r7, r7, #12
 1300              		.cfi_def_cfa_offset 4
 1301 0014 BD46     		mov	sp, r7
 1302              		.cfi_def_cfa_register 13
 1303              		@ sp needed
 1304 0016 80BC     		pop	{r7}
 1305              		.cfi_restore 7
 1306              		.cfi_def_cfa_offset 0
 1307 0018 7047     		bx	lr
 1308              	.L67:
 1309 001a 00BF     		.align	2
 1310              	.L66:
 1311 001c 8B640040 		.word	1073767563
 1312              		.cfi_endproc
 1313              	.LFE17:
 1314              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1315              		.text
 1316              	.Letext0:
 1317              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1318              		.section	.debug_info,"",%progbits
 1319              	.Ldebug_info0:
 1320 0000 F8040000 		.4byte	0x4f8
 1321 0004 0400     		.2byte	0x4
 1322 0006 00000000 		.4byte	.Ldebug_abbrev0
 1323 000a 04       		.byte	0x4
 1324 000b 01       		.uleb128 0x1
 1325 000c 10000000 		.4byte	.LASF59
 1326 0010 0C       		.byte	0xc
 1327 0011 1B020000 		.4byte	.LASF60
 1328 0015 E9030000 		.4byte	.LASF61
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 58


 1329 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1330 001d 00000000 		.4byte	0
 1331 0021 00000000 		.4byte	.Ldebug_line0
 1332 0025 02       		.uleb128 0x2
 1333 0026 01       		.byte	0x1
 1334 0027 06       		.byte	0x6
 1335 0028 0B010000 		.4byte	.LASF0
 1336 002c 02       		.uleb128 0x2
 1337 002d 01       		.byte	0x1
 1338 002e 08       		.byte	0x8
 1339 002f 85030000 		.4byte	.LASF1
 1340 0033 02       		.uleb128 0x2
 1341 0034 02       		.byte	0x2
 1342 0035 05       		.byte	0x5
 1343 0036 93030000 		.4byte	.LASF2
 1344 003a 02       		.uleb128 0x2
 1345 003b 02       		.byte	0x2
 1346 003c 07       		.byte	0x7
 1347 003d 62020000 		.4byte	.LASF3
 1348 0041 02       		.uleb128 0x2
 1349 0042 04       		.byte	0x4
 1350 0043 05       		.byte	0x5
 1351 0044 42010000 		.4byte	.LASF4
 1352 0048 02       		.uleb128 0x2
 1353 0049 04       		.byte	0x4
 1354 004a 07       		.byte	0x7
 1355 004b 09020000 		.4byte	.LASF5
 1356 004f 02       		.uleb128 0x2
 1357 0050 08       		.byte	0x8
 1358 0051 05       		.byte	0x5
 1359 0052 FD000000 		.4byte	.LASF6
 1360 0056 02       		.uleb128 0x2
 1361 0057 08       		.byte	0x8
 1362 0058 07       		.byte	0x7
 1363 0059 B8000000 		.4byte	.LASF7
 1364 005d 03       		.uleb128 0x3
 1365 005e 04       		.byte	0x4
 1366 005f 05       		.byte	0x5
 1367 0060 696E7400 		.ascii	"int\000"
 1368 0064 02       		.uleb128 0x2
 1369 0065 04       		.byte	0x4
 1370 0066 07       		.byte	0x7
 1371 0067 FC010000 		.4byte	.LASF8
 1372 006b 04       		.uleb128 0x4
 1373 006c 7A010000 		.4byte	.LASF9
 1374 0070 02       		.byte	0x2
 1375 0071 9201     		.2byte	0x192
 1376 0073 2C000000 		.4byte	0x2c
 1377 0077 04       		.uleb128 0x4
 1378 0078 00000000 		.4byte	.LASF10
 1379 007c 02       		.byte	0x2
 1380 007d 9301     		.2byte	0x193
 1381 007f 3A000000 		.4byte	0x3a
 1382 0083 04       		.uleb128 0x4
 1383 0084 9C010000 		.4byte	.LASF11
 1384 0088 02       		.byte	0x2
 1385 0089 9401     		.2byte	0x194
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 59


 1386 008b 48000000 		.4byte	0x48
 1387 008f 02       		.uleb128 0x2
 1388 0090 04       		.byte	0x4
 1389 0091 04       		.byte	0x4
 1390 0092 56030000 		.4byte	.LASF12
 1391 0096 02       		.uleb128 0x2
 1392 0097 08       		.byte	0x8
 1393 0098 04       		.byte	0x4
 1394 0099 80010000 		.4byte	.LASF13
 1395 009d 02       		.uleb128 0x2
 1396 009e 01       		.byte	0x1
 1397 009f 08       		.byte	0x8
 1398 00a0 54040000 		.4byte	.LASF14
 1399 00a4 04       		.uleb128 0x4
 1400 00a5 80030000 		.4byte	.LASF15
 1401 00a9 02       		.byte	0x2
 1402 00aa 3C02     		.2byte	0x23c
 1403 00ac B0000000 		.4byte	0xb0
 1404 00b0 05       		.uleb128 0x5
 1405 00b1 6B000000 		.4byte	0x6b
 1406 00b5 04       		.uleb128 0x4
 1407 00b6 DF020000 		.4byte	.LASF16
 1408 00ba 02       		.byte	0x2
 1409 00bb 3E02     		.2byte	0x23e
 1410 00bd C1000000 		.4byte	0xc1
 1411 00c1 05       		.uleb128 0x5
 1412 00c2 83000000 		.4byte	0x83
 1413 00c6 02       		.uleb128 0x2
 1414 00c7 08       		.byte	0x8
 1415 00c8 04       		.byte	0x4
 1416 00c9 08030000 		.4byte	.LASF17
 1417 00cd 02       		.uleb128 0x2
 1418 00ce 04       		.byte	0x4
 1419 00cf 07       		.byte	0x7
 1420 00d0 FF020000 		.4byte	.LASF18
 1421 00d4 06       		.uleb128 0x6
 1422 00d5 30010000 		.4byte	.LASF19
 1423 00d9 01       		.byte	0x1
 1424 00da 63       		.byte	0x63
 1425 00db 00000000 		.4byte	.LFB0
 1426 00df F4000000 		.4byte	.LFE0-.LFB0
 1427 00e3 01       		.uleb128 0x1
 1428 00e4 9C       		.byte	0x9c
 1429 00e5 F8000000 		.4byte	0xf8
 1430 00e9 07       		.uleb128 0x7
 1431 00ea E1040000 		.4byte	.LASF21
 1432 00ee 01       		.byte	0x1
 1433 00ef 6A       		.byte	0x6a
 1434 00f0 6B000000 		.4byte	0x6b
 1435 00f4 02       		.uleb128 0x2
 1436 00f5 91       		.byte	0x91
 1437 00f6 77       		.sleb128 -9
 1438 00f7 00       		.byte	0
 1439 00f8 08       		.uleb128 0x8
 1440 00f9 CD040000 		.4byte	.LASF20
 1441 00fd 01       		.byte	0x1
 1442 00fe 4401     		.2byte	0x144
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 60


 1443 0100 00000000 		.4byte	.LFB1
 1444 0104 98000000 		.4byte	.LFE1-.LFB1
 1445 0108 01       		.uleb128 0x1
 1446 0109 9C       		.byte	0x9c
 1447 010a 1E010000 		.4byte	0x11e
 1448 010e 09       		.uleb128 0x9
 1449 010f E1040000 		.4byte	.LASF21
 1450 0113 01       		.byte	0x1
 1451 0114 4601     		.2byte	0x146
 1452 0116 6B000000 		.4byte	0x6b
 1453 011a 02       		.uleb128 0x2
 1454 011b 91       		.byte	0x91
 1455 011c 77       		.sleb128 -9
 1456 011d 00       		.byte	0
 1457 011e 0A       		.uleb128 0xa
 1458 011f 14030000 		.4byte	.LASF22
 1459 0123 01       		.byte	0x1
 1460 0124 DD01     		.2byte	0x1dd
 1461 0126 00000000 		.4byte	.LFB2
 1462 012a 24000000 		.4byte	.LFE2-.LFB2
 1463 012e 01       		.uleb128 0x1
 1464 012f 9C       		.byte	0x9c
 1465 0130 0A       		.uleb128 0xa
 1466 0131 42040000 		.4byte	.LASF23
 1467 0135 01       		.byte	0x1
 1468 0136 0202     		.2byte	0x202
 1469 0138 00000000 		.4byte	.LFB3
 1470 013c 98000000 		.4byte	.LFE3-.LFB3
 1471 0140 01       		.uleb128 0x1
 1472 0141 9C       		.byte	0x9c
 1473 0142 0B       		.uleb128 0xb
 1474 0143 F2040000 		.4byte	.LASF32
 1475 0147 01       		.byte	0x1
 1476 0148 8C02     		.2byte	0x28c
 1477 014a 6B000000 		.4byte	0x6b
 1478 014e 00000000 		.4byte	.LFB4
 1479 0152 50000000 		.4byte	.LFE4-.LFB4
 1480 0156 01       		.uleb128 0x1
 1481 0157 9C       		.byte	0x9c
 1482 0158 8A010000 		.4byte	0x18a
 1483 015c 0C       		.uleb128 0xc
 1484 015d 07000000 		.4byte	.LASF26
 1485 0161 01       		.byte	0x1
 1486 0162 8C02     		.2byte	0x28c
 1487 0164 6B000000 		.4byte	0x6b
 1488 0168 02       		.uleb128 0x2
 1489 0169 91       		.byte	0x91
 1490 016a 6F       		.sleb128 -17
 1491 016b 0D       		.uleb128 0xd
 1492 016c 706F7300 		.ascii	"pos\000"
 1493 0170 01       		.byte	0x1
 1494 0171 8E02     		.2byte	0x28e
 1495 0173 6B000000 		.4byte	0x6b
 1496 0177 02       		.uleb128 0x2
 1497 0178 91       		.byte	0x91
 1498 0179 77       		.sleb128 -9
 1499 017a 09       		.uleb128 0x9
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 61


 1500 017b 31030000 		.4byte	.LASF24
 1501 017f 01       		.byte	0x1
 1502 0180 8F02     		.2byte	0x28f
 1503 0182 6B000000 		.4byte	0x6b
 1504 0186 02       		.uleb128 0x2
 1505 0187 91       		.byte	0x91
 1506 0188 76       		.sleb128 -10
 1507 0189 00       		.byte	0
 1508 018a 08       		.uleb128 0x8
 1509 018b 59040000 		.4byte	.LASF25
 1510 018f 01       		.byte	0x1
 1511 0190 2603     		.2byte	0x326
 1512 0192 00000000 		.4byte	.LFB5
 1513 0196 48000000 		.4byte	.LFE5-.LFB5
 1514 019a 01       		.uleb128 0x1
 1515 019b 9C       		.byte	0x9c
 1516 019c BF010000 		.4byte	0x1bf
 1517 01a0 0C       		.uleb128 0xc
 1518 01a1 AD020000 		.4byte	.LASF27
 1519 01a5 01       		.byte	0x1
 1520 01a6 2603     		.2byte	0x326
 1521 01a8 6B000000 		.4byte	0x6b
 1522 01ac 02       		.uleb128 0x2
 1523 01ad 91       		.byte	0x91
 1524 01ae 6F       		.sleb128 -17
 1525 01af 09       		.uleb128 0x9
 1526 01b0 9D030000 		.4byte	.LASF28
 1527 01b4 01       		.byte	0x1
 1528 01b5 2803     		.2byte	0x328
 1529 01b7 6B000000 		.4byte	0x6b
 1530 01bb 02       		.uleb128 0x2
 1531 01bc 91       		.byte	0x91
 1532 01bd 77       		.sleb128 -9
 1533 01be 00       		.byte	0
 1534 01bf 08       		.uleb128 0x8
 1535 01c0 C7020000 		.4byte	.LASF29
 1536 01c4 01       		.byte	0x1
 1537 01c5 9603     		.2byte	0x396
 1538 01c7 00000000 		.4byte	.LFB6
 1539 01cb 34000000 		.4byte	.LFE6-.LFB6
 1540 01cf 01       		.uleb128 0x1
 1541 01d0 9C       		.byte	0x9c
 1542 01d1 E5010000 		.4byte	0x1e5
 1543 01d5 0C       		.uleb128 0xc
 1544 01d6 75020000 		.4byte	.LASF30
 1545 01da 01       		.byte	0x1
 1546 01db 9603     		.2byte	0x396
 1547 01dd 6B000000 		.4byte	0x6b
 1548 01e1 02       		.uleb128 0x2
 1549 01e2 91       		.byte	0x91
 1550 01e3 77       		.sleb128 -9
 1551 01e4 00       		.byte	0
 1552 01e5 0A       		.uleb128 0xa
 1553 01e6 A3010000 		.4byte	.LASF31
 1554 01ea 01       		.byte	0x1
 1555 01eb E303     		.2byte	0x3e3
 1556 01ed 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 62


 1557 01f1 58000000 		.4byte	.LFE7-.LFB7
 1558 01f5 01       		.uleb128 0x1
 1559 01f6 9C       		.byte	0x9c
 1560 01f7 0E       		.uleb128 0xe
 1561 01f8 A4030000 		.4byte	.LASF62
 1562 01fc 01       		.byte	0x1
 1563 01fd 1804     		.2byte	0x418
 1564 01ff 6B000000 		.4byte	0x6b
 1565 0203 00000000 		.4byte	.LFB8
 1566 0207 1C000000 		.4byte	.LFE8-.LFB8
 1567 020b 01       		.uleb128 0x1
 1568 020c 9C       		.byte	0x9c
 1569 020d 0B       		.uleb128 0xb
 1570 020e 7A040000 		.4byte	.LASF33
 1571 0212 01       		.byte	0x1
 1572 0213 3104     		.2byte	0x431
 1573 0215 77000000 		.4byte	0x77
 1574 0219 00000000 		.4byte	.LFB9
 1575 021d 20000000 		.4byte	.LFE9-.LFB9
 1576 0221 01       		.uleb128 0x1
 1577 0222 9C       		.byte	0x9c
 1578 0223 37020000 		.4byte	0x237
 1579 0227 0C       		.uleb128 0xc
 1580 0228 75020000 		.4byte	.LASF30
 1581 022c 01       		.byte	0x1
 1582 022d 3104     		.2byte	0x431
 1583 022f 6B000000 		.4byte	0x6b
 1584 0233 02       		.uleb128 0x2
 1585 0234 91       		.byte	0x91
 1586 0235 77       		.sleb128 -9
 1587 0236 00       		.byte	0
 1588 0237 08       		.uleb128 0x8
 1589 0238 C8010000 		.4byte	.LASF34
 1590 023c 01       		.byte	0x1
 1591 023d 4604     		.2byte	0x446
 1592 023f 00000000 		.4byte	.LFB10
 1593 0243 28000000 		.4byte	.LFE10-.LFB10
 1594 0247 01       		.uleb128 0x1
 1595 0248 9C       		.byte	0x9c
 1596 0249 5B020000 		.4byte	0x25b
 1597 024d 0D       		.uleb128 0xd
 1598 024e 6900     		.ascii	"i\000"
 1599 0250 01       		.byte	0x1
 1600 0251 4804     		.2byte	0x448
 1601 0253 6B000000 		.4byte	0x6b
 1602 0257 02       		.uleb128 0x2
 1603 0258 91       		.byte	0x91
 1604 0259 77       		.sleb128 -9
 1605 025a 00       		.byte	0
 1606 025b 08       		.uleb128 0x8
 1607 025c E5020000 		.4byte	.LASF35
 1608 0260 01       		.byte	0x1
 1609 0261 DC04     		.2byte	0x4dc
 1610 0263 00000000 		.4byte	.LFB11
 1611 0267 54000000 		.4byte	.LFE11-.LFB11
 1612 026b 01       		.uleb128 0x1
 1613 026c 9C       		.byte	0x9c
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 63


 1614 026d 9F020000 		.4byte	0x29f
 1615 0271 0C       		.uleb128 0xc
 1616 0272 75020000 		.4byte	.LASF30
 1617 0276 01       		.byte	0x1
 1618 0277 DC04     		.2byte	0x4dc
 1619 0279 6B000000 		.4byte	0x6b
 1620 027d 02       		.uleb128 0x2
 1621 027e 91       		.byte	0x91
 1622 027f 6F       		.sleb128 -17
 1623 0280 09       		.uleb128 0x9
 1624 0281 E2010000 		.4byte	.LASF36
 1625 0285 01       		.byte	0x1
 1626 0286 DE04     		.2byte	0x4de
 1627 0288 6B000000 		.4byte	0x6b
 1628 028c 02       		.uleb128 0x2
 1629 028d 91       		.byte	0x91
 1630 028e 77       		.sleb128 -9
 1631 028f 09       		.uleb128 0x9
 1632 0290 C3010000 		.4byte	.LASF37
 1633 0294 01       		.byte	0x1
 1634 0295 DF04     		.2byte	0x4df
 1635 0297 6B000000 		.4byte	0x6b
 1636 029b 02       		.uleb128 0x2
 1637 029c 91       		.byte	0x91
 1638 029d 76       		.sleb128 -10
 1639 029e 00       		.byte	0
 1640 029f 08       		.uleb128 0x8
 1641 02a0 7C020000 		.4byte	.LASF38
 1642 02a4 01       		.byte	0x1
 1643 02a5 3105     		.2byte	0x531
 1644 02a7 00000000 		.4byte	.LFB12
 1645 02ab 58000000 		.4byte	.LFE12-.LFB12
 1646 02af 01       		.uleb128 0x1
 1647 02b0 9C       		.byte	0x9c
 1648 02b1 E3020000 		.4byte	0x2e3
 1649 02b5 0C       		.uleb128 0xc
 1650 02b6 75020000 		.4byte	.LASF30
 1651 02ba 01       		.byte	0x1
 1652 02bb 3105     		.2byte	0x531
 1653 02bd 6B000000 		.4byte	0x6b
 1654 02c1 02       		.uleb128 0x2
 1655 02c2 91       		.byte	0x91
 1656 02c3 6F       		.sleb128 -17
 1657 02c4 09       		.uleb128 0x9
 1658 02c5 E2010000 		.4byte	.LASF36
 1659 02c9 01       		.byte	0x1
 1660 02ca 3305     		.2byte	0x533
 1661 02cc 6B000000 		.4byte	0x6b
 1662 02d0 02       		.uleb128 0x2
 1663 02d1 91       		.byte	0x91
 1664 02d2 77       		.sleb128 -9
 1665 02d3 09       		.uleb128 0x9
 1666 02d4 C3010000 		.4byte	.LASF37
 1667 02d8 01       		.byte	0x1
 1668 02d9 3405     		.2byte	0x534
 1669 02db 6B000000 		.4byte	0x6b
 1670 02df 02       		.uleb128 0x2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 64


 1671 02e0 91       		.byte	0x91
 1672 02e1 76       		.sleb128 -10
 1673 02e2 00       		.byte	0
 1674 02e3 08       		.uleb128 0x8
 1675 02e4 E7010000 		.4byte	.LASF39
 1676 02e8 01       		.byte	0x1
 1677 02e9 8505     		.2byte	0x585
 1678 02eb 00000000 		.4byte	.LFB13
 1679 02ef 5C000000 		.4byte	.LFE13-.LFB13
 1680 02f3 01       		.uleb128 0x1
 1681 02f4 9C       		.byte	0x9c
 1682 02f5 09030000 		.4byte	0x309
 1683 02f9 0C       		.uleb128 0xc
 1684 02fa 75020000 		.4byte	.LASF30
 1685 02fe 01       		.byte	0x1
 1686 02ff 8505     		.2byte	0x585
 1687 0301 6B000000 		.4byte	0x6b
 1688 0305 02       		.uleb128 0x2
 1689 0306 91       		.byte	0x91
 1690 0307 77       		.sleb128 -9
 1691 0308 00       		.byte	0
 1692 0309 08       		.uleb128 0x8
 1693 030a 97020000 		.4byte	.LASF40
 1694 030e 01       		.byte	0x1
 1695 030f 2D06     		.2byte	0x62d
 1696 0311 00000000 		.4byte	.LFB14
 1697 0315 98000000 		.4byte	.LFE14-.LFB14
 1698 0319 01       		.uleb128 0x1
 1699 031a 9C       		.byte	0x9c
 1700 031b 2F030000 		.4byte	0x32f
 1701 031f 0C       		.uleb128 0xc
 1702 0320 75020000 		.4byte	.LASF30
 1703 0324 01       		.byte	0x1
 1704 0325 2D06     		.2byte	0x62d
 1705 0327 6B000000 		.4byte	0x6b
 1706 032b 02       		.uleb128 0x2
 1707 032c 91       		.byte	0x91
 1708 032d 77       		.sleb128 -9
 1709 032e 00       		.byte	0
 1710 032f 0F       		.uleb128 0xf
 1711 0330 9E000000 		.4byte	.LASF41
 1712 0334 01       		.byte	0x1
 1713 0335 3B07     		.2byte	0x73b
 1714 0337 00000000 		.4byte	.LFB15
 1715 033b 2C000000 		.4byte	.LFE15-.LFB15
 1716 033f 01       		.uleb128 0x1
 1717 0340 9C       		.byte	0x9c
 1718 0341 55030000 		.4byte	0x355
 1719 0345 0C       		.uleb128 0xc
 1720 0346 5C030000 		.4byte	.LASF42
 1721 034a 01       		.byte	0x1
 1722 034b 3B07     		.2byte	0x73b
 1723 034d 6B000000 		.4byte	0x6b
 1724 0351 02       		.uleb128 0x2
 1725 0352 91       		.byte	0x91
 1726 0353 77       		.sleb128 -9
 1727 0354 00       		.byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 65


 1728 0355 0B       		.uleb128 0xb
 1729 0356 66030000 		.4byte	.LASF43
 1730 035a 01       		.byte	0x1
 1731 035b 5807     		.2byte	0x758
 1732 035d 6B000000 		.4byte	0x6b
 1733 0361 00000000 		.4byte	.LFB16
 1734 0365 20000000 		.4byte	.LFE16-.LFB16
 1735 0369 01       		.uleb128 0x1
 1736 036a 9C       		.byte	0x9c
 1737 036b 7F030000 		.4byte	0x37f
 1738 036f 09       		.uleb128 0x9
 1739 0370 5C030000 		.4byte	.LASF42
 1740 0374 01       		.byte	0x1
 1741 0375 5A07     		.2byte	0x75a
 1742 0377 6B000000 		.4byte	0x6b
 1743 037b 02       		.uleb128 0x2
 1744 037c 91       		.byte	0x91
 1745 037d 77       		.sleb128 -9
 1746 037e 00       		.byte	0
 1747 037f 0F       		.uleb128 0xf
 1748 0380 CF030000 		.4byte	.LASF44
 1749 0384 01       		.byte	0x1
 1750 0385 7A07     		.2byte	0x77a
 1751 0387 00000000 		.4byte	.LFB17
 1752 038b 20000000 		.4byte	.LFE17-.LFB17
 1753 038f 01       		.uleb128 0x1
 1754 0390 9C       		.byte	0x9c
 1755 0391 A5030000 		.4byte	0x3a5
 1756 0395 0C       		.uleb128 0xc
 1757 0396 27030000 		.4byte	.LASF45
 1758 039a 01       		.byte	0x1
 1759 039b 7A07     		.2byte	0x77a
 1760 039d 6B000000 		.4byte	0x6b
 1761 03a1 02       		.uleb128 0x2
 1762 03a2 91       		.byte	0x91
 1763 03a3 77       		.sleb128 -9
 1764 03a4 00       		.byte	0
 1765 03a5 07       		.uleb128 0x7
 1766 03a6 87010000 		.4byte	.LASF46
 1767 03aa 01       		.byte	0x1
 1768 03ab 16       		.byte	0x16
 1769 03ac 6B000000 		.4byte	0x6b
 1770 03b0 05       		.uleb128 0x5
 1771 03b1 03       		.byte	0x3
 1772 03b2 00000000 		.4byte	CapSense_CSD_initVar
 1773 03b6 10       		.uleb128 0x10
 1774 03b7 0E050000 		.4byte	.LASF47
 1775 03bb 01       		.byte	0x1
 1776 03bc 19       		.byte	0x19
 1777 03bd B0000000 		.4byte	0xb0
 1778 03c1 05       		.uleb128 0x5
 1779 03c2 03       		.byte	0x3
 1780 03c3 00000000 		.4byte	CapSense_CSD_csv
 1781 03c7 10       		.uleb128 0x10
 1782 03c8 17010000 		.4byte	.LASF48
 1783 03cc 01       		.byte	0x1
 1784 03cd 1A       		.byte	0x1a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 66


 1785 03ce B0000000 		.4byte	0xb0
 1786 03d2 05       		.uleb128 0x5
 1787 03d3 03       		.byte	0x3
 1788 03d4 00000000 		.4byte	CapSense_CSD_sensorIndex
 1789 03d8 11       		.uleb128 0x11
 1790 03d9 77000000 		.4byte	0x77
 1791 03dd E8030000 		.4byte	0x3e8
 1792 03e1 12       		.uleb128 0x12
 1793 03e2 CD000000 		.4byte	0xcd
 1794 03e6 00       		.byte	0
 1795 03e7 00       		.byte	0
 1796 03e8 10       		.uleb128 0x10
 1797 03e9 B8030000 		.4byte	.LASF49
 1798 03ed 01       		.byte	0x1
 1799 03ee 29       		.byte	0x29
 1800 03ef D8030000 		.4byte	0x3d8
 1801 03f3 05       		.uleb128 0x5
 1802 03f4 03       		.byte	0x3
 1803 03f5 00000000 		.4byte	CapSense_CSD_sensorRaw
 1804 03f9 11       		.uleb128 0x11
 1805 03fa 6B000000 		.4byte	0x6b
 1806 03fe 09040000 		.4byte	0x409
 1807 0402 12       		.uleb128 0x12
 1808 0403 CD000000 		.4byte	0xcd
 1809 0407 00       		.byte	0
 1810 0408 00       		.byte	0
 1811 0409 10       		.uleb128 0x10
 1812 040a 38030000 		.4byte	.LASF50
 1813 040e 01       		.byte	0x1
 1814 040f 2B       		.byte	0x2b
 1815 0410 F9030000 		.4byte	0x3f9
 1816 0414 05       		.uleb128 0x5
 1817 0415 03       		.byte	0x3
 1818 0416 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1819 041a 11       		.uleb128 0x11
 1820 041b 30040000 		.4byte	0x430
 1821 041f 2A040000 		.4byte	0x42a
 1822 0423 12       		.uleb128 0x12
 1823 0424 CD000000 		.4byte	0xcd
 1824 0428 00       		.byte	0
 1825 0429 00       		.byte	0
 1826 042a 13       		.uleb128 0x13
 1827 042b 04       		.byte	0x4
 1828 042c 6B000000 		.4byte	0x6b
 1829 0430 14       		.uleb128 0x14
 1830 0431 2A040000 		.4byte	0x42a
 1831 0435 10       		.uleb128 0x10
 1832 0436 B2020000 		.4byte	.LASF51
 1833 043a 01       		.byte	0x1
 1834 043b 2E       		.byte	0x2e
 1835 043c 46040000 		.4byte	0x446
 1836 0440 05       		.uleb128 0x5
 1837 0441 03       		.byte	0x3
 1838 0442 00000000 		.4byte	CapSense_CSD_pcTable
 1839 0446 14       		.uleb128 0x14
 1840 0447 1A040000 		.4byte	0x41a
 1841 044b 11       		.uleb128 0x11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 67


 1842 044c 5B040000 		.4byte	0x45b
 1843 0450 5B040000 		.4byte	0x45b
 1844 0454 12       		.uleb128 0x12
 1845 0455 CD000000 		.4byte	0xcd
 1846 0459 00       		.byte	0
 1847 045a 00       		.byte	0
 1848 045b 14       		.uleb128 0x14
 1849 045c 6B000000 		.4byte	0x6b
 1850 0460 10       		.uleb128 0x10
 1851 0461 E6000000 		.4byte	.LASF52
 1852 0465 01       		.byte	0x1
 1853 0466 32       		.byte	0x32
 1854 0467 71040000 		.4byte	0x471
 1855 046b 05       		.uleb128 0x5
 1856 046c 03       		.byte	0x3
 1857 046d 00000000 		.4byte	CapSense_CSD_portTable
 1858 0471 14       		.uleb128 0x14
 1859 0472 4B040000 		.4byte	0x44b
 1860 0476 10       		.uleb128 0x10
 1861 0477 CF000000 		.4byte	.LASF53
 1862 047b 01       		.byte	0x1
 1863 047c 36       		.byte	0x36
 1864 047d 87040000 		.4byte	0x487
 1865 0481 05       		.uleb128 0x5
 1866 0482 03       		.byte	0x3
 1867 0483 00000000 		.4byte	CapSense_CSD_maskTable
 1868 0487 14       		.uleb128 0x14
 1869 0488 4B040000 		.4byte	0x44b
 1870 048c 11       		.uleb128 0x11
 1871 048d 30040000 		.4byte	0x430
 1872 0491 9C040000 		.4byte	0x49c
 1873 0495 12       		.uleb128 0x12
 1874 0496 CD000000 		.4byte	0xcd
 1875 049a 07       		.byte	0x7
 1876 049b 00       		.byte	0
 1877 049c 10       		.uleb128 0x10
 1878 049d 65010000 		.4byte	.LASF54
 1879 04a1 01       		.byte	0x1
 1880 04a2 3A       		.byte	0x3a
 1881 04a3 AD040000 		.4byte	0x4ad
 1882 04a7 05       		.uleb128 0x5
 1883 04a8 03       		.byte	0x3
 1884 04a9 00000000 		.4byte	CapSense_CSD_csTable
 1885 04ad 14       		.uleb128 0x14
 1886 04ae 8C040000 		.4byte	0x48c
 1887 04b2 10       		.uleb128 0x10
 1888 04b3 B3040000 		.4byte	.LASF55
 1889 04b7 01       		.byte	0x1
 1890 04b8 40       		.byte	0x40
 1891 04b9 F9030000 		.4byte	0x3f9
 1892 04bd 05       		.uleb128 0x5
 1893 04be 03       		.byte	0x3
 1894 04bf 00000000 		.4byte	CapSense_CSD_idacSettings
 1895 04c3 10       		.uleb128 0x10
 1896 04c4 95040000 		.4byte	.LASF56
 1897 04c8 01       		.byte	0x1
 1898 04c9 44       		.byte	0x44
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 68


 1899 04ca F9030000 		.4byte	0x3f9
 1900 04ce 05       		.uleb128 0x5
 1901 04cf 03       		.byte	0x3
 1902 04d0 00000000 		.4byte	CapSense_CSD_widgetResolution
 1903 04d4 10       		.uleb128 0x10
 1904 04d5 41020000 		.4byte	.LASF57
 1905 04d9 01       		.byte	0x1
 1906 04da 48       		.byte	0x48
 1907 04db F9030000 		.4byte	0x3f9
 1908 04df 05       		.uleb128 0x5
 1909 04e0 03       		.byte	0x3
 1910 04e1 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 1911 04e5 10       		.uleb128 0x10
 1912 04e6 4B010000 		.4byte	.LASF58
 1913 04ea 01       		.byte	0x1
 1914 04eb 4C       		.byte	0x4c
 1915 04ec F6040000 		.4byte	0x4f6
 1916 04f0 05       		.uleb128 0x5
 1917 04f1 03       		.byte	0x3
 1918 04f2 00000000 		.4byte	CapSense_CSD_widgetNumber
 1919 04f6 14       		.uleb128 0x14
 1920 04f7 4B040000 		.4byte	0x44b
 1921 04fb 00       		.byte	0
 1922              		.section	.debug_abbrev,"",%progbits
 1923              	.Ldebug_abbrev0:
 1924 0000 01       		.uleb128 0x1
 1925 0001 11       		.uleb128 0x11
 1926 0002 01       		.byte	0x1
 1927 0003 25       		.uleb128 0x25
 1928 0004 0E       		.uleb128 0xe
 1929 0005 13       		.uleb128 0x13
 1930 0006 0B       		.uleb128 0xb
 1931 0007 03       		.uleb128 0x3
 1932 0008 0E       		.uleb128 0xe
 1933 0009 1B       		.uleb128 0x1b
 1934 000a 0E       		.uleb128 0xe
 1935 000b 55       		.uleb128 0x55
 1936 000c 17       		.uleb128 0x17
 1937 000d 11       		.uleb128 0x11
 1938 000e 01       		.uleb128 0x1
 1939 000f 10       		.uleb128 0x10
 1940 0010 17       		.uleb128 0x17
 1941 0011 00       		.byte	0
 1942 0012 00       		.byte	0
 1943 0013 02       		.uleb128 0x2
 1944 0014 24       		.uleb128 0x24
 1945 0015 00       		.byte	0
 1946 0016 0B       		.uleb128 0xb
 1947 0017 0B       		.uleb128 0xb
 1948 0018 3E       		.uleb128 0x3e
 1949 0019 0B       		.uleb128 0xb
 1950 001a 03       		.uleb128 0x3
 1951 001b 0E       		.uleb128 0xe
 1952 001c 00       		.byte	0
 1953 001d 00       		.byte	0
 1954 001e 03       		.uleb128 0x3
 1955 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 69


 1956 0020 00       		.byte	0
 1957 0021 0B       		.uleb128 0xb
 1958 0022 0B       		.uleb128 0xb
 1959 0023 3E       		.uleb128 0x3e
 1960 0024 0B       		.uleb128 0xb
 1961 0025 03       		.uleb128 0x3
 1962 0026 08       		.uleb128 0x8
 1963 0027 00       		.byte	0
 1964 0028 00       		.byte	0
 1965 0029 04       		.uleb128 0x4
 1966 002a 16       		.uleb128 0x16
 1967 002b 00       		.byte	0
 1968 002c 03       		.uleb128 0x3
 1969 002d 0E       		.uleb128 0xe
 1970 002e 3A       		.uleb128 0x3a
 1971 002f 0B       		.uleb128 0xb
 1972 0030 3B       		.uleb128 0x3b
 1973 0031 05       		.uleb128 0x5
 1974 0032 49       		.uleb128 0x49
 1975 0033 13       		.uleb128 0x13
 1976 0034 00       		.byte	0
 1977 0035 00       		.byte	0
 1978 0036 05       		.uleb128 0x5
 1979 0037 35       		.uleb128 0x35
 1980 0038 00       		.byte	0
 1981 0039 49       		.uleb128 0x49
 1982 003a 13       		.uleb128 0x13
 1983 003b 00       		.byte	0
 1984 003c 00       		.byte	0
 1985 003d 06       		.uleb128 0x6
 1986 003e 2E       		.uleb128 0x2e
 1987 003f 01       		.byte	0x1
 1988 0040 3F       		.uleb128 0x3f
 1989 0041 19       		.uleb128 0x19
 1990 0042 03       		.uleb128 0x3
 1991 0043 0E       		.uleb128 0xe
 1992 0044 3A       		.uleb128 0x3a
 1993 0045 0B       		.uleb128 0xb
 1994 0046 3B       		.uleb128 0x3b
 1995 0047 0B       		.uleb128 0xb
 1996 0048 27       		.uleb128 0x27
 1997 0049 19       		.uleb128 0x19
 1998 004a 11       		.uleb128 0x11
 1999 004b 01       		.uleb128 0x1
 2000 004c 12       		.uleb128 0x12
 2001 004d 06       		.uleb128 0x6
 2002 004e 40       		.uleb128 0x40
 2003 004f 18       		.uleb128 0x18
 2004 0050 9642     		.uleb128 0x2116
 2005 0052 19       		.uleb128 0x19
 2006 0053 01       		.uleb128 0x1
 2007 0054 13       		.uleb128 0x13
 2008 0055 00       		.byte	0
 2009 0056 00       		.byte	0
 2010 0057 07       		.uleb128 0x7
 2011 0058 34       		.uleb128 0x34
 2012 0059 00       		.byte	0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 70


 2013 005a 03       		.uleb128 0x3
 2014 005b 0E       		.uleb128 0xe
 2015 005c 3A       		.uleb128 0x3a
 2016 005d 0B       		.uleb128 0xb
 2017 005e 3B       		.uleb128 0x3b
 2018 005f 0B       		.uleb128 0xb
 2019 0060 49       		.uleb128 0x49
 2020 0061 13       		.uleb128 0x13
 2021 0062 02       		.uleb128 0x2
 2022 0063 18       		.uleb128 0x18
 2023 0064 00       		.byte	0
 2024 0065 00       		.byte	0
 2025 0066 08       		.uleb128 0x8
 2026 0067 2E       		.uleb128 0x2e
 2027 0068 01       		.byte	0x1
 2028 0069 3F       		.uleb128 0x3f
 2029 006a 19       		.uleb128 0x19
 2030 006b 03       		.uleb128 0x3
 2031 006c 0E       		.uleb128 0xe
 2032 006d 3A       		.uleb128 0x3a
 2033 006e 0B       		.uleb128 0xb
 2034 006f 3B       		.uleb128 0x3b
 2035 0070 05       		.uleb128 0x5
 2036 0071 27       		.uleb128 0x27
 2037 0072 19       		.uleb128 0x19
 2038 0073 11       		.uleb128 0x11
 2039 0074 01       		.uleb128 0x1
 2040 0075 12       		.uleb128 0x12
 2041 0076 06       		.uleb128 0x6
 2042 0077 40       		.uleb128 0x40
 2043 0078 18       		.uleb128 0x18
 2044 0079 9642     		.uleb128 0x2116
 2045 007b 19       		.uleb128 0x19
 2046 007c 01       		.uleb128 0x1
 2047 007d 13       		.uleb128 0x13
 2048 007e 00       		.byte	0
 2049 007f 00       		.byte	0
 2050 0080 09       		.uleb128 0x9
 2051 0081 34       		.uleb128 0x34
 2052 0082 00       		.byte	0
 2053 0083 03       		.uleb128 0x3
 2054 0084 0E       		.uleb128 0xe
 2055 0085 3A       		.uleb128 0x3a
 2056 0086 0B       		.uleb128 0xb
 2057 0087 3B       		.uleb128 0x3b
 2058 0088 05       		.uleb128 0x5
 2059 0089 49       		.uleb128 0x49
 2060 008a 13       		.uleb128 0x13
 2061 008b 02       		.uleb128 0x2
 2062 008c 18       		.uleb128 0x18
 2063 008d 00       		.byte	0
 2064 008e 00       		.byte	0
 2065 008f 0A       		.uleb128 0xa
 2066 0090 2E       		.uleb128 0x2e
 2067 0091 00       		.byte	0
 2068 0092 3F       		.uleb128 0x3f
 2069 0093 19       		.uleb128 0x19
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 71


 2070 0094 03       		.uleb128 0x3
 2071 0095 0E       		.uleb128 0xe
 2072 0096 3A       		.uleb128 0x3a
 2073 0097 0B       		.uleb128 0xb
 2074 0098 3B       		.uleb128 0x3b
 2075 0099 05       		.uleb128 0x5
 2076 009a 27       		.uleb128 0x27
 2077 009b 19       		.uleb128 0x19
 2078 009c 11       		.uleb128 0x11
 2079 009d 01       		.uleb128 0x1
 2080 009e 12       		.uleb128 0x12
 2081 009f 06       		.uleb128 0x6
 2082 00a0 40       		.uleb128 0x40
 2083 00a1 18       		.uleb128 0x18
 2084 00a2 9642     		.uleb128 0x2116
 2085 00a4 19       		.uleb128 0x19
 2086 00a5 00       		.byte	0
 2087 00a6 00       		.byte	0
 2088 00a7 0B       		.uleb128 0xb
 2089 00a8 2E       		.uleb128 0x2e
 2090 00a9 01       		.byte	0x1
 2091 00aa 3F       		.uleb128 0x3f
 2092 00ab 19       		.uleb128 0x19
 2093 00ac 03       		.uleb128 0x3
 2094 00ad 0E       		.uleb128 0xe
 2095 00ae 3A       		.uleb128 0x3a
 2096 00af 0B       		.uleb128 0xb
 2097 00b0 3B       		.uleb128 0x3b
 2098 00b1 05       		.uleb128 0x5
 2099 00b2 27       		.uleb128 0x27
 2100 00b3 19       		.uleb128 0x19
 2101 00b4 49       		.uleb128 0x49
 2102 00b5 13       		.uleb128 0x13
 2103 00b6 11       		.uleb128 0x11
 2104 00b7 01       		.uleb128 0x1
 2105 00b8 12       		.uleb128 0x12
 2106 00b9 06       		.uleb128 0x6
 2107 00ba 40       		.uleb128 0x40
 2108 00bb 18       		.uleb128 0x18
 2109 00bc 9742     		.uleb128 0x2117
 2110 00be 19       		.uleb128 0x19
 2111 00bf 01       		.uleb128 0x1
 2112 00c0 13       		.uleb128 0x13
 2113 00c1 00       		.byte	0
 2114 00c2 00       		.byte	0
 2115 00c3 0C       		.uleb128 0xc
 2116 00c4 05       		.uleb128 0x5
 2117 00c5 00       		.byte	0
 2118 00c6 03       		.uleb128 0x3
 2119 00c7 0E       		.uleb128 0xe
 2120 00c8 3A       		.uleb128 0x3a
 2121 00c9 0B       		.uleb128 0xb
 2122 00ca 3B       		.uleb128 0x3b
 2123 00cb 05       		.uleb128 0x5
 2124 00cc 49       		.uleb128 0x49
 2125 00cd 13       		.uleb128 0x13
 2126 00ce 02       		.uleb128 0x2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 72


 2127 00cf 18       		.uleb128 0x18
 2128 00d0 00       		.byte	0
 2129 00d1 00       		.byte	0
 2130 00d2 0D       		.uleb128 0xd
 2131 00d3 34       		.uleb128 0x34
 2132 00d4 00       		.byte	0
 2133 00d5 03       		.uleb128 0x3
 2134 00d6 08       		.uleb128 0x8
 2135 00d7 3A       		.uleb128 0x3a
 2136 00d8 0B       		.uleb128 0xb
 2137 00d9 3B       		.uleb128 0x3b
 2138 00da 05       		.uleb128 0x5
 2139 00db 49       		.uleb128 0x49
 2140 00dc 13       		.uleb128 0x13
 2141 00dd 02       		.uleb128 0x2
 2142 00de 18       		.uleb128 0x18
 2143 00df 00       		.byte	0
 2144 00e0 00       		.byte	0
 2145 00e1 0E       		.uleb128 0xe
 2146 00e2 2E       		.uleb128 0x2e
 2147 00e3 00       		.byte	0
 2148 00e4 3F       		.uleb128 0x3f
 2149 00e5 19       		.uleb128 0x19
 2150 00e6 03       		.uleb128 0x3
 2151 00e7 0E       		.uleb128 0xe
 2152 00e8 3A       		.uleb128 0x3a
 2153 00e9 0B       		.uleb128 0xb
 2154 00ea 3B       		.uleb128 0x3b
 2155 00eb 05       		.uleb128 0x5
 2156 00ec 27       		.uleb128 0x27
 2157 00ed 19       		.uleb128 0x19
 2158 00ee 49       		.uleb128 0x49
 2159 00ef 13       		.uleb128 0x13
 2160 00f0 11       		.uleb128 0x11
 2161 00f1 01       		.uleb128 0x1
 2162 00f2 12       		.uleb128 0x12
 2163 00f3 06       		.uleb128 0x6
 2164 00f4 40       		.uleb128 0x40
 2165 00f5 18       		.uleb128 0x18
 2166 00f6 9742     		.uleb128 0x2117
 2167 00f8 19       		.uleb128 0x19
 2168 00f9 00       		.byte	0
 2169 00fa 00       		.byte	0
 2170 00fb 0F       		.uleb128 0xf
 2171 00fc 2E       		.uleb128 0x2e
 2172 00fd 01       		.byte	0x1
 2173 00fe 3F       		.uleb128 0x3f
 2174 00ff 19       		.uleb128 0x19
 2175 0100 03       		.uleb128 0x3
 2176 0101 0E       		.uleb128 0xe
 2177 0102 3A       		.uleb128 0x3a
 2178 0103 0B       		.uleb128 0xb
 2179 0104 3B       		.uleb128 0x3b
 2180 0105 05       		.uleb128 0x5
 2181 0106 27       		.uleb128 0x27
 2182 0107 19       		.uleb128 0x19
 2183 0108 11       		.uleb128 0x11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 73


 2184 0109 01       		.uleb128 0x1
 2185 010a 12       		.uleb128 0x12
 2186 010b 06       		.uleb128 0x6
 2187 010c 40       		.uleb128 0x40
 2188 010d 18       		.uleb128 0x18
 2189 010e 9742     		.uleb128 0x2117
 2190 0110 19       		.uleb128 0x19
 2191 0111 01       		.uleb128 0x1
 2192 0112 13       		.uleb128 0x13
 2193 0113 00       		.byte	0
 2194 0114 00       		.byte	0
 2195 0115 10       		.uleb128 0x10
 2196 0116 34       		.uleb128 0x34
 2197 0117 00       		.byte	0
 2198 0118 03       		.uleb128 0x3
 2199 0119 0E       		.uleb128 0xe
 2200 011a 3A       		.uleb128 0x3a
 2201 011b 0B       		.uleb128 0xb
 2202 011c 3B       		.uleb128 0x3b
 2203 011d 0B       		.uleb128 0xb
 2204 011e 49       		.uleb128 0x49
 2205 011f 13       		.uleb128 0x13
 2206 0120 3F       		.uleb128 0x3f
 2207 0121 19       		.uleb128 0x19
 2208 0122 02       		.uleb128 0x2
 2209 0123 18       		.uleb128 0x18
 2210 0124 00       		.byte	0
 2211 0125 00       		.byte	0
 2212 0126 11       		.uleb128 0x11
 2213 0127 01       		.uleb128 0x1
 2214 0128 01       		.byte	0x1
 2215 0129 49       		.uleb128 0x49
 2216 012a 13       		.uleb128 0x13
 2217 012b 01       		.uleb128 0x1
 2218 012c 13       		.uleb128 0x13
 2219 012d 00       		.byte	0
 2220 012e 00       		.byte	0
 2221 012f 12       		.uleb128 0x12
 2222 0130 21       		.uleb128 0x21
 2223 0131 00       		.byte	0
 2224 0132 49       		.uleb128 0x49
 2225 0133 13       		.uleb128 0x13
 2226 0134 2F       		.uleb128 0x2f
 2227 0135 0B       		.uleb128 0xb
 2228 0136 00       		.byte	0
 2229 0137 00       		.byte	0
 2230 0138 13       		.uleb128 0x13
 2231 0139 0F       		.uleb128 0xf
 2232 013a 00       		.byte	0
 2233 013b 0B       		.uleb128 0xb
 2234 013c 0B       		.uleb128 0xb
 2235 013d 49       		.uleb128 0x49
 2236 013e 13       		.uleb128 0x13
 2237 013f 00       		.byte	0
 2238 0140 00       		.byte	0
 2239 0141 14       		.uleb128 0x14
 2240 0142 26       		.uleb128 0x26
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 74


 2241 0143 00       		.byte	0
 2242 0144 49       		.uleb128 0x49
 2243 0145 13       		.uleb128 0x13
 2244 0146 00       		.byte	0
 2245 0147 00       		.byte	0
 2246 0148 00       		.byte	0
 2247              		.section	.debug_aranges,"",%progbits
 2248 0000 A4000000 		.4byte	0xa4
 2249 0004 0200     		.2byte	0x2
 2250 0006 00000000 		.4byte	.Ldebug_info0
 2251 000a 04       		.byte	0x4
 2252 000b 00       		.byte	0
 2253 000c 0000     		.2byte	0
 2254 000e 0000     		.2byte	0
 2255 0010 00000000 		.4byte	.LFB0
 2256 0014 F4000000 		.4byte	.LFE0-.LFB0
 2257 0018 00000000 		.4byte	.LFB1
 2258 001c 98000000 		.4byte	.LFE1-.LFB1
 2259 0020 00000000 		.4byte	.LFB2
 2260 0024 24000000 		.4byte	.LFE2-.LFB2
 2261 0028 00000000 		.4byte	.LFB3
 2262 002c 98000000 		.4byte	.LFE3-.LFB3
 2263 0030 00000000 		.4byte	.LFB4
 2264 0034 50000000 		.4byte	.LFE4-.LFB4
 2265 0038 00000000 		.4byte	.LFB5
 2266 003c 48000000 		.4byte	.LFE5-.LFB5
 2267 0040 00000000 		.4byte	.LFB6
 2268 0044 34000000 		.4byte	.LFE6-.LFB6
 2269 0048 00000000 		.4byte	.LFB7
 2270 004c 58000000 		.4byte	.LFE7-.LFB7
 2271 0050 00000000 		.4byte	.LFB8
 2272 0054 1C000000 		.4byte	.LFE8-.LFB8
 2273 0058 00000000 		.4byte	.LFB9
 2274 005c 20000000 		.4byte	.LFE9-.LFB9
 2275 0060 00000000 		.4byte	.LFB10
 2276 0064 28000000 		.4byte	.LFE10-.LFB10
 2277 0068 00000000 		.4byte	.LFB11
 2278 006c 54000000 		.4byte	.LFE11-.LFB11
 2279 0070 00000000 		.4byte	.LFB12
 2280 0074 58000000 		.4byte	.LFE12-.LFB12
 2281 0078 00000000 		.4byte	.LFB13
 2282 007c 5C000000 		.4byte	.LFE13-.LFB13
 2283 0080 00000000 		.4byte	.LFB14
 2284 0084 98000000 		.4byte	.LFE14-.LFB14
 2285 0088 00000000 		.4byte	.LFB15
 2286 008c 2C000000 		.4byte	.LFE15-.LFB15
 2287 0090 00000000 		.4byte	.LFB16
 2288 0094 20000000 		.4byte	.LFE16-.LFB16
 2289 0098 00000000 		.4byte	.LFB17
 2290 009c 20000000 		.4byte	.LFE17-.LFB17
 2291 00a0 00000000 		.4byte	0
 2292 00a4 00000000 		.4byte	0
 2293              		.section	.debug_ranges,"",%progbits
 2294              	.Ldebug_ranges0:
 2295 0000 00000000 		.4byte	.LFB0
 2296 0004 F4000000 		.4byte	.LFE0
 2297 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 75


 2298 000c 98000000 		.4byte	.LFE1
 2299 0010 00000000 		.4byte	.LFB2
 2300 0014 24000000 		.4byte	.LFE2
 2301 0018 00000000 		.4byte	.LFB3
 2302 001c 98000000 		.4byte	.LFE3
 2303 0020 00000000 		.4byte	.LFB4
 2304 0024 50000000 		.4byte	.LFE4
 2305 0028 00000000 		.4byte	.LFB5
 2306 002c 48000000 		.4byte	.LFE5
 2307 0030 00000000 		.4byte	.LFB6
 2308 0034 34000000 		.4byte	.LFE6
 2309 0038 00000000 		.4byte	.LFB7
 2310 003c 58000000 		.4byte	.LFE7
 2311 0040 00000000 		.4byte	.LFB8
 2312 0044 1C000000 		.4byte	.LFE8
 2313 0048 00000000 		.4byte	.LFB9
 2314 004c 20000000 		.4byte	.LFE9
 2315 0050 00000000 		.4byte	.LFB10
 2316 0054 28000000 		.4byte	.LFE10
 2317 0058 00000000 		.4byte	.LFB11
 2318 005c 54000000 		.4byte	.LFE11
 2319 0060 00000000 		.4byte	.LFB12
 2320 0064 58000000 		.4byte	.LFE12
 2321 0068 00000000 		.4byte	.LFB13
 2322 006c 5C000000 		.4byte	.LFE13
 2323 0070 00000000 		.4byte	.LFB14
 2324 0074 98000000 		.4byte	.LFE14
 2325 0078 00000000 		.4byte	.LFB15
 2326 007c 2C000000 		.4byte	.LFE15
 2327 0080 00000000 		.4byte	.LFB16
 2328 0084 20000000 		.4byte	.LFE16
 2329 0088 00000000 		.4byte	.LFB17
 2330 008c 20000000 		.4byte	.LFE17
 2331 0090 00000000 		.4byte	0
 2332 0094 00000000 		.4byte	0
 2333              		.section	.debug_line,"",%progbits
 2334              	.Ldebug_line0:
 2335 0000 36020000 		.section	.debug_str,"MS",%progbits,1
 2335      02004900 
 2335      00000201 
 2335      FB0E0D00 
 2335      01010101 
 2336              	.LASF10:
 2337 0000 75696E74 		.ascii	"uint16\000"
 2337      313600
 2338              	.LASF26:
 2339 0007 736E7349 		.ascii	"snsIndex\000"
 2339      6E646578 
 2339      00
 2340              	.LASF59:
 2341 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2341      43313120 
 2341      352E342E 
 2341      31203230 
 2341      31363036 
 2342 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2342      20726576 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 76


 2342      6973696F 
 2342      6E203233 
 2342      37373135 
 2343 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2343      66756E63 
 2343      74696F6E 
 2343      2D736563 
 2343      74696F6E 
 2344              	.LASF41:
 2345 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2345      656E7365 
 2345      5F435344 
 2345      5F536574 
 2345      50726573 
 2346              	.LASF7:
 2347 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2347      206C6F6E 
 2347      6720756E 
 2347      7369676E 
 2347      65642069 
 2348              	.LASF53:
 2349 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2349      656E7365 
 2349      5F435344 
 2349      5F6D6173 
 2349      6B546162 
 2350              	.LASF52:
 2351 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2351      656E7365 
 2351      5F435344 
 2351      5F706F72 
 2351      74546162 
 2352              	.LASF6:
 2353 00fd 6C6F6E67 		.ascii	"long long int\000"
 2353      206C6F6E 
 2353      6720696E 
 2353      7400
 2354              	.LASF0:
 2355 010b 7369676E 		.ascii	"signed char\000"
 2355      65642063 
 2355      68617200 
 2356              	.LASF48:
 2357 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2357      656E7365 
 2357      5F435344 
 2357      5F73656E 
 2357      736F7249 
 2358              	.LASF19:
 2359 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
 2359      656E7365 
 2359      5F435344 
 2359      5F496E69 
 2359      7400
 2360              	.LASF4:
 2361 0142 6C6F6E67 		.ascii	"long int\000"
 2361      20696E74 
 2361      00
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 77


 2362              	.LASF58:
 2363 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2363      656E7365 
 2363      5F435344 
 2363      5F776964 
 2363      6765744E 
 2364              	.LASF54:
 2365 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2365      656E7365 
 2365      5F435344 
 2365      5F637354 
 2365      61626C65 
 2366              	.LASF9:
 2367 017a 75696E74 		.ascii	"uint8\000"
 2367      3800
 2368              	.LASF13:
 2369 0180 646F7562 		.ascii	"double\000"
 2369      6C6500
 2370              	.LASF46:
 2371 0187 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2371      656E7365 
 2371      5F435344 
 2371      5F696E69 
 2371      74566172 
 2372              	.LASF11:
 2373 019c 75696E74 		.ascii	"uint32\000"
 2373      333200
 2374              	.LASF31:
 2375 01a3 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2375      656E7365 
 2375      5F435344 
 2375      5F536361 
 2375      6E456E61 
 2376              	.LASF37:
 2377 01c3 6D61736B 		.ascii	"mask\000"
 2377      00
 2378              	.LASF34:
 2379 01c8 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2379      656E7365 
 2379      5F435344 
 2379      5F436C65 
 2379      61725365 
 2380              	.LASF36:
 2381 01e2 706F7274 		.ascii	"port\000"
 2381      00
 2382              	.LASF39:
 2383 01e7 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2383      656E7365 
 2383      5F435344 
 2383      5F507265 
 2383      5363616E 
 2384              	.LASF8:
 2385 01fc 756E7369 		.ascii	"unsigned int\000"
 2385      676E6564 
 2385      20696E74 
 2385      00
 2386              	.LASF5:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 78


 2387 0209 6C6F6E67 		.ascii	"long unsigned int\000"
 2387      20756E73 
 2387      69676E65 
 2387      6420696E 
 2387      7400
 2388              	.LASF60:
 2389 021b 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2389      72617465 
 2389      645F536F 
 2389      75726365 
 2389      5C50536F 
 2390              	.LASF57:
 2391 0241 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2391      656E7365 
 2391      5F435344 
 2391      5F616E61 
 2391      6C6F6753 
 2392              	.LASF3:
 2393 0262 73686F72 		.ascii	"short unsigned int\000"
 2393      7420756E 
 2393      7369676E 
 2393      65642069 
 2393      6E7400
 2394              	.LASF30:
 2395 0275 73656E73 		.ascii	"sensor\000"
 2395      6F7200
 2396              	.LASF38:
 2397 027c 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2397      656E7365 
 2397      5F435344 
 2397      5F446973 
 2397      61626C65 
 2398              	.LASF40:
 2399 0297 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2399      656E7365 
 2399      5F435344 
 2399      5F506F73 
 2399      74536361 
 2400              	.LASF27:
 2401 02ad 736C6F74 		.ascii	"slot\000"
 2401      00
 2402              	.LASF51:
 2403 02b2 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2403      656E7365 
 2403      5F435344 
 2403      5F706354 
 2403      61626C65 
 2404              	.LASF29:
 2405 02c7 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2405      656E7365 
 2405      5F435344 
 2405      5F536361 
 2405      6E53656E 
 2406              	.LASF16:
 2407 02df 72656733 		.ascii	"reg32\000"
 2407      3200
 2408              	.LASF35:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 79


 2409 02e5 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2409      656E7365 
 2409      5F435344 
 2409      5F456E61 
 2409      626C6553 
 2410              	.LASF18:
 2411 02ff 73697A65 		.ascii	"sizetype\000"
 2411      74797065 
 2411      00
 2412              	.LASF17:
 2413 0308 6C6F6E67 		.ascii	"long double\000"
 2413      20646F75 
 2413      626C6500 
 2414              	.LASF22:
 2415 0314 43617053 		.ascii	"CapSense_CSD_Start\000"
 2415      656E7365 
 2415      5F435344 
 2415      5F537461 
 2415      727400
 2416              	.LASF45:
 2417 0327 7363616E 		.ascii	"scanSpeed\000"
 2417      53706565 
 2417      6400
 2418              	.LASF24:
 2419 0331 656E4D61 		.ascii	"enMask\000"
 2419      736B00
 2420              	.LASF50:
 2421 0338 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2421      656E7365 
 2421      5F435344 
 2421      5F73656E 
 2421      736F7245 
 2422              	.LASF12:
 2423 0356 666C6F61 		.ascii	"float\000"
 2423      7400
 2424              	.LASF42:
 2425 035c 70726573 		.ascii	"prescaler\000"
 2425      63616C65 
 2425      7200
 2426              	.LASF43:
 2427 0366 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2427      656E7365 
 2427      5F435344 
 2427      5F476574 
 2427      50726573 
 2428              	.LASF15:
 2429 0380 72656738 		.ascii	"reg8\000"
 2429      00
 2430              	.LASF1:
 2431 0385 756E7369 		.ascii	"unsigned char\000"
 2431      676E6564 
 2431      20636861 
 2431      7200
 2432              	.LASF2:
 2433 0393 73686F72 		.ascii	"short int\000"
 2433      7420696E 
 2433      7400
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 80


 2434              	.LASF28:
 2435 039d 77696467 		.ascii	"widget\000"
 2435      657400
 2436              	.LASF62:
 2437 03a4 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2437      656E7365 
 2437      5F435344 
 2437      5F497342 
 2437      75737900 
 2438              	.LASF49:
 2439 03b8 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2439      656E7365 
 2439      5F435344 
 2439      5F73656E 
 2439      736F7252 
 2440              	.LASF44:
 2441 03cf 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2441      656E7365 
 2441      5F435344 
 2441      5F536574 
 2441      5363616E 
 2442              	.LASF61:
 2443 03e9 483A5C50 		.ascii	"H:\\P4P\\New\\P4P_Project-130\\Capsense_stuff\\Cap_"
 2443      34505C4E 
 2443      65775C50 
 2443      34505F50 
 2443      726F6A65 
 2444 0417 53656E73 		.ascii	"Sense.cydsn\\CapSense_CSD_WithTuner01.cydsn\000"
 2444      652E6379 
 2444      64736E5C 
 2444      43617053 
 2444      656E7365 
 2445              	.LASF23:
 2446 0442 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2446      656E7365 
 2446      5F435344 
 2446      5F53746F 
 2446      7000
 2447              	.LASF14:
 2448 0454 63686172 		.ascii	"char\000"
 2448      00
 2449              	.LASF25:
 2450 0459 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2450      656E7365 
 2450      5F435344 
 2450      5F536574 
 2450      5363616E 
 2451              	.LASF33:
 2452 047a 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2452      656E7365 
 2452      5F435344 
 2452      5F526561 
 2452      6453656E 
 2453              	.LASF56:
 2454 0495 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2454      656E7365 
 2454      5F435344 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccQFc8cb.s 			page 81


 2454      5F776964 
 2454      67657452 
 2455              	.LASF55:
 2456 04b3 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2456      656E7365 
 2456      5F435344 
 2456      5F696461 
 2456      63536574 
 2457              	.LASF20:
 2458 04cd 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2458      656E7365 
 2458      5F435344 
 2458      5F456E61 
 2458      626C6500 
 2459              	.LASF21:
 2460 04e1 656E6162 		.ascii	"enableInterrupts\000"
 2460      6C65496E 
 2460      74657272 
 2460      75707473 
 2460      00
 2461              	.LASF32:
 2462 04f2 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2462      656E7365 
 2462      5F435344 
 2462      5F46696E 
 2462      644E6578 
 2463              	.LASF47:
 2464 050e 43617053 		.ascii	"CapSense_CSD_csv\000"
 2464      656E7365 
 2464      5F435344 
 2464      5F637376 
 2464      00
 2465              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
