ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,4,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 01       		.byte	1
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 8
  37              	CapSense_CSD_pcTable:
  38 0000 05500040 		.word	1073762309
  39 0004 06500040 		.word	1073762310
  40              		.global	CapSense_CSD_portTable
  41              		.align	2
  42              		.type	CapSense_CSD_portTable, %object
  43              		.size	CapSense_CSD_portTable, 2
  44              	CapSense_CSD_portTable:
  45 0008 0000     		.space	2
  46              		.global	CapSense_CSD_maskTable
  47 000a 0000     		.align	2
  48              		.type	CapSense_CSD_maskTable, %object
  49              		.size	CapSense_CSD_maskTable, 2
  50              	CapSense_CSD_maskTable:
  51 000c 20       		.byte	32
  52 000d 40       		.byte	64
  53              		.global	CapSense_CSD_csTable
  54 000e 0000     		.align	2
  55              		.type	CapSense_CSD_csTable, %object
  56              		.size	CapSense_CSD_csTable, 32
  57              	CapSense_CSD_csTable:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 2


  58 0010 06520040 		.word	1073762822
  59 0014 0E520040 		.word	1073762830
  60 0018 16520040 		.word	1073762838
  61 001c 1E520040 		.word	1073762846
  62 0020 26520040 		.word	1073762854
  63 0024 2E520040 		.word	1073762862
  64 0028 36520040 		.word	1073762870
  65 002c 7E520040 		.word	1073762942
  66              		.global	CapSense_CSD_idacSettings
  67              		.data
  68 0001 000000   		.align	2
  69              		.type	CapSense_CSD_idacSettings, %object
  70              		.size	CapSense_CSD_idacSettings, 2
  71              	CapSense_CSD_idacSettings:
  72 0004 C8       		.byte	-56
  73 0005 C8       		.byte	-56
  74              		.global	CapSense_CSD_widgetResolution
  75 0006 0000     		.align	2
  76              		.type	CapSense_CSD_widgetResolution, %object
  77              		.size	CapSense_CSD_widgetResolution, 2
  78              	CapSense_CSD_widgetResolution:
  79 0008 FF       		.byte	-1
  80 0009 FF       		.byte	-1
  81              		.global	CapSense_CSD_analogSwitchDivider
  82 000a 0000     		.align	2
  83              		.type	CapSense_CSD_analogSwitchDivider, %object
  84              		.size	CapSense_CSD_analogSwitchDivider, 2
  85              	CapSense_CSD_analogSwitchDivider:
  86 000c 0B       		.byte	11
  87 000d 0B       		.byte	11
  88              		.global	CapSense_CSD_widgetNumber
  89              		.section	.rodata
  90              		.align	2
  91              		.type	CapSense_CSD_widgetNumber, %object
  92              		.size	CapSense_CSD_widgetNumber, 2
  93              	CapSense_CSD_widgetNumber:
  94 0030 00       		.byte	0
  95 0031 01       		.byte	1
  96              		.section	.text.CapSense_CSD_Init,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_CSD_Init
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_CSD_Init, %function
 102              	CapSense_CSD_Init:
 103              	.LFB0:
 104              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 3


  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x1u, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__ProximitySensor0_0__PROX__PC, 
  49:Generated_Source\PSoC5/CapSense_CSD.c **** };
  50:Generated_Source\PSoC5/CapSense_CSD.c **** 
  51:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  52:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  53:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__ProximitySensor0_0__PROX__PORT, 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  57:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  58:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__ProximitySensor0_0__PROX__MASK,
  59:Generated_Source\PSoC5/CapSense_CSD.c **** };
  60:Generated_Source\PSoC5/CapSense_CSD.c **** 
  61:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  62:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  63:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  64:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  65:Generated_Source\PSoC5/CapSense_CSD.c **** };
  66:Generated_Source\PSoC5/CapSense_CSD.c **** 
  67:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_idacSettings[] = {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 4


  68:Generated_Source\PSoC5/CapSense_CSD.c ****     200u,200u,
  69:Generated_Source\PSoC5/CapSense_CSD.c **** };
  70:Generated_Source\PSoC5/CapSense_CSD.c **** 
  71:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_widgetResolution[] = {
  72:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_16_BITS,
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_16_BITS,
  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     11u, 11u, 
  78:Generated_Source\PSoC5/CapSense_CSD.c **** };
  79:Generated_Source\PSoC5/CapSense_CSD.c **** 
  80:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  81:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, /* Button0__BTN */
  82:Generated_Source\PSoC5/CapSense_CSD.c ****     1u, /* ProximitySensor0__PROX */
  83:Generated_Source\PSoC5/CapSense_CSD.c ****     
  84:Generated_Source\PSoC5/CapSense_CSD.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD.c **** 
  87:Generated_Source\PSoC5/CapSense_CSD.c **** 
  88:Generated_Source\PSoC5/CapSense_CSD.c **** 
  89:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
  91:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  92:Generated_Source\PSoC5/CapSense_CSD.c **** *
  93:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
  94:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
  95:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
  96:Generated_Source\PSoC5/CapSense_CSD.c **** *
  97:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
  98:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
  99:Generated_Source\PSoC5/CapSense_CSD.c **** *
 100:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 101:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 102:Generated_Source\PSoC5/CapSense_CSD.c **** *
 103:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 104:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 105:Generated_Source\PSoC5/CapSense_CSD.c **** {
 105              		.loc 1 105 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 82B0     		sub	sp, sp, #8
 114              		.cfi_def_cfa_offset 16
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 106:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 107:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 108:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 109:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 110:Generated_Source\PSoC5/CapSense_CSD.c ****         
 111:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 112:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 5


 113:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 114:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 115:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 116:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 117:Generated_Source\PSoC5/CapSense_CSD.c ****     
 118:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 119:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 117              		.loc 1 119 0
 118 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 120:Generated_Source\PSoC5/CapSense_CSD.c **** 
 121:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 122:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 123:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 124:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 125:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 126:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 127:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 128:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 130:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 131:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 132:Generated_Source\PSoC5/CapSense_CSD.c **** 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 134:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 135:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 136:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 137:Generated_Source\PSoC5/CapSense_CSD.c **** 
 138:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 139:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 141:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 143:Generated_Source\PSoC5/CapSense_CSD.c ****         
 144:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 145:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 146:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 148:Generated_Source\PSoC5/CapSense_CSD.c ****         
 149:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 150:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 151:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 153:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 154:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 155:Generated_Source\PSoC5/CapSense_CSD.c ****         
 156:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 160:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 161:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 166:Generated_Source\PSoC5/CapSense_CSD.c ****         
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 6


 168:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 172:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 173:Generated_Source\PSoC5/CapSense_CSD.c ****         
 174:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 175:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 176:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 177:Generated_Source\PSoC5/CapSense_CSD.c ****     
 178:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 179:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 119              		.loc 1 179 0
 120 000a 2E4B     		ldr	r3, .L2
 121 000c 0722     		movs	r2, #7
 122 000e 1A70     		strb	r2, [r3]
 180:Generated_Source\PSoC5/CapSense_CSD.c ****     
 181:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 182:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****         
 188:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 191:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 192:Generated_Source\PSoC5/CapSense_CSD.c ****     
 193:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 194:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 195:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 123              		.loc 1 195 0
 124 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 125 0014 0346     		mov	r3, r0
 126 0016 FB71     		strb	r3, [r7, #7]
 196:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 127              		.loc 1 196 0
 128 0018 2B4A     		ldr	r2, .L2+4
 129 001a 2B4B     		ldr	r3, .L2+4
 130 001c 1B78     		ldrb	r3, [r3]
 131 001e DBB2     		uxtb	r3, r3
 132 0020 43F00303 		orr	r3, r3, #3
 133 0024 DBB2     		uxtb	r3, r3
 134 0026 1370     		strb	r3, [r2]
 197:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 135              		.loc 1 197 0
 136 0028 284A     		ldr	r2, .L2+8
 137 002a 284B     		ldr	r3, .L2+8
 138 002c 1B78     		ldrb	r3, [r3]
 139 002e DBB2     		uxtb	r3, r3
 140 0030 43F00303 		orr	r3, r3, #3
 141 0034 DBB2     		uxtb	r3, r3
 142 0036 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 143              		.loc 1 198 0
 144 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 7


 145 003a 1846     		mov	r0, r3
 146 003c FFF7FEFF 		bl	CyExitCriticalSection
 199:Generated_Source\PSoC5/CapSense_CSD.c ****         
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 147              		.loc 1 201 0
 148 0040 234B     		ldr	r3, .L2+12
 149 0042 FF22     		movs	r2, #255
 150 0044 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 151              		.loc 1 202 0
 152 0046 234B     		ldr	r3, .L2+16
 153 0048 FF22     		movs	r2, #255
 154 004a 1A70     		strb	r2, [r3]
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 155              		.loc 1 203 0
 156 004c 224B     		ldr	r3, .L2+20
 157 004e FF22     		movs	r2, #255
 158 0050 1A70     		strb	r2, [r3]
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 206:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 159              		.loc 1 206 0
 160 0052 224B     		ldr	r3, .L2+24
 161 0054 FF22     		movs	r2, #255
 162 0056 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 163              		.loc 1 207 0
 164 0058 214B     		ldr	r3, .L2+28
 165 005a FF22     		movs	r2, #255
 166 005c 1A70     		strb	r2, [r3]
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 167              		.loc 1 208 0
 168 005e 214B     		ldr	r3, .L2+32
 169 0060 FF22     		movs	r2, #255
 170 0062 1A70     		strb	r2, [r3]
 209:Generated_Source\PSoC5/CapSense_CSD.c ****         
 210:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 211:Generated_Source\PSoC5/CapSense_CSD.c ****     
 212:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 214:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 215:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 216:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 217:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 218:Generated_Source\PSoC5/CapSense_CSD.c ****             
 219:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 220:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 221:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 222:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 223:Generated_Source\PSoC5/CapSense_CSD.c ****            
 224:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 225:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 226:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 227:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 228:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 229:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 8


 230:Generated_Source\PSoC5/CapSense_CSD.c ****             
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 237:Generated_Source\PSoC5/CapSense_CSD.c ****             
 238:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 239:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 240:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 241:Generated_Source\PSoC5/CapSense_CSD.c ****             
 242:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 243:Generated_Source\PSoC5/CapSense_CSD.c ****     
 244:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 245:Generated_Source\PSoC5/CapSense_CSD.c ****     
 246:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 247:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 171              		.loc 1 247 0
 172 0064 204B     		ldr	r3, .L2+36
 173 0066 0122     		movs	r2, #1
 174 0068 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 175              		.loc 1 248 0
 176 006a 2049     		ldr	r1, .L2+40
 177 006c 0020     		movs	r0, #0
 178 006e FFF7FEFF 		bl	CyIntSetVector
 249:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 179              		.loc 1 249 0
 180 0072 0721     		movs	r1, #7
 181 0074 0020     		movs	r0, #0
 182 0076 FFF7FEFF 		bl	CyIntSetPriority
 250:Generated_Source\PSoC5/CapSense_CSD.c ****     
 251:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 252:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 253:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 254:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 255:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 256:Generated_Source\PSoC5/CapSense_CSD.c ****     
 257:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 258:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 183              		.loc 1 258 0
 184 007a FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 259:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 185              		.loc 1 259 0
 186 007e 0220     		movs	r0, #2
 187 0080 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 260:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 188              		.loc 1 260 0
 189 0084 0320     		movs	r0, #3
 190 0086 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 261:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 262:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 191              		.loc 1 262 0
 192 008a 0420     		movs	r0, #4
 193 008c FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 263:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 9


 264:Generated_Source\PSoC5/CapSense_CSD.c ****     
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 266:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 267:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 268:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 269:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 270:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 276:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 277:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     
 279:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 194              		.loc 1 280 0
 195 0090 174A     		ldr	r2, .L2+44
 196 0092 174B     		ldr	r3, .L2+44
 197 0094 1B78     		ldrb	r3, [r3]
 198 0096 DBB2     		uxtb	r3, r3
 199 0098 43F00403 		orr	r3, r3, #4
 200 009c DBB2     		uxtb	r3, r3
 201 009e 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 282:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 283:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 284:Generated_Source\PSoC5/CapSense_CSD.c ****     
 285:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 286:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 202              		.loc 1 286 0
 203 00a0 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 287:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 288:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 204              		.loc 1 288 0
 205 00a4 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 289:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 206              		.loc 1 289 0
 207 00a8 0020     		movs	r0, #0
 208 00aa FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 290:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 209              		.loc 1 290 0
 210 00ae 0820     		movs	r0, #8
 211 00b0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 291:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 212              		.loc 1 291 0
 213 00b4 0020     		movs	r0, #0
 214 00b6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 292:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 293:Generated_Source\PSoC5/CapSense_CSD.c ****     
 294:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 295:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 296:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 297:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 298:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 299:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 10


 300:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 301:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 302:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 303:Generated_Source\PSoC5/CapSense_CSD.c ****     
 304:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 305:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 306:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 307:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 308:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 309:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 310:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 311:Generated_Source\PSoC5/CapSense_CSD.c **** }
 215              		.loc 1 311 0
 216 00ba 00BF     		nop
 217 00bc 0837     		adds	r7, r7, #8
 218              		.cfi_def_cfa_offset 8
 219 00be BD46     		mov	sp, r7
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 00c0 80BD     		pop	{r7, pc}
 223              	.L3:
 224 00c2 00BF     		.align	2
 225              	.L2:
 226 00c4 8B640040 		.word	1073767563
 227 00c8 9A640040 		.word	1073767578
 228 00cc 9B640040 		.word	1073767579
 229 00d0 2A640040 		.word	1073767466
 230 00d4 4A640040 		.word	1073767498
 231 00d8 0A640040 		.word	1073767434
 232 00dc 2B640040 		.word	1073767467
 233 00e0 5B640040 		.word	1073767515
 234 00e4 4B640040 		.word	1073767499
 235 00e8 80E100E0 		.word	-536813184
 236 00ec 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 237 00f0 78640040 		.word	1073767544
 238              		.cfi_endproc
 239              	.LFE0:
 240              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 241              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 242              		.align	2
 243              		.global	CapSense_CSD_Enable
 244              		.thumb
 245              		.thumb_func
 246              		.type	CapSense_CSD_Enable, %function
 247              	CapSense_CSD_Enable:
 248              	.LFB1:
 312:Generated_Source\PSoC5/CapSense_CSD.c **** 
 313:Generated_Source\PSoC5/CapSense_CSD.c **** 
 314:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 316:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 317:Generated_Source\PSoC5/CapSense_CSD.c **** *
 318:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 319:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 320:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 321:Generated_Source\PSoC5/CapSense_CSD.c **** *
 322:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 11


 323:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 324:Generated_Source\PSoC5/CapSense_CSD.c **** *
 325:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 326:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 327:Generated_Source\PSoC5/CapSense_CSD.c **** *
 328:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 330:Generated_Source\PSoC5/CapSense_CSD.c **** {
 249              		.loc 1 330 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 80B5     		push	{r7, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 82B0     		sub	sp, sp, #8
 258              		.cfi_def_cfa_offset 16
 259 0004 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
 331:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 332:Generated_Source\PSoC5/CapSense_CSD.c ****     
 333:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 261              		.loc 1 333 0
 262 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 263 000a 0346     		mov	r3, r0
 264 000c FB71     		strb	r3, [r7, #7]
 334:Generated_Source\PSoC5/CapSense_CSD.c ****     
 335:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 336:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 337:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 338:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 339:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 340:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 341:Generated_Source\PSoC5/CapSense_CSD.c ****         
 342:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 343:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 344:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 345:Generated_Source\PSoC5/CapSense_CSD.c ****     
 346:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 347:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 265              		.loc 1 347 0
 266 000e 1C4A     		ldr	r2, .L5
 267 0010 1B4B     		ldr	r3, .L5
 268 0012 1B78     		ldrb	r3, [r3]
 269 0014 DBB2     		uxtb	r3, r3
 270 0016 43F02003 		orr	r3, r3, #32
 271 001a DBB2     		uxtb	r3, r3
 272 001c 1370     		strb	r3, [r2]
 348:Generated_Source\PSoC5/CapSense_CSD.c ****     
 349:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 350:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 351:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 352:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 353:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 354:Generated_Source\PSoC5/CapSense_CSD.c ****         
 355:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 12


 356:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 358:Generated_Source\PSoC5/CapSense_CSD.c ****         
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 360:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 361:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 362:Generated_Source\PSoC5/CapSense_CSD.c ****         
 363:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 364:Generated_Source\PSoC5/CapSense_CSD.c ****     
 365:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 366:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 367:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 368:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 369:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 371:Generated_Source\PSoC5/CapSense_CSD.c ****             
 372:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 374:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 375:Generated_Source\PSoC5/CapSense_CSD.c ****            
 376:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 377:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 378:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 379:Generated_Source\PSoC5/CapSense_CSD.c ****         
 380:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 381:Generated_Source\PSoC5/CapSense_CSD.c ****     
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     
 384:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 385:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 386:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 273              		.loc 1 386 0
 274 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 387:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 388:Generated_Source\PSoC5/CapSense_CSD.c ****     
 389:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 390:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 275              		.loc 1 390 0
 276 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 391:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 392:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 277              		.loc 1 392 0
 278 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 393:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 394:Generated_Source\PSoC5/CapSense_CSD.c ****     
 395:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 396:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 397:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 398:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 399:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 400:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 401:Generated_Source\PSoC5/CapSense_CSD.c ****     
 402:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 403:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 404:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 405:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 406:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 13


 407:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 408:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 410:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 411:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 412:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 279              		.loc 1 412 0
 280 002a 164A     		ldr	r2, .L5+4
 281 002c 154B     		ldr	r3, .L5+4
 282 002e 1B78     		ldrb	r3, [r3]
 283 0030 DBB2     		uxtb	r3, r3
 284 0032 43F01003 		orr	r3, r3, #16
 285 0036 DBB2     		uxtb	r3, r3
 286 0038 1370     		strb	r3, [r2]
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 287              		.loc 1 413 0
 288 003a 134A     		ldr	r2, .L5+8
 289 003c 124B     		ldr	r3, .L5+8
 290 003e 1B78     		ldrb	r3, [r3]
 291 0040 DBB2     		uxtb	r3, r3
 292 0042 43F01003 		orr	r3, r3, #16
 293 0046 DBB2     		uxtb	r3, r3
 294 0048 1370     		strb	r3, [r2]
 414:Generated_Source\PSoC5/CapSense_CSD.c ****         
 415:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 416:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 417:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 418:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 419:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 420:Generated_Source\PSoC5/CapSense_CSD.c ****     
 421:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 422:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 424:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 425:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 426:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 427:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         
 429:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 431:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 295              		.loc 1 431 0
 296 004a 104A     		ldr	r2, .L5+12
 297 004c 0F4B     		ldr	r3, .L5+12
 298 004e 1B78     		ldrb	r3, [r3]
 299 0050 DBB2     		uxtb	r3, r3
 300 0052 43F00103 		orr	r3, r3, #1
 301 0056 DBB2     		uxtb	r3, r3
 302 0058 1370     		strb	r3, [r2]
 432:Generated_Source\PSoC5/CapSense_CSD.c ****         
 433:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 434:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 435:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     
 438:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 303              		.loc 1 438 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 14


 304 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 305 005c 1846     		mov	r0, r3
 306 005e FFF7FEFF 		bl	CyExitCriticalSection
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     
 440:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 441:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 307              		.loc 1 441 0
 308 0062 0B4B     		ldr	r3, .L5+16
 309 0064 0122     		movs	r2, #1
 310 0066 1A60     		str	r2, [r3]
 442:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 443:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 444:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 445:Generated_Source\PSoC5/CapSense_CSD.c ****     
 446:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 447:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 311              		.loc 1 447 0
 312 0068 0A4A     		ldr	r2, .L5+20
 313 006a 0A4B     		ldr	r3, .L5+20
 314 006c 1B78     		ldrb	r3, [r3]
 315 006e DBB2     		uxtb	r3, r3
 316 0070 63F07F03 		orn	r3, r3, #127
 317 0074 DBB2     		uxtb	r3, r3
 318 0076 1370     		strb	r3, [r2]
 448:Generated_Source\PSoC5/CapSense_CSD.c **** }
 319              		.loc 1 448 0
 320 0078 00BF     		nop
 321 007a 0837     		adds	r7, r7, #8
 322              		.cfi_def_cfa_offset 8
 323 007c BD46     		mov	sp, r7
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 007e 80BD     		pop	{r7, pc}
 327              	.L6:
 328              		.align	2
 329              	.L5:
 330 0080 9B640040 		.word	1073767579
 331 0084 BB430040 		.word	1073759163
 332 0088 AB430040 		.word	1073759147
 333 008c 70580040 		.word	1073764464
 334 0090 00E100E0 		.word	-536813312
 335 0094 78640040 		.word	1073767544
 336              		.cfi_endproc
 337              	.LFE1:
 338              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 339              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 340              		.align	2
 341              		.global	CapSense_CSD_Start
 342              		.thumb
 343              		.thumb_func
 344              		.type	CapSense_CSD_Start, %function
 345              	CapSense_CSD_Start:
 346              	.LFB2:
 449:Generated_Source\PSoC5/CapSense_CSD.c **** 
 450:Generated_Source\PSoC5/CapSense_CSD.c **** 
 451:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 452:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 15


 453:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 454:Generated_Source\PSoC5/CapSense_CSD.c **** *
 455:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 456:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 457:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 458:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 459:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 460:Generated_Source\PSoC5/CapSense_CSD.c **** *
 461:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 462:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 463:Generated_Source\PSoC5/CapSense_CSD.c **** *
 464:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 465:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 466:Generated_Source\PSoC5/CapSense_CSD.c **** *
 467:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 468:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 469:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 470:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 471:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 472:Generated_Source\PSoC5/CapSense_CSD.c **** *
 473:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *
 476:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 477:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 478:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 479:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 480:Generated_Source\PSoC5/CapSense_CSD.c **** *
 481:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 483:Generated_Source\PSoC5/CapSense_CSD.c **** {
 347              		.loc 1 483 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 484:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 357              		.loc 1 484 0
 358 0004 064B     		ldr	r3, .L9
 359 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 360 0008 002B     		cmp	r3, #0
 361 000a 04D1     		bne	.L8
 485:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 486:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 362              		.loc 1 486 0
 363 000c FFF7FEFF 		bl	CapSense_CSD_Init
 487:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 364              		.loc 1 487 0
 365 0010 034B     		ldr	r3, .L9
 366 0012 0122     		movs	r2, #1
 367 0014 1A70     		strb	r2, [r3]
 368              	.L8:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 16


 488:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 489:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 369              		.loc 1 489 0
 370 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 490:Generated_Source\PSoC5/CapSense_CSD.c ****     
 491:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 492:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 493:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 494:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 495:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 496:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 497:Generated_Source\PSoC5/CapSense_CSD.c **** }
 371              		.loc 1 497 0
 372 001a 00BF     		nop
 373 001c 80BD     		pop	{r7, pc}
 374              	.L10:
 375 001e 00BF     		.align	2
 376              	.L9:
 377 0020 00000000 		.word	CapSense_CSD_initVar
 378              		.cfi_endproc
 379              	.LFE2:
 380              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 381              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 382              		.align	2
 383              		.global	CapSense_CSD_Stop
 384              		.thumb
 385              		.thumb_func
 386              		.type	CapSense_CSD_Stop, %function
 387              	CapSense_CSD_Stop:
 388              	.LFB3:
 498:Generated_Source\PSoC5/CapSense_CSD.c **** 
 499:Generated_Source\PSoC5/CapSense_CSD.c **** 
 500:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 501:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 502:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 503:Generated_Source\PSoC5/CapSense_CSD.c **** *
 504:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 505:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 506:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 507:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 508:Generated_Source\PSoC5/CapSense_CSD.c **** *
 509:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 510:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 511:Generated_Source\PSoC5/CapSense_CSD.c **** *
 512:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 513:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 514:Generated_Source\PSoC5/CapSense_CSD.c **** *
 515:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 516:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 517:Generated_Source\PSoC5/CapSense_CSD.c **** *
 518:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 519:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 520:Generated_Source\PSoC5/CapSense_CSD.c **** {
 389              		.loc 1 520 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 17


 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 00AF     		add	r7, sp, #0
 398              		.cfi_def_cfa_register 7
 521:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 522:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 399              		.loc 1 522 0
 400 0004 1E4A     		ldr	r2, .L12
 401 0006 1E4B     		ldr	r3, .L12
 402 0008 1B78     		ldrb	r3, [r3]
 403 000a DBB2     		uxtb	r3, r3
 404 000c 23F00203 		bic	r3, r3, #2
 405 0010 DBB2     		uxtb	r3, r3
 406 0012 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC5/CapSense_CSD.c ****     
 524:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 525:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 407              		.loc 1 525 0
 408 0014 1B4B     		ldr	r3, .L12+4
 409 0016 0122     		movs	r2, #1
 410 0018 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 527:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 528:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 529:Generated_Source\PSoC5/CapSense_CSD.c ****     
 530:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 531:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 411              		.loc 1 531 0
 412 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 532:Generated_Source\PSoC5/CapSense_CSD.c ****     
 533:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 534:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 535:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 536:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 537:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 538:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 539:Generated_Source\PSoC5/CapSense_CSD.c ****         
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 541:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     
 544:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 545:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 413              		.loc 1 545 0
 414 001e 1A4A     		ldr	r2, .L12+8
 415 0020 194B     		ldr	r3, .L12+8
 416 0022 1B78     		ldrb	r3, [r3]
 417 0024 DBB2     		uxtb	r3, r3
 418 0026 23F02003 		bic	r3, r3, #32
 419 002a DBB2     		uxtb	r3, r3
 420 002c 1370     		strb	r3, [r2]
 546:Generated_Source\PSoC5/CapSense_CSD.c ****     
 547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 548:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 549:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 18


 550:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 551:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 552:Generated_Source\PSoC5/CapSense_CSD.c **** 
 553:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 556:Generated_Source\PSoC5/CapSense_CSD.c **** 
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 558:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 560:Generated_Source\PSoC5/CapSense_CSD.c ****         
 561:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 562:Generated_Source\PSoC5/CapSense_CSD.c ****     
 563:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 565:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 566:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 567:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 569:Generated_Source\PSoC5/CapSense_CSD.c ****     
 570:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 572:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 573:Generated_Source\PSoC5/CapSense_CSD.c ****            
 574:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 575:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 576:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 577:Generated_Source\PSoC5/CapSense_CSD.c ****         
 578:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 579:Generated_Source\PSoC5/CapSense_CSD.c ****     
 580:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 581:Generated_Source\PSoC5/CapSense_CSD.c ****     
 582:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 583:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 584:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 421              		.loc 1 584 0
 422 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 585:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 588:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 423              		.loc 1 588 0
 424 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 589:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 590:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 425              		.loc 1 590 0
 426 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 591:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 592:Generated_Source\PSoC5/CapSense_CSD.c ****     
 593:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 594:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 595:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 596:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 597:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 598:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 599:Generated_Source\PSoC5/CapSense_CSD.c ****     
 600:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 19


 601:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 602:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 603:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 604:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 605:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 606:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 607:Generated_Source\PSoC5/CapSense_CSD.c **** 
 608:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 609:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 610:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 612:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 427              		.loc 1 612 0
 428 003a 144A     		ldr	r2, .L12+12
 429 003c 134B     		ldr	r3, .L12+12
 430 003e 1B78     		ldrb	r3, [r3]
 431 0040 DBB2     		uxtb	r3, r3
 432 0042 23F00103 		bic	r3, r3, #1
 433 0046 DBB2     		uxtb	r3, r3
 434 0048 1370     		strb	r3, [r2]
 613:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 435              		.loc 1 613 0
 436 004a 114A     		ldr	r2, .L12+16
 437 004c 104B     		ldr	r3, .L12+16
 438 004e 1B78     		ldrb	r3, [r3]
 439 0050 DBB2     		uxtb	r3, r3
 440 0052 23F01003 		bic	r3, r3, #16
 441 0056 DBB2     		uxtb	r3, r3
 442 0058 1370     		strb	r3, [r2]
 614:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 443              		.loc 1 614 0
 444 005a 0E4A     		ldr	r2, .L12+20
 445 005c 0D4B     		ldr	r3, .L12+20
 446 005e 1B78     		ldrb	r3, [r3]
 447 0060 DBB2     		uxtb	r3, r3
 448 0062 23F01003 		bic	r3, r3, #16
 449 0066 DBB2     		uxtb	r3, r3
 450 0068 1370     		strb	r3, [r2]
 615:Generated_Source\PSoC5/CapSense_CSD.c ****         
 616:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 617:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 618:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 619:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 620:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 621:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 622:Generated_Source\PSoC5/CapSense_CSD.c ****     
 623:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 624:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 451              		.loc 1 624 0
 452 006a 054A     		ldr	r2, .L12
 453 006c 044B     		ldr	r3, .L12
 454 006e 1B78     		ldrb	r3, [r3]
 455 0070 DBB2     		uxtb	r3, r3
 456 0072 03F07F03 		and	r3, r3, #127
 457 0076 DBB2     		uxtb	r3, r3
 458 0078 1370     		strb	r3, [r2]
 625:Generated_Source\PSoC5/CapSense_CSD.c **** }
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 20


 459              		.loc 1 625 0
 460 007a 00BF     		nop
 461 007c 80BD     		pop	{r7, pc}
 462              	.L13:
 463 007e 00BF     		.align	2
 464              	.L12:
 465 0080 78640040 		.word	1073767544
 466 0084 80E100E0 		.word	-536813184
 467 0088 9B640040 		.word	1073767579
 468 008c 70580040 		.word	1073764464
 469 0090 AB430040 		.word	1073759147
 470 0094 BB430040 		.word	1073759163
 471              		.cfi_endproc
 472              	.LFE3:
 473              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 474              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 475              		.align	2
 476              		.global	CapSense_CSD_FindNextSensor
 477              		.thumb
 478              		.thumb_func
 479              		.type	CapSense_CSD_FindNextSensor, %function
 480              	CapSense_CSD_FindNextSensor:
 481              	.LFB4:
 626:Generated_Source\PSoC5/CapSense_CSD.c **** 
 627:Generated_Source\PSoC5/CapSense_CSD.c **** 
 628:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 629:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 630:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 631:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 632:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 633:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 634:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 635:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 636:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 637:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 642:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 643:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 644:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 645:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 655:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 656:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 657:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 658:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 482              		.loc 1 658 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 21


 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 16
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 85B0     		sub	sp, sp, #20
 491              		.cfi_def_cfa_offset 24
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 494 0006 0346     		mov	r3, r0
 495 0008 FB71     		strb	r3, [r7, #7]
 496              	.L17:
 659:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 660:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 661:Generated_Source\PSoC5/CapSense_CSD.c ****         
 662:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 663:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 664:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 665:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 666:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 497              		.loc 1 666 0
 498 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 499 000c 0133     		adds	r3, r3, #1
 500 000e FB71     		strb	r3, [r7, #7]
 667:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 501              		.loc 1 667 0
 502 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 503 0012 022B     		cmp	r3, #2
 504 0014 12D0     		beq	.L19
 668:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 669:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 670:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 671:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 505              		.loc 1 671 0
 506 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 507 0018 DB08     		lsrs	r3, r3, #3
 508 001a FB73     		strb	r3, [r7, #15]
 672:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 509              		.loc 1 672 0
 510 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 511 001e 03F00703 		and	r3, r3, #7
 512 0022 0122     		movs	r2, #1
 513 0024 02FA03F3 		lsl	r3, r2, r3
 514 0028 BB73     		strb	r3, [r7, #14]
 673:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 674:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 515              		.loc 1 674 0
 516 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 517 002c 074A     		ldr	r2, .L20
 518 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 519 0030 BB7B     		ldrb	r3, [r7, #14]
 520 0032 1340     		ands	r3, r3, r2
 521 0034 DBB2     		uxtb	r3, r3
 522 0036 002B     		cmp	r3, #0
 523 0038 E7D0     		beq	.L17
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 22


 524 003a 00E0     		b	.L16
 525              	.L19:
 669:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 526              		.loc 1 669 0
 527 003c 00BF     		nop
 528              	.L16:
 675:Generated_Source\PSoC5/CapSense_CSD.c ****         
 676:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 529              		.loc 1 676 0
 530 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 677:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 531              		.loc 1 677 0
 532 0040 1846     		mov	r0, r3
 533 0042 1437     		adds	r7, r7, #20
 534              		.cfi_def_cfa_offset 4
 535 0044 BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 0046 80BC     		pop	{r7}
 539              		.cfi_restore 7
 540              		.cfi_def_cfa_offset 0
 541 0048 7047     		bx	lr
 542              	.L21:
 543 004a 00BF     		.align	2
 544              	.L20:
 545 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 546              		.cfi_endproc
 547              	.LFE4:
 548              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 549              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 550              		.align	2
 551              		.global	CapSense_CSD_SetScanSlotSettings
 552              		.thumb
 553              		.thumb_func
 554              		.type	CapSense_CSD_SetScanSlotSettings, %function
 555              	CapSense_CSD_SetScanSlotSettings:
 556              	.LFB5:
 678:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 679:Generated_Source\PSoC5/CapSense_CSD.c ****  
 680:Generated_Source\PSoC5/CapSense_CSD.c ****  
 681:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 682:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 683:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 684:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 685:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 686:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 687:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 688:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 689:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 690:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 691:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 692:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 693:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 695:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 696:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 697:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 23


 698:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 708:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 709:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 710:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 711:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 712:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 713:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 714:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 715:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 716:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 717:Generated_Source\PSoC5/CapSense_CSD.c ****         
 718:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 719:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 720:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 721:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 722:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 723:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 724:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 725:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 726:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 727:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 728:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 729:Generated_Source\PSoC5/CapSense_CSD.c ****             
 730:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 731:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 733:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 734:Generated_Source\PSoC5/CapSense_CSD.c ****         
 735:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 736:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 737:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 738:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 739:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 741:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 742:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 743:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 744:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 745:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 746:Generated_Source\PSoC5/CapSense_CSD.c ****             
 747:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 748:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         
 752:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 753:Generated_Source\PSoC5/CapSense_CSD.c ****         
 754:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 24


 755:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 756:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 757:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 758:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 759:Generated_Source\PSoC5/CapSense_CSD.c ****             
 760:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 761:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 762:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 763:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 764:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 765:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 766:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 767:Generated_Source\PSoC5/CapSense_CSD.c ****            
 768:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 769:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 770:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 771:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 772:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 773:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 774:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 777:Generated_Source\PSoC5/CapSense_CSD.c ****             
 778:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 779:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 780:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 781:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 782:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 783:Generated_Source\PSoC5/CapSense_CSD.c ****         
 784:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 785:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 786:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 787:Generated_Source\PSoC5/CapSense_CSD.c **** 
 788:Generated_Source\PSoC5/CapSense_CSD.c **** 
 789:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 790:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 791:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 792:Generated_Source\PSoC5/CapSense_CSD.c **** *
 793:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 794:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 795:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 796:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 797:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 798:Generated_Source\PSoC5/CapSense_CSD.c **** *
 799:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 800:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 801:Generated_Source\PSoC5/CapSense_CSD.c **** *
 802:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 803:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 804:Generated_Source\PSoC5/CapSense_CSD.c **** *
 805:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 806:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 807:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 808:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 809:Generated_Source\PSoC5/CapSense_CSD.c **** *
 810:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 811:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 25


 812:Generated_Source\PSoC5/CapSense_CSD.c **** {
 557              		.loc 1 812 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 16
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 84B0     		sub	sp, sp, #16
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 0346     		mov	r3, r0
 570 0008 FB71     		strb	r3, [r7, #7]
 813:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 814:Generated_Source\PSoC5/CapSense_CSD.c ****     
 815:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 816:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 817:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 571              		.loc 1 817 0
 572 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 573 000c 0B4A     		ldr	r2, .L23
 574 000e D35C     		ldrb	r3, [r2, r3]
 575 0010 FB73     		strb	r3, [r7, #15]
 818:Generated_Source\PSoC5/CapSense_CSD.c ****         
 819:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 820:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 821:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 576              		.loc 1 821 0
 577 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 578 0014 0A4A     		ldr	r2, .L23+4
 579 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 580 0018 1846     		mov	r0, r3
 581 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 822:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 823:Generated_Source\PSoC5/CapSense_CSD.c ****         
 824:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 825:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 826:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 827:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 828:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 829:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 582              		.loc 1 829 0
 583 001e 094A     		ldr	r2, .L23+8
 584 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 585 0022 0949     		ldr	r1, .L23+12
 586 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 587 0026 1370     		strb	r3, [r2]
 830:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 831:Generated_Source\PSoC5/CapSense_CSD.c **** 
 832:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 833:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 834:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 588              		.loc 1 834 0
 589 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 590 002a 084A     		ldr	r2, .L23+16
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 26


 591 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 592 002e 1846     		mov	r0, r3
 593 0030 FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 835:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 836:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 838:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 839:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 840:Generated_Source\PSoC5/CapSense_CSD.c **** 
 841:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 842:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 843:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 844:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 845:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             
 847:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 848:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 849:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 850:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             
 852:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 854:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 855:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 856:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 857:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 858:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 860:Generated_Source\PSoC5/CapSense_CSD.c ****         
 861:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 862:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 863:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 864:Generated_Source\PSoC5/CapSense_CSD.c ****         
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 866:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 867:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 868:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 869:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             
 871:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 872:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 873:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 874:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 875:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 876:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 877:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 879:Generated_Source\PSoC5/CapSense_CSD.c **** 
 880:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 881:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 882:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 883:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 884:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 885:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 886:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 887:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 888:Generated_Source\PSoC5/CapSense_CSD.c **** 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 27


 889:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 890:Generated_Source\PSoC5/CapSense_CSD.c **** }
 594              		.loc 1 890 0
 595 0034 00BF     		nop
 596 0036 1037     		adds	r7, r7, #16
 597              		.cfi_def_cfa_offset 8
 598 0038 BD46     		mov	sp, r7
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 003a 80BD     		pop	{r7, pc}
 602              	.L24:
 603              		.align	2
 604              	.L23:
 605 003c 00000000 		.word	CapSense_CSD_widgetNumber
 606 0040 00000000 		.word	CapSense_CSD_idacSettings
 607 0044 5A640040 		.word	1073767514
 608 0048 00000000 		.word	CapSense_CSD_widgetResolution
 609 004c 00000000 		.word	CapSense_CSD_analogSwitchDivider
 610              		.cfi_endproc
 611              	.LFE5:
 612              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 613              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 614              		.align	2
 615              		.global	CapSense_CSD_ScanSensor
 616              		.thumb
 617              		.thumb_func
 618              		.type	CapSense_CSD_ScanSensor, %function
 619              	CapSense_CSD_ScanSensor:
 620              	.LFB6:
 891:Generated_Source\PSoC5/CapSense_CSD.c **** 
 892:Generated_Source\PSoC5/CapSense_CSD.c **** 
 893:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 894:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 895:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 896:Generated_Source\PSoC5/CapSense_CSD.c **** *
 897:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 898:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 899:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 900:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 901:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 902:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 903:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 904:Generated_Source\PSoC5/CapSense_CSD.c **** *
 905:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 906:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 907:Generated_Source\PSoC5/CapSense_CSD.c **** *
 908:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 909:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 910:Generated_Source\PSoC5/CapSense_CSD.c **** *
 911:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 912:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 914:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 918:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 28


 919:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 920:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 921:Generated_Source\PSoC5/CapSense_CSD.c **** *
 922:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 923:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 924:Generated_Source\PSoC5/CapSense_CSD.c **** {
 621              		.loc 1 924 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 80B5     		push	{r7, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 7, -8
 628              		.cfi_offset 14, -4
 629 0002 82B0     		sub	sp, sp, #8
 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 633 0006 0346     		mov	r3, r0
 634 0008 FB71     		strb	r3, [r7, #7]
 925:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 926:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 635              		.loc 1 926 0
 636 000a 084B     		ldr	r3, .L26
 637 000c 0022     		movs	r2, #0
 638 000e 1A70     		strb	r2, [r3]
 927:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 639              		.loc 1 927 0
 640 0010 074A     		ldr	r2, .L26+4
 641 0012 FB79     		ldrb	r3, [r7, #7]
 642 0014 1370     		strb	r3, [r2]
 928:Generated_Source\PSoC5/CapSense_CSD.c ****     
 929:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 930:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 931:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 643              		.loc 1 931 0
 644 0016 054B     		ldr	r3, .L26
 645 0018 8122     		movs	r2, #129
 646 001a 1A70     		strb	r2, [r3]
 932:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 647              		.loc 1 932 0
 648 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 001e 1846     		mov	r0, r3
 650 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 933:Generated_Source\PSoC5/CapSense_CSD.c ****         
 934:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 935:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 936:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 937:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 938:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 939:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 940:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 941:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 942:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 943:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 944:Generated_Source\PSoC5/CapSense_CSD.c ****         
 945:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 29


 946:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 947:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 948:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 951:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 952:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         
 955:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 956:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 957:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:Generated_Source\PSoC5/CapSense_CSD.c ****         
 960:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 961:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 962:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 963:Generated_Source\PSoC5/CapSense_CSD.c ****         
 964:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 965:Generated_Source\PSoC5/CapSense_CSD.c **** }
 651              		.loc 1 965 0
 652 0024 00BF     		nop
 653 0026 0837     		adds	r7, r7, #8
 654              		.cfi_def_cfa_offset 8
 655 0028 BD46     		mov	sp, r7
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 002a 80BD     		pop	{r7, pc}
 659              	.L27:
 660              		.align	2
 661              	.L26:
 662 002c 00000000 		.word	CapSense_CSD_csv
 663 0030 00000000 		.word	CapSense_CSD_sensorIndex
 664              		.cfi_endproc
 665              	.LFE6:
 666              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 667              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 668              		.align	2
 669              		.global	CapSense_CSD_ScanEnabledWidgets
 670              		.thumb
 671              		.thumb_func
 672              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 673              	CapSense_CSD_ScanEnabledWidgets:
 674              	.LFB7:
 966:Generated_Source\PSoC5/CapSense_CSD.c **** 
 967:Generated_Source\PSoC5/CapSense_CSD.c **** 
 968:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 969:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 970:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 971:Generated_Source\PSoC5/CapSense_CSD.c **** *
 972:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 973:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 974:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 975:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 976:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 977:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 978:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 30


 979:Generated_Source\PSoC5/CapSense_CSD.c **** *
 980:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 981:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 982:Generated_Source\PSoC5/CapSense_CSD.c **** *
 983:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 984:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 985:Generated_Source\PSoC5/CapSense_CSD.c **** *
 986:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 987:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
 989:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
 991:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 993:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
 995:Generated_Source\PSoC5/CapSense_CSD.c **** *
 996:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 997:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 998:Generated_Source\PSoC5/CapSense_CSD.c **** *
 999:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1000:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1001:Generated_Source\PSoC5/CapSense_CSD.c **** {
 675              		.loc 1 1001 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1003:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 685              		.loc 1 1003 0
 686 0004 124B     		ldr	r3, .L31
 687 0006 0022     		movs	r2, #0
 688 0008 1A70     		strb	r2, [r3]
1004:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 689              		.loc 1 1004 0
 690 000a 124B     		ldr	r3, .L31+4
 691 000c FF22     		movs	r2, #255
 692 000e 1A70     		strb	r2, [r3]
1005:Generated_Source\PSoC5/CapSense_CSD.c ****     
1006:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1007:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1008:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 693              		.loc 1 1008 0
 694 0010 104B     		ldr	r3, .L31+4
 695 0012 1B78     		ldrb	r3, [r3]
 696 0014 DBB2     		uxtb	r3, r3
 697 0016 1846     		mov	r0, r3
 698 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 699 001c 0346     		mov	r3, r0
 700 001e 1A46     		mov	r2, r3
 701 0020 0C4B     		ldr	r3, .L31+4
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 31


 702 0022 1A70     		strb	r2, [r3]
1009:Generated_Source\PSoC5/CapSense_CSD.c **** 
1010:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1011:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 703              		.loc 1 1011 0
 704 0024 0B4B     		ldr	r3, .L31+4
 705 0026 1B78     		ldrb	r3, [r3]
 706 0028 DBB2     		uxtb	r3, r3
 707 002a 012B     		cmp	r3, #1
 708 002c 0DD8     		bhi	.L30
1012:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1013:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 709              		.loc 1 1013 0
 710 002e 084B     		ldr	r3, .L31
 711 0030 1B78     		ldrb	r3, [r3]
 712 0032 DBB2     		uxtb	r3, r3
 713 0034 43F00103 		orr	r3, r3, #1
 714 0038 DAB2     		uxtb	r2, r3
 715 003a 054B     		ldr	r3, .L31
 716 003c 1A70     		strb	r2, [r3]
1014:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 717              		.loc 1 1014 0
 718 003e 054B     		ldr	r3, .L31+4
 719 0040 1B78     		ldrb	r3, [r3]
 720 0042 DBB2     		uxtb	r3, r3
 721 0044 1846     		mov	r0, r3
 722 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 723              	.L30:
1015:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1016:Generated_Source\PSoC5/CapSense_CSD.c ****         
1017:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1018:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1019:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1020:Generated_Source\PSoC5/CapSense_CSD.c ****         
1021:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1022:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1023:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1024:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1025:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1026:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1027:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         
1029:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1030:Generated_Source\PSoC5/CapSense_CSD.c **** }
 724              		.loc 1 1030 0
 725 004a 00BF     		nop
 726 004c 80BD     		pop	{r7, pc}
 727              	.L32:
 728 004e 00BF     		.align	2
 729              	.L31:
 730 0050 00000000 		.word	CapSense_CSD_csv
 731 0054 00000000 		.word	CapSense_CSD_sensorIndex
 732              		.cfi_endproc
 733              	.LFE7:
 734              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 735              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 736              		.align	2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 32


 737              		.global	CapSense_CSD_IsBusy
 738              		.thumb
 739              		.thumb_func
 740              		.type	CapSense_CSD_IsBusy, %function
 741              	CapSense_CSD_IsBusy:
 742              	.LFB8:
1031:Generated_Source\PSoC5/CapSense_CSD.c **** 
1032:Generated_Source\PSoC5/CapSense_CSD.c **** 
1033:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1034:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1035:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1036:Generated_Source\PSoC5/CapSense_CSD.c **** *
1037:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1038:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1039:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1040:Generated_Source\PSoC5/CapSense_CSD.c **** *
1041:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1042:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1043:Generated_Source\PSoC5/CapSense_CSD.c **** *
1044:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1045:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1046:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1047:Generated_Source\PSoC5/CapSense_CSD.c **** *
1048:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1049:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1050:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1051:Generated_Source\PSoC5/CapSense_CSD.c **** *
1052:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1053:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1054:Generated_Source\PSoC5/CapSense_CSD.c **** {
 743              		.loc 1 1054 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 00AF     		add	r7, sp, #0
 752              		.cfi_def_cfa_register 7
1055:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 753              		.loc 1 1055 0
 754 0004 044B     		ldr	r3, .L35
 755 0006 1B78     		ldrb	r3, [r3]
 756 0008 DBB2     		uxtb	r3, r3
 757 000a 03F00103 		and	r3, r3, #1
 758 000e DBB2     		uxtb	r3, r3
1056:Generated_Source\PSoC5/CapSense_CSD.c **** }
 759              		.loc 1 1056 0
 760 0010 1846     		mov	r0, r3
 761 0012 BD46     		mov	sp, r7
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 0014 80BC     		pop	{r7}
 765              		.cfi_restore 7
 766              		.cfi_def_cfa_offset 0
 767 0016 7047     		bx	lr
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 33


 768              	.L36:
 769              		.align	2
 770              	.L35:
 771 0018 00000000 		.word	CapSense_CSD_csv
 772              		.cfi_endproc
 773              	.LFE8:
 774              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 775              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 776              		.align	2
 777              		.global	CapSense_CSD_ReadSensorRaw
 778              		.thumb
 779              		.thumb_func
 780              		.type	CapSense_CSD_ReadSensorRaw, %function
 781              	CapSense_CSD_ReadSensorRaw:
 782              	.LFB9:
1057:Generated_Source\PSoC5/CapSense_CSD.c **** 
1058:Generated_Source\PSoC5/CapSense_CSD.c **** 
1059:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1060:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1061:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *
1063:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1065:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1066:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *
1068:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1069:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1070:Generated_Source\PSoC5/CapSense_CSD.c **** *
1071:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1072:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1073:Generated_Source\PSoC5/CapSense_CSD.c **** *
1074:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1075:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1076:Generated_Source\PSoC5/CapSense_CSD.c **** *
1077:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1078:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1079:Generated_Source\PSoC5/CapSense_CSD.c **** {
 783              		.loc 1 1079 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 8
 786              		@ frame_needed = 1, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788 0000 80B4     		push	{r7}
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 7, -4
 791 0002 83B0     		sub	sp, sp, #12
 792              		.cfi_def_cfa_offset 16
 793 0004 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 795 0006 0346     		mov	r3, r0
 796 0008 FB71     		strb	r3, [r7, #7]
1080:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 797              		.loc 1 1080 0
 798 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 799 000c 034A     		ldr	r2, .L39
 800 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 34


1081:Generated_Source\PSoC5/CapSense_CSD.c **** }
 801              		.loc 1 1081 0
 802 0012 1846     		mov	r0, r3
 803 0014 0C37     		adds	r7, r7, #12
 804              		.cfi_def_cfa_offset 4
 805 0016 BD46     		mov	sp, r7
 806              		.cfi_def_cfa_register 13
 807              		@ sp needed
 808 0018 80BC     		pop	{r7}
 809              		.cfi_restore 7
 810              		.cfi_def_cfa_offset 0
 811 001a 7047     		bx	lr
 812              	.L40:
 813              		.align	2
 814              	.L39:
 815 001c 00000000 		.word	CapSense_CSD_sensorRaw
 816              		.cfi_endproc
 817              	.LFE9:
 818              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 819              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 820              		.align	2
 821              		.global	CapSense_CSD_ClearSensors
 822              		.thumb
 823              		.thumb_func
 824              		.type	CapSense_CSD_ClearSensors, %function
 825              	CapSense_CSD_ClearSensors:
 826              	.LFB10:
1082:Generated_Source\PSoC5/CapSense_CSD.c **** 
1083:Generated_Source\PSoC5/CapSense_CSD.c **** 
1084:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1085:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1086:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1087:Generated_Source\PSoC5/CapSense_CSD.c **** *
1088:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1089:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1090:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1091:Generated_Source\PSoC5/CapSense_CSD.c **** *
1092:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1094:Generated_Source\PSoC5/CapSense_CSD.c **** *
1095:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1096:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1097:Generated_Source\PSoC5/CapSense_CSD.c **** *
1098:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1099:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1100:Generated_Source\PSoC5/CapSense_CSD.c **** {
 827              		.loc 1 1100 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 8
 830              		@ frame_needed = 1, uses_anonymous_args = 0
 831 0000 80B5     		push	{r7, lr}
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 82B0     		sub	sp, sp, #8
 836              		.cfi_def_cfa_offset 16
 837 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 35


 838              		.cfi_def_cfa_register 7
1101:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1102:Generated_Source\PSoC5/CapSense_CSD.c ****    
1103:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 839              		.loc 1 1103 0
 840 0006 0023     		movs	r3, #0
 841 0008 FB71     		strb	r3, [r7, #7]
 842 000a 06E0     		b	.L42
 843              	.L43:
1104:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1105:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 844              		.loc 1 1105 0 discriminator 3
 845 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 846 000e 1846     		mov	r0, r3
 847 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1103:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 848              		.loc 1 1103 0 discriminator 3
 849 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 850 0016 0133     		adds	r3, r3, #1
 851 0018 FB71     		strb	r3, [r7, #7]
 852              	.L42:
1103:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 853              		.loc 1 1103 0 is_stmt 0 discriminator 1
 854 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 855 001c 012B     		cmp	r3, #1
 856 001e F5D9     		bls	.L43
1106:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1107:Generated_Source\PSoC5/CapSense_CSD.c **** }
 857              		.loc 1 1107 0 is_stmt 1
 858 0020 00BF     		nop
 859 0022 0837     		adds	r7, r7, #8
 860              		.cfi_def_cfa_offset 8
 861 0024 BD46     		mov	sp, r7
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 0026 80BD     		pop	{r7, pc}
 865              		.cfi_endproc
 866              	.LFE10:
 867              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 868              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 869              		.align	2
 870              		.global	CapSense_CSD_EnableSensor
 871              		.thumb
 872              		.thumb_func
 873              		.type	CapSense_CSD_EnableSensor, %function
 874              	CapSense_CSD_EnableSensor:
 875              	.LFB11:
1108:Generated_Source\PSoC5/CapSense_CSD.c **** 
1109:Generated_Source\PSoC5/CapSense_CSD.c **** 
1110:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1111:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1112:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1113:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1114:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1115:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1116:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1117:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 36


1118:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1119:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1122:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1124:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1125:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1126:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1127:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1134:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1135:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1136:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1137:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1138:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1139:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1140:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1141:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1142:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1143:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1144:Generated_Source\PSoC5/CapSense_CSD.c ****         
1145:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1146:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1147:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1148:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1149:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1150:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1151:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1152:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1153:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1154:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1155:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1156:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1157:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1158:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1159:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1160:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1161:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1162:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1163:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1164:Generated_Source\PSoC5/CapSense_CSD.c ****     
1165:Generated_Source\PSoC5/CapSense_CSD.c ****     
1166:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1167:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1168:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1169:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1170:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1171:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1172:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1173:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1174:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 37


1175:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1176:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1177:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1178:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1179:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1188:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1189:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1190:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1192:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1193:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1194:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1195:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1196:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1197:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1198:Generated_Source\PSoC5/CapSense_CSD.c ****         
1199:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1200:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1201:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1202:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1203:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1204:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1205:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1206:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1207:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1208:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1209:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1210:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1211:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1212:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1213:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1214:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1215:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1216:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1217:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1218:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1219:Generated_Source\PSoC5/CapSense_CSD.c **** 
1220:Generated_Source\PSoC5/CapSense_CSD.c **** 
1221:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1222:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1223:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1224:Generated_Source\PSoC5/CapSense_CSD.c **** *
1225:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1226:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1227:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1228:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1229:Generated_Source\PSoC5/CapSense_CSD.c **** *
1230:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1231:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 38


1232:Generated_Source\PSoC5/CapSense_CSD.c **** *
1233:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1234:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1235:Generated_Source\PSoC5/CapSense_CSD.c **** *
1236:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1237:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1238:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1239:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1240:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1242:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1244:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1245:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1246:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1247:Generated_Source\PSoC5/CapSense_CSD.c **** *
1248:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1249:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1250:Generated_Source\PSoC5/CapSense_CSD.c **** {
 876              		.loc 1 1250 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 16
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 80B5     		push	{r7, lr}
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 7, -8
 883              		.cfi_offset 14, -4
 884 0002 84B0     		sub	sp, sp, #16
 885              		.cfi_def_cfa_offset 24
 886 0004 00AF     		add	r7, sp, #0
 887              		.cfi_def_cfa_register 7
 888 0006 0346     		mov	r3, r0
 889 0008 FB71     		strb	r3, [r7, #7]
1251:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 890              		.loc 1 1251 0
 891 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 892 000c 134A     		ldr	r2, .L46
 893 000e D35C     		ldrb	r3, [r2, r3]
 894 0010 FB73     		strb	r3, [r7, #15]
1252:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 895              		.loc 1 1252 0
 896 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 897 0014 124A     		ldr	r2, .L46+4
 898 0016 D35C     		ldrb	r3, [r2, r3]
 899 0018 BB73     		strb	r3, [r7, #14]
1253:Generated_Source\PSoC5/CapSense_CSD.c ****     
1254:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1255:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1256:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1257:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1258:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1259:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1260:Generated_Source\PSoC5/CapSense_CSD.c ****     
1261:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1262:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 900              		.loc 1 1262 0
 901 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 39


 902 001c 114A     		ldr	r2, .L46+8
 903 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 904 0022 0922     		movs	r2, #9
 905 0024 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/CapSense_CSD.c ****     
1264:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1265:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 906              		.loc 1 1265 0
 907 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 908 0028 0F2B     		cmp	r3, #15
 909 002a 01D1     		bne	.L45
1266:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1267:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 910              		.loc 1 1267 0
 911 002c 0723     		movs	r3, #7
 912 002e FB73     		strb	r3, [r7, #15]
 913              	.L45:
1268:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1269:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 914              		.loc 1 1269 0
 915 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 916 0032 0D4A     		ldr	r2, .L46+12
 917 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 918 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 919 003a 0B49     		ldr	r1, .L46+12
 920 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 921 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 922 0042 BA7B     		ldrb	r2, [r7, #14]
 923 0044 0A43     		orrs	r2, r2, r1
 924 0046 D2B2     		uxtb	r2, r2
 925 0048 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1272:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1273:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1274:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1275:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 926              		.loc 1 1276 0
 927 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 928 004c 1846     		mov	r0, r3
 929 004e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1277:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1278:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1279:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1280:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1281:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1282:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1283:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1284:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1285:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1286:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1287:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1288:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1289:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1290:Generated_Source\PSoC5/CapSense_CSD.c ****             
1291:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 40


1292:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1293:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1294:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1295:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1296:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1297:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1298:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1299:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1300:Generated_Source\PSoC5/CapSense_CSD.c ****             
1301:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1302:Generated_Source\PSoC5/CapSense_CSD.c ****         
1303:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1304:Generated_Source\PSoC5/CapSense_CSD.c **** }
 930              		.loc 1 1304 0
 931 0052 00BF     		nop
 932 0054 1037     		adds	r7, r7, #16
 933              		.cfi_def_cfa_offset 8
 934 0056 BD46     		mov	sp, r7
 935              		.cfi_def_cfa_register 13
 936              		@ sp needed
 937 0058 80BD     		pop	{r7, pc}
 938              	.L47:
 939 005a 00BF     		.align	2
 940              	.L46:
 941 005c 00000000 		.word	CapSense_CSD_portTable
 942 0060 00000000 		.word	CapSense_CSD_maskTable
 943 0064 00000000 		.word	CapSense_CSD_pcTable
 944 0068 00000000 		.word	CapSense_CSD_csTable
 945              		.cfi_endproc
 946              	.LFE11:
 947              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 948              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 949              		.align	2
 950              		.global	CapSense_CSD_DisableSensor
 951              		.thumb
 952              		.thumb_func
 953              		.type	CapSense_CSD_DisableSensor, %function
 954              	CapSense_CSD_DisableSensor:
 955              	.LFB12:
1305:Generated_Source\PSoC5/CapSense_CSD.c **** 
1306:Generated_Source\PSoC5/CapSense_CSD.c **** 
1307:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1308:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1309:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1310:Generated_Source\PSoC5/CapSense_CSD.c **** *
1311:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1312:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1313:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1314:Generated_Source\PSoC5/CapSense_CSD.c **** *
1315:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1316:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1317:Generated_Source\PSoC5/CapSense_CSD.c **** *
1318:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1319:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1320:Generated_Source\PSoC5/CapSense_CSD.c **** *
1321:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1322:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 41


1323:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1324:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1325:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1326:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1328:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1329:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1330:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1331:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1332:Generated_Source\PSoC5/CapSense_CSD.c **** *
1333:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1334:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1335:Generated_Source\PSoC5/CapSense_CSD.c **** {
 956              		.loc 1 1335 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 16
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 84B0     		sub	sp, sp, #16
 965              		.cfi_def_cfa_offset 24
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 0346     		mov	r3, r0
 969 0008 FB71     		strb	r3, [r7, #7]
1336:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 970              		.loc 1 1336 0
 971 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 972 000c 144A     		ldr	r2, .L50
 973 000e D35C     		ldrb	r3, [r2, r3]
 974 0010 FB73     		strb	r3, [r7, #15]
1337:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 975              		.loc 1 1337 0
 976 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 977 0014 134A     		ldr	r2, .L50+4
 978 0016 D35C     		ldrb	r3, [r2, r3]
 979 0018 BB73     		strb	r3, [r7, #14]
1338:Generated_Source\PSoC5/CapSense_CSD.c ****     
1339:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1340:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1341:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1342:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1343:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1344:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1345:Generated_Source\PSoC5/CapSense_CSD.c ****     
1346:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1347:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1348:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1349:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1350:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1351:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 980              		.loc 1 1351 0
 981 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 982 001c 1846     		mov	r0, r3
 983 001e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 42


1352:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1353:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1354:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1355:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1356:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1357:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1358:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1359:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1361:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1362:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1363:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1364:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1365:Generated_Source\PSoC5/CapSense_CSD.c ****             
1366:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1367:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1368:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1369:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1370:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1371:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1372:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1373:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1374:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1375:Generated_Source\PSoC5/CapSense_CSD.c ****             
1376:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1377:Generated_Source\PSoC5/CapSense_CSD.c ****         
1378:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1379:Generated_Source\PSoC5/CapSense_CSD.c ****     
1380:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1381:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 984              		.loc 1 1381 0
 985 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 986 0024 0F2B     		cmp	r3, #15
 987 0026 01D1     		bne	.L49
1382:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1383:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 988              		.loc 1 1383 0
 989 0028 0723     		movs	r3, #7
 990 002a FB73     		strb	r3, [r7, #15]
 991              	.L49:
1384:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1385:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 992              		.loc 1 1385 0
 993 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 994 002e 0E4A     		ldr	r2, .L50+8
 995 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 996 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 997 0036 0C49     		ldr	r1, .L50+8
 998 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 999 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1000 003e BA7B     		ldrb	r2, [r7, #14]
 1001 0040 D243     		mvns	r2, r2
 1002 0042 D2B2     		uxtb	r2, r2
 1003 0044 0A40     		ands	r2, r2, r1
 1004 0046 D2B2     		uxtb	r2, r2
 1005 0048 1A70     		strb	r2, [r3]
1386:Generated_Source\PSoC5/CapSense_CSD.c ****     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 43


1387:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1388:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1389:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
1390:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1391:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 1006              		.loc 1 1391 0
 1007 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1008 004c 074A     		ldr	r2, .L50+12
 1009 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1010 0052 0922     		movs	r2, #9
 1011 0054 1A70     		strb	r2, [r3]
1392:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1393:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1394:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1395:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1012              		.loc 1 1395 0
 1013 0056 00BF     		nop
 1014 0058 1037     		adds	r7, r7, #16
 1015              		.cfi_def_cfa_offset 8
 1016 005a BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 005c 80BD     		pop	{r7, pc}
 1020              	.L51:
 1021 005e 00BF     		.align	2
 1022              	.L50:
 1023 0060 00000000 		.word	CapSense_CSD_portTable
 1024 0064 00000000 		.word	CapSense_CSD_maskTable
 1025 0068 00000000 		.word	CapSense_CSD_csTable
 1026 006c 00000000 		.word	CapSense_CSD_pcTable
 1027              		.cfi_endproc
 1028              	.LFE12:
 1029              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1030              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1031              		.align	2
 1032              		.global	CapSense_CSD_PreScan
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	CapSense_CSD_PreScan, %function
 1036              	CapSense_CSD_PreScan:
 1037              	.LFB13:
1396:Generated_Source\PSoC5/CapSense_CSD.c **** 
1397:Generated_Source\PSoC5/CapSense_CSD.c **** 
1398:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1399:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1400:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1401:Generated_Source\PSoC5/CapSense_CSD.c **** *
1402:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1403:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1404:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1405:Generated_Source\PSoC5/CapSense_CSD.c **** *
1406:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1407:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1408:Generated_Source\PSoC5/CapSense_CSD.c **** *
1409:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1410:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1411:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 44


1412:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1413:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1414:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1415:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1416:Generated_Source\PSoC5/CapSense_CSD.c **** *
1417:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1418:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1419:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1038              		.loc 1 1419 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042 0000 80B5     		push	{r7, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 82B0     		sub	sp, sp, #8
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 1050 0006 0346     		mov	r3, r0
 1051 0008 FB71     		strb	r3, [r7, #7]
1420:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1421:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1052              		.loc 1 1421 0
 1053 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1054 000c 1846     		mov	r0, r3
 1055 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1422:Generated_Source\PSoC5/CapSense_CSD.c ****     
1423:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1424:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1425:Generated_Source\PSoC5/CapSense_CSD.c **** 
1426:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1427:Generated_Source\PSoC5/CapSense_CSD.c ****     
1428:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1429:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1430:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1431:Generated_Source\PSoC5/CapSense_CSD.c **** 
1432:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1433:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1056              		.loc 1 1433 0
 1057 0012 104A     		ldr	r2, .L53
 1058 0014 0F4B     		ldr	r3, .L53
 1059 0016 1B78     		ldrb	r3, [r3]
 1060 0018 DBB2     		uxtb	r3, r3
 1061 001a 43F00103 		orr	r3, r3, #1
 1062 001e DBB2     		uxtb	r3, r3
 1063 0020 1370     		strb	r3, [r2]
1434:Generated_Source\PSoC5/CapSense_CSD.c ****         
1435:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1436:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1437:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1438:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1439:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1440:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1441:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1064              		.loc 1 1441 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 45


 1065 0022 0D4A     		ldr	r2, .L53+4
 1066 0024 0C4B     		ldr	r3, .L53+4
 1067 0026 1B78     		ldrb	r3, [r3]
 1068 0028 DBB2     		uxtb	r3, r3
 1069 002a 23F00103 		bic	r3, r3, #1
 1070 002e DBB2     		uxtb	r3, r3
 1071 0030 1370     		strb	r3, [r2]
1442:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1443:Generated_Source\PSoC5/CapSense_CSD.c **** 
1444:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1445:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1072              		.loc 1 1445 0
 1073 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1074 0034 1846     		mov	r0, r3
 1075 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1446:Generated_Source\PSoC5/CapSense_CSD.c ****             
1447:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1448:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1449:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1450:Generated_Source\PSoC5/CapSense_CSD.c ****             
1451:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1452:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1453:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1456:Generated_Source\PSoC5/CapSense_CSD.c ****             
1457:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1458:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1460:Generated_Source\PSoC5/CapSense_CSD.c ****             
1461:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1463:Generated_Source\PSoC5/CapSense_CSD.c ****              
1464:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1465:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1466:Generated_Source\PSoC5/CapSense_CSD.c ****         
1467:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1468:Generated_Source\PSoC5/CapSense_CSD.c ****         
1469:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1470:Generated_Source\PSoC5/CapSense_CSD.c **** 
1471:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1472:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1473:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1474:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1475:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1476:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1477:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1478:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1479:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1480:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1481:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1482:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1483:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1484:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1485:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1486:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1487:Generated_Source\PSoC5/CapSense_CSD.c ****                 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 46


1488:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1489:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1490:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1494:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1498:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1499:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1500:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1501:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1502:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1503:Generated_Source\PSoC5/CapSense_CSD.c ****             
1504:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1505:Generated_Source\PSoC5/CapSense_CSD.c ****             
1506:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1507:Generated_Source\PSoC5/CapSense_CSD.c ****         
1508:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1509:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1510:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1511:Generated_Source\PSoC5/CapSense_CSD.c ****             
1512:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1518:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1520:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1521:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1522:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1523:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1524:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1525:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1526:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1527:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1528:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1529:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1533:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1537:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1538:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1539:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1541:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1542:Generated_Source\PSoC5/CapSense_CSD.c ****             
1543:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1544:Generated_Source\PSoC5/CapSense_CSD.c ****         }
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 47


1545:Generated_Source\PSoC5/CapSense_CSD.c ****     
1546:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1547:Generated_Source\PSoC5/CapSense_CSD.c ****     
1548:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1549:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1076              		.loc 1 1549 0
 1077 003a 064A     		ldr	r2, .L53
 1078 003c 054B     		ldr	r3, .L53
 1079 003e 1B78     		ldrb	r3, [r3]
 1080 0040 DBB2     		uxtb	r3, r3
 1081 0042 43F00203 		orr	r3, r3, #2
 1082 0046 DBB2     		uxtb	r3, r3
 1083 0048 1370     		strb	r3, [r2]
1550:Generated_Source\PSoC5/CapSense_CSD.c ****     
1551:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1552:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1553:Generated_Source\PSoC5/CapSense_CSD.c **** 
1554:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1555:Generated_Source\PSoC5/CapSense_CSD.c **** 
1556:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1557:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1558:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1559:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1084              		.loc 1 1559 0
 1085 004a 00BF     		nop
 1086 004c 0837     		adds	r7, r7, #8
 1087              		.cfi_def_cfa_offset 8
 1088 004e BD46     		mov	sp, r7
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0050 80BD     		pop	{r7, pc}
 1092              	.L54:
 1093 0052 00BF     		.align	2
 1094              	.L53:
 1095 0054 78640040 		.word	1073767544
 1096 0058 70580040 		.word	1073764464
 1097              		.cfi_endproc
 1098              	.LFE13:
 1099              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1100              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1101              		.align	2
 1102              		.global	CapSense_CSD_PostScan
 1103              		.thumb
 1104              		.thumb_func
 1105              		.type	CapSense_CSD_PostScan, %function
 1106              	CapSense_CSD_PostScan:
 1107              	.LFB14:
1560:Generated_Source\PSoC5/CapSense_CSD.c **** 
1561:Generated_Source\PSoC5/CapSense_CSD.c **** 
1562:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1567:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 48


1570:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1572:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1574:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1576:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1577:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1578:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1579:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1583:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1584:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1585:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1586:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1587:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1108              		.loc 1 1587 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 8
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112 0000 80B5     		push	{r7, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 82B0     		sub	sp, sp, #8
 1117              		.cfi_def_cfa_offset 16
 1118 0004 00AF     		add	r7, sp, #0
 1119              		.cfi_def_cfa_register 7
 1120 0006 0346     		mov	r3, r0
 1121 0008 FB71     		strb	r3, [r7, #7]
1588:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1589:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1122              		.loc 1 1589 0
 1123 000a 1E4A     		ldr	r2, .L56
 1124 000c 1D4B     		ldr	r3, .L56
 1125 000e 1B78     		ldrb	r3, [r3]
 1126 0010 DBB2     		uxtb	r3, r3
 1127 0012 23F00303 		bic	r3, r3, #3
 1128 0016 DBB2     		uxtb	r3, r3
 1129 0018 1370     		strb	r3, [r2]
1590:Generated_Source\PSoC5/CapSense_CSD.c ****         
1591:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1592:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1593:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1594:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1595:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1596:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1130              		.loc 1 1596 0
 1131 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 001c 1A4A     		ldr	r2, .L56+4
 1133 001e 1278     		ldrb	r2, [r2]
 1134 0020 D2B2     		uxtb	r2, r2
 1135 0022 92B2     		uxth	r2, r2
 1136 0024 1202     		lsls	r2, r2, #8
 1137 0026 91B2     		uxth	r1, r2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 49


 1138 0028 184A     		ldr	r2, .L56+8
 1139 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1597:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1140              		.loc 1 1597 0
 1141 002e 184B     		ldr	r3, .L56+12
 1142 0030 1B78     		ldrb	r3, [r3]
 1143 0032 DBB2     		uxtb	r3, r3
 1144 0034 9AB2     		uxth	r2, r3
 1145 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1146 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1147 003a 1448     		ldr	r0, .L56+8
 1148 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1149 0040 0A43     		orrs	r2, r2, r1
 1150 0042 91B2     		uxth	r1, r2
 1151 0044 114A     		ldr	r2, .L56+8
 1152 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1598:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1153              		.loc 1 1598 0
 1154 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1599:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1155              		.loc 1 1599 0
 1156 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1157 004e 0F49     		ldr	r1, .L56+8
 1158 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1598:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1159              		.loc 1 1598 0
 1160 0054 D243     		mvns	r2, r2
 1161 0056 91B2     		uxth	r1, r2
 1162 0058 0C4A     		ldr	r2, .L56+8
 1163 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1600:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1601:Generated_Source\PSoC5/CapSense_CSD.c ****         
1602:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1603:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1164              		.loc 1 1603 0
 1165 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1166 0060 1846     		mov	r0, r3
 1167 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1604:Generated_Source\PSoC5/CapSense_CSD.c ****         
1605:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1606:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1607:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1168              		.loc 1 1607 0
 1169 0066 0020     		movs	r0, #0
 1170 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1608:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1609:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1610:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1611:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1613:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1615:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1616:Generated_Source\PSoC5/CapSense_CSD.c ****             
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1619:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 50


1620:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1621:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1171              		.loc 1 1621 0
 1172 006c 094A     		ldr	r2, .L56+16
 1173 006e 094B     		ldr	r3, .L56+16
 1174 0070 1B78     		ldrb	r3, [r3]
 1175 0072 DBB2     		uxtb	r3, r3
 1176 0074 43F00103 		orr	r3, r3, #1
 1177 0078 DBB2     		uxtb	r3, r3
 1178 007a 1370     		strb	r3, [r2]
1622:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1623:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1179              		.loc 1 1623 0
 1180 007c 00BF     		nop
 1181 007e 0837     		adds	r7, r7, #8
 1182              		.cfi_def_cfa_offset 8
 1183 0080 BD46     		mov	sp, r7
 1184              		.cfi_def_cfa_register 13
 1185              		@ sp needed
 1186 0082 80BD     		pop	{r7, pc}
 1187              	.L57:
 1188              		.align	2
 1189              	.L56:
 1190 0084 78640040 		.word	1073767544
 1191 0088 1B640040 		.word	1073767451
 1192 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1193 0090 0B640040 		.word	1073767435
 1194 0094 70580040 		.word	1073764464
 1195              		.cfi_endproc
 1196              	.LFE14:
 1197              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1198              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1199              		.align	2
 1200              		.global	CapSense_CSD_SetPrescaler
 1201              		.thumb
 1202              		.thumb_func
 1203              		.type	CapSense_CSD_SetPrescaler, %function
 1204              	CapSense_CSD_SetPrescaler:
 1205              	.LFB15:
1624:Generated_Source\PSoC5/CapSense_CSD.c ****     
1625:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1626:Generated_Source\PSoC5/CapSense_CSD.c **** 
1627:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1628:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1629:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1630:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1631:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1632:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1633:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1634:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1635:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1636:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1637:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1638:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1639:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 51


1642:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1643:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1647:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1648:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1649:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1650:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1651:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1652:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1653:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1654:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1655:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1656:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1657:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1658:Generated_Source\PSoC5/CapSense_CSD.c ****         
1659:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1660:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1661:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1662:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1663:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1664:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1665:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1666:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1667:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1668:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1669:Generated_Source\PSoC5/CapSense_CSD.c ****         
1670:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1671:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1672:Generated_Source\PSoC5/CapSense_CSD.c ****         
1673:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1674:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1675:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1676:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1677:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1678:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1679:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1681:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1683:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1684:Generated_Source\PSoC5/CapSense_CSD.c ****         
1685:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1686:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1687:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1688:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1689:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1690:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1691:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1692:Generated_Source\PSoC5/CapSense_CSD.c ****     
1693:Generated_Source\PSoC5/CapSense_CSD.c ****     
1694:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1695:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1696:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1697:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1698:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 52


1699:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1700:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1701:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1702:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1703:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1704:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1705:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1706:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1707:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1714:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1715:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1716:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1717:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1718:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1719:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1720:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1721:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1722:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1723:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1724:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1725:Generated_Source\PSoC5/CapSense_CSD.c ****         
1726:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1727:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1728:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1729:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1730:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1731:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1732:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1733:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1734:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1735:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1736:Generated_Source\PSoC5/CapSense_CSD.c ****         
1737:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1738:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1739:Generated_Source\PSoC5/CapSense_CSD.c ****         
1740:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1741:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1742:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1743:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1744:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1745:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1746:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1748:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1750:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1751:Generated_Source\PSoC5/CapSense_CSD.c **** 
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1753:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1754:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1755:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 53


1756:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1757:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1758:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1759:Generated_Source\PSoC5/CapSense_CSD.c ****     
1760:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1761:Generated_Source\PSoC5/CapSense_CSD.c **** 
1762:Generated_Source\PSoC5/CapSense_CSD.c **** 
1763:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1764:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1765:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1766:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1767:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1768:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1769:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1770:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1771:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1772:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1773:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1774:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1777:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1778:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1779:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1780:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1781:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1782:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1783:Generated_Source\PSoC5/CapSense_CSD.c ****         
1784:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1785:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1786:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1787:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1788:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1789:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1799:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1800:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1801:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1802:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1803:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1804:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1805:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1806:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 54


1813:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1819:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1820:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1821:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1822:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1823:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1824:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1825:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1826:Generated_Source\PSoC5/CapSense_CSD.c ****             
1827:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1828:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1829:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1830:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1831:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1832:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1833:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1834:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1835:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1836:Generated_Source\PSoC5/CapSense_CSD.c ****     
1837:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1838:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1839:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1840:Generated_Source\PSoC5/CapSense_CSD.c **** 
1841:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1842:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1843:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1844:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1845:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1846:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1847:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1848:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1849:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1850:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1851:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1852:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1853:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1854:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1855:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1856:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1857:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1206              		.loc 1 1857 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              		.cfi_def_cfa_offset 4
 1213              		.cfi_offset 7, -4
 1214 0002 83B0     		sub	sp, sp, #12
 1215              		.cfi_def_cfa_offset 16
 1216 0004 00AF     		add	r7, sp, #0
 1217              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 55


 1218 0006 0346     		mov	r3, r0
 1219 0008 FB71     		strb	r3, [r7, #7]
1858:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1859:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1860:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1220              		.loc 1 1860 0
 1221 000a 064A     		ldr	r2, .L59
 1222 000c FB79     		ldrb	r3, [r7, #7]
 1223 000e 1370     		strb	r3, [r2]
1861:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1224              		.loc 1 1861 0
 1225 0010 054A     		ldr	r2, .L59+4
 1226 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1227 0014 5B08     		lsrs	r3, r3, #1
 1228 0016 DBB2     		uxtb	r3, r3
 1229 0018 1370     		strb	r3, [r2]
1862:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1863:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1864:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1865:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1866:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1867:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1230              		.loc 1 1868 0
 1231 001a 00BF     		nop
 1232 001c 0C37     		adds	r7, r7, #12
 1233              		.cfi_def_cfa_offset 4
 1234 001e BD46     		mov	sp, r7
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 0020 80BC     		pop	{r7}
 1238              		.cfi_restore 7
 1239              		.cfi_def_cfa_offset 0
 1240 0022 7047     		bx	lr
 1241              	.L60:
 1242              		.align	2
 1243              	.L59:
 1244 0024 29640040 		.word	1073767465
 1245 0028 39640040 		.word	1073767481
 1246              		.cfi_endproc
 1247              	.LFE15:
 1248              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1249              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_CSD_GetPrescaler
 1252              		.thumb
 1253              		.thumb_func
 1254              		.type	CapSense_CSD_GetPrescaler, %function
 1255              	CapSense_CSD_GetPrescaler:
 1256              	.LFB16:
1869:Generated_Source\PSoC5/CapSense_CSD.c **** 
1870:Generated_Source\PSoC5/CapSense_CSD.c **** 
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1875:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 56


1876:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1877:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1878:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1879:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1880:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1881:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1882:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1883:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1884:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1885:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1886:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1257              		.loc 1 1886 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 8
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0000 80B4     		push	{r7}
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 7, -4
 1265 0002 83B0     		sub	sp, sp, #12
 1266              		.cfi_def_cfa_offset 16
 1267 0004 00AF     		add	r7, sp, #0
 1268              		.cfi_def_cfa_register 7
1887:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1269              		.loc 1 1887 0
 1270 0006 0023     		movs	r3, #0
 1271 0008 FB71     		strb	r3, [r7, #7]
1888:Generated_Source\PSoC5/CapSense_CSD.c **** 
1889:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1890:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1891:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1272              		.loc 1 1891 0
 1273 000a 044B     		ldr	r3, .L63
 1274 000c 1B78     		ldrb	r3, [r3]
 1275 000e FB71     		strb	r3, [r7, #7]
1892:Generated_Source\PSoC5/CapSense_CSD.c ****             
1893:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1894:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1895:Generated_Source\PSoC5/CapSense_CSD.c ****             
1896:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1897:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1898:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1899:Generated_Source\PSoC5/CapSense_CSD.c ****         
1900:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1276              		.loc 1 1900 0
 1277 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1901:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1278              		.loc 1 1901 0
 1279 0012 1846     		mov	r0, r3
 1280 0014 0C37     		adds	r7, r7, #12
 1281              		.cfi_def_cfa_offset 4
 1282 0016 BD46     		mov	sp, r7
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 0018 80BC     		pop	{r7}
 1286              		.cfi_restore 7
 1287              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 57


 1288 001a 7047     		bx	lr
 1289              	.L64:
 1290              		.align	2
 1291              	.L63:
 1292 001c 29640040 		.word	1073767465
 1293              		.cfi_endproc
 1294              	.LFE16:
 1295              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1296              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1297              		.align	2
 1298              		.global	CapSense_CSD_SetScanSpeed
 1299              		.thumb
 1300              		.thumb_func
 1301              		.type	CapSense_CSD_SetScanSpeed, %function
 1302              	CapSense_CSD_SetScanSpeed:
 1303              	.LFB17:
1902:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1903:Generated_Source\PSoC5/CapSense_CSD.c **** 
1904:Generated_Source\PSoC5/CapSense_CSD.c **** 
1905:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1906:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1907:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1908:Generated_Source\PSoC5/CapSense_CSD.c **** *
1909:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1910:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1911:Generated_Source\PSoC5/CapSense_CSD.c **** *
1912:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1913:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1914:Generated_Source\PSoC5/CapSense_CSD.c **** *
1915:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1916:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1917:Generated_Source\PSoC5/CapSense_CSD.c **** *
1918:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1919:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1920:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1304              		.loc 1 1920 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 8
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309 0000 80B4     		push	{r7}
 1310              		.cfi_def_cfa_offset 4
 1311              		.cfi_offset 7, -4
 1312 0002 83B0     		sub	sp, sp, #12
 1313              		.cfi_def_cfa_offset 16
 1314 0004 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
 1316 0006 0346     		mov	r3, r0
 1317 0008 FB71     		strb	r3, [r7, #7]
1921:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1318              		.loc 1 1921 0
 1319 000a 044A     		ldr	r2, .L66
 1320 000c FB79     		ldrb	r3, [r7, #7]
 1321 000e 1370     		strb	r3, [r2]
1922:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1322              		.loc 1 1922 0
 1323 0010 00BF     		nop
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 58


 1324 0012 0C37     		adds	r7, r7, #12
 1325              		.cfi_def_cfa_offset 4
 1326 0014 BD46     		mov	sp, r7
 1327              		.cfi_def_cfa_register 13
 1328              		@ sp needed
 1329 0016 80BC     		pop	{r7}
 1330              		.cfi_restore 7
 1331              		.cfi_def_cfa_offset 0
 1332 0018 7047     		bx	lr
 1333              	.L67:
 1334 001a 00BF     		.align	2
 1335              	.L66:
 1336 001c 8B640040 		.word	1073767563
 1337              		.cfi_endproc
 1338              	.LFE17:
 1339              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1340              		.text
 1341              	.Letext0:
 1342              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1343              		.section	.debug_info,"",%progbits
 1344              	.Ldebug_info0:
 1345 0000 08050000 		.4byte	0x508
 1346 0004 0400     		.2byte	0x4
 1347 0006 00000000 		.4byte	.Ldebug_abbrev0
 1348 000a 04       		.byte	0x4
 1349 000b 01       		.uleb128 0x1
 1350 000c 10000000 		.4byte	.LASF59
 1351 0010 0C       		.byte	0xc
 1352 0011 1B020000 		.4byte	.LASF60
 1353 0015 E9030000 		.4byte	.LASF61
 1354 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1355 001d 00000000 		.4byte	0
 1356 0021 00000000 		.4byte	.Ldebug_line0
 1357 0025 02       		.uleb128 0x2
 1358 0026 01       		.byte	0x1
 1359 0027 06       		.byte	0x6
 1360 0028 0B010000 		.4byte	.LASF0
 1361 002c 02       		.uleb128 0x2
 1362 002d 01       		.byte	0x1
 1363 002e 08       		.byte	0x8
 1364 002f 85030000 		.4byte	.LASF1
 1365 0033 02       		.uleb128 0x2
 1366 0034 02       		.byte	0x2
 1367 0035 05       		.byte	0x5
 1368 0036 93030000 		.4byte	.LASF2
 1369 003a 02       		.uleb128 0x2
 1370 003b 02       		.byte	0x2
 1371 003c 07       		.byte	0x7
 1372 003d 62020000 		.4byte	.LASF3
 1373 0041 02       		.uleb128 0x2
 1374 0042 04       		.byte	0x4
 1375 0043 05       		.byte	0x5
 1376 0044 42010000 		.4byte	.LASF4
 1377 0048 02       		.uleb128 0x2
 1378 0049 04       		.byte	0x4
 1379 004a 07       		.byte	0x7
 1380 004b 09020000 		.4byte	.LASF5
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 59


 1381 004f 02       		.uleb128 0x2
 1382 0050 08       		.byte	0x8
 1383 0051 05       		.byte	0x5
 1384 0052 FD000000 		.4byte	.LASF6
 1385 0056 02       		.uleb128 0x2
 1386 0057 08       		.byte	0x8
 1387 0058 07       		.byte	0x7
 1388 0059 B8000000 		.4byte	.LASF7
 1389 005d 03       		.uleb128 0x3
 1390 005e 04       		.byte	0x4
 1391 005f 05       		.byte	0x5
 1392 0060 696E7400 		.ascii	"int\000"
 1393 0064 02       		.uleb128 0x2
 1394 0065 04       		.byte	0x4
 1395 0066 07       		.byte	0x7
 1396 0067 FC010000 		.4byte	.LASF8
 1397 006b 04       		.uleb128 0x4
 1398 006c 7A010000 		.4byte	.LASF9
 1399 0070 02       		.byte	0x2
 1400 0071 9201     		.2byte	0x192
 1401 0073 2C000000 		.4byte	0x2c
 1402 0077 04       		.uleb128 0x4
 1403 0078 00000000 		.4byte	.LASF10
 1404 007c 02       		.byte	0x2
 1405 007d 9301     		.2byte	0x193
 1406 007f 3A000000 		.4byte	0x3a
 1407 0083 04       		.uleb128 0x4
 1408 0084 9C010000 		.4byte	.LASF11
 1409 0088 02       		.byte	0x2
 1410 0089 9401     		.2byte	0x194
 1411 008b 48000000 		.4byte	0x48
 1412 008f 02       		.uleb128 0x2
 1413 0090 04       		.byte	0x4
 1414 0091 04       		.byte	0x4
 1415 0092 56030000 		.4byte	.LASF12
 1416 0096 02       		.uleb128 0x2
 1417 0097 08       		.byte	0x8
 1418 0098 04       		.byte	0x4
 1419 0099 80010000 		.4byte	.LASF13
 1420 009d 02       		.uleb128 0x2
 1421 009e 01       		.byte	0x1
 1422 009f 08       		.byte	0x8
 1423 00a0 54040000 		.4byte	.LASF14
 1424 00a4 04       		.uleb128 0x4
 1425 00a5 80030000 		.4byte	.LASF15
 1426 00a9 02       		.byte	0x2
 1427 00aa 3C02     		.2byte	0x23c
 1428 00ac B0000000 		.4byte	0xb0
 1429 00b0 05       		.uleb128 0x5
 1430 00b1 6B000000 		.4byte	0x6b
 1431 00b5 04       		.uleb128 0x4
 1432 00b6 DF020000 		.4byte	.LASF16
 1433 00ba 02       		.byte	0x2
 1434 00bb 3E02     		.2byte	0x23e
 1435 00bd C1000000 		.4byte	0xc1
 1436 00c1 05       		.uleb128 0x5
 1437 00c2 83000000 		.4byte	0x83
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 60


 1438 00c6 02       		.uleb128 0x2
 1439 00c7 08       		.byte	0x8
 1440 00c8 04       		.byte	0x4
 1441 00c9 08030000 		.4byte	.LASF17
 1442 00cd 02       		.uleb128 0x2
 1443 00ce 04       		.byte	0x4
 1444 00cf 07       		.byte	0x7
 1445 00d0 FF020000 		.4byte	.LASF18
 1446 00d4 06       		.uleb128 0x6
 1447 00d5 30010000 		.4byte	.LASF19
 1448 00d9 01       		.byte	0x1
 1449 00da 68       		.byte	0x68
 1450 00db 00000000 		.4byte	.LFB0
 1451 00df F4000000 		.4byte	.LFE0-.LFB0
 1452 00e3 01       		.uleb128 0x1
 1453 00e4 9C       		.byte	0x9c
 1454 00e5 F8000000 		.4byte	0xf8
 1455 00e9 07       		.uleb128 0x7
 1456 00ea E1040000 		.4byte	.LASF21
 1457 00ee 01       		.byte	0x1
 1458 00ef 6F       		.byte	0x6f
 1459 00f0 6B000000 		.4byte	0x6b
 1460 00f4 02       		.uleb128 0x2
 1461 00f5 91       		.byte	0x91
 1462 00f6 77       		.sleb128 -9
 1463 00f7 00       		.byte	0
 1464 00f8 08       		.uleb128 0x8
 1465 00f9 CD040000 		.4byte	.LASF20
 1466 00fd 01       		.byte	0x1
 1467 00fe 4901     		.2byte	0x149
 1468 0100 00000000 		.4byte	.LFB1
 1469 0104 98000000 		.4byte	.LFE1-.LFB1
 1470 0108 01       		.uleb128 0x1
 1471 0109 9C       		.byte	0x9c
 1472 010a 1E010000 		.4byte	0x11e
 1473 010e 09       		.uleb128 0x9
 1474 010f E1040000 		.4byte	.LASF21
 1475 0113 01       		.byte	0x1
 1476 0114 4B01     		.2byte	0x14b
 1477 0116 6B000000 		.4byte	0x6b
 1478 011a 02       		.uleb128 0x2
 1479 011b 91       		.byte	0x91
 1480 011c 77       		.sleb128 -9
 1481 011d 00       		.byte	0
 1482 011e 0A       		.uleb128 0xa
 1483 011f 14030000 		.4byte	.LASF22
 1484 0123 01       		.byte	0x1
 1485 0124 E201     		.2byte	0x1e2
 1486 0126 00000000 		.4byte	.LFB2
 1487 012a 24000000 		.4byte	.LFE2-.LFB2
 1488 012e 01       		.uleb128 0x1
 1489 012f 9C       		.byte	0x9c
 1490 0130 0A       		.uleb128 0xa
 1491 0131 42040000 		.4byte	.LASF23
 1492 0135 01       		.byte	0x1
 1493 0136 0702     		.2byte	0x207
 1494 0138 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 61


 1495 013c 98000000 		.4byte	.LFE3-.LFB3
 1496 0140 01       		.uleb128 0x1
 1497 0141 9C       		.byte	0x9c
 1498 0142 0B       		.uleb128 0xb
 1499 0143 F2040000 		.4byte	.LASF32
 1500 0147 01       		.byte	0x1
 1501 0148 9102     		.2byte	0x291
 1502 014a 6B000000 		.4byte	0x6b
 1503 014e 00000000 		.4byte	.LFB4
 1504 0152 50000000 		.4byte	.LFE4-.LFB4
 1505 0156 01       		.uleb128 0x1
 1506 0157 9C       		.byte	0x9c
 1507 0158 8A010000 		.4byte	0x18a
 1508 015c 0C       		.uleb128 0xc
 1509 015d 07000000 		.4byte	.LASF26
 1510 0161 01       		.byte	0x1
 1511 0162 9102     		.2byte	0x291
 1512 0164 6B000000 		.4byte	0x6b
 1513 0168 02       		.uleb128 0x2
 1514 0169 91       		.byte	0x91
 1515 016a 6F       		.sleb128 -17
 1516 016b 0D       		.uleb128 0xd
 1517 016c 706F7300 		.ascii	"pos\000"
 1518 0170 01       		.byte	0x1
 1519 0171 9302     		.2byte	0x293
 1520 0173 6B000000 		.4byte	0x6b
 1521 0177 02       		.uleb128 0x2
 1522 0178 91       		.byte	0x91
 1523 0179 77       		.sleb128 -9
 1524 017a 09       		.uleb128 0x9
 1525 017b 31030000 		.4byte	.LASF24
 1526 017f 01       		.byte	0x1
 1527 0180 9402     		.2byte	0x294
 1528 0182 6B000000 		.4byte	0x6b
 1529 0186 02       		.uleb128 0x2
 1530 0187 91       		.byte	0x91
 1531 0188 76       		.sleb128 -10
 1532 0189 00       		.byte	0
 1533 018a 08       		.uleb128 0x8
 1534 018b 59040000 		.4byte	.LASF25
 1535 018f 01       		.byte	0x1
 1536 0190 2B03     		.2byte	0x32b
 1537 0192 00000000 		.4byte	.LFB5
 1538 0196 50000000 		.4byte	.LFE5-.LFB5
 1539 019a 01       		.uleb128 0x1
 1540 019b 9C       		.byte	0x9c
 1541 019c BF010000 		.4byte	0x1bf
 1542 01a0 0C       		.uleb128 0xc
 1543 01a1 AD020000 		.4byte	.LASF27
 1544 01a5 01       		.byte	0x1
 1545 01a6 2B03     		.2byte	0x32b
 1546 01a8 6B000000 		.4byte	0x6b
 1547 01ac 02       		.uleb128 0x2
 1548 01ad 91       		.byte	0x91
 1549 01ae 6F       		.sleb128 -17
 1550 01af 09       		.uleb128 0x9
 1551 01b0 9D030000 		.4byte	.LASF28
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 62


 1552 01b4 01       		.byte	0x1
 1553 01b5 2D03     		.2byte	0x32d
 1554 01b7 6B000000 		.4byte	0x6b
 1555 01bb 02       		.uleb128 0x2
 1556 01bc 91       		.byte	0x91
 1557 01bd 77       		.sleb128 -9
 1558 01be 00       		.byte	0
 1559 01bf 08       		.uleb128 0x8
 1560 01c0 C7020000 		.4byte	.LASF29
 1561 01c4 01       		.byte	0x1
 1562 01c5 9B03     		.2byte	0x39b
 1563 01c7 00000000 		.4byte	.LFB6
 1564 01cb 34000000 		.4byte	.LFE6-.LFB6
 1565 01cf 01       		.uleb128 0x1
 1566 01d0 9C       		.byte	0x9c
 1567 01d1 E5010000 		.4byte	0x1e5
 1568 01d5 0C       		.uleb128 0xc
 1569 01d6 75020000 		.4byte	.LASF30
 1570 01da 01       		.byte	0x1
 1571 01db 9B03     		.2byte	0x39b
 1572 01dd 6B000000 		.4byte	0x6b
 1573 01e1 02       		.uleb128 0x2
 1574 01e2 91       		.byte	0x91
 1575 01e3 77       		.sleb128 -9
 1576 01e4 00       		.byte	0
 1577 01e5 0A       		.uleb128 0xa
 1578 01e6 A3010000 		.4byte	.LASF31
 1579 01ea 01       		.byte	0x1
 1580 01eb E803     		.2byte	0x3e8
 1581 01ed 00000000 		.4byte	.LFB7
 1582 01f1 58000000 		.4byte	.LFE7-.LFB7
 1583 01f5 01       		.uleb128 0x1
 1584 01f6 9C       		.byte	0x9c
 1585 01f7 0E       		.uleb128 0xe
 1586 01f8 A4030000 		.4byte	.LASF62
 1587 01fc 01       		.byte	0x1
 1588 01fd 1D04     		.2byte	0x41d
 1589 01ff 6B000000 		.4byte	0x6b
 1590 0203 00000000 		.4byte	.LFB8
 1591 0207 1C000000 		.4byte	.LFE8-.LFB8
 1592 020b 01       		.uleb128 0x1
 1593 020c 9C       		.byte	0x9c
 1594 020d 0B       		.uleb128 0xb
 1595 020e 7A040000 		.4byte	.LASF33
 1596 0212 01       		.byte	0x1
 1597 0213 3604     		.2byte	0x436
 1598 0215 77000000 		.4byte	0x77
 1599 0219 00000000 		.4byte	.LFB9
 1600 021d 20000000 		.4byte	.LFE9-.LFB9
 1601 0221 01       		.uleb128 0x1
 1602 0222 9C       		.byte	0x9c
 1603 0223 37020000 		.4byte	0x237
 1604 0227 0C       		.uleb128 0xc
 1605 0228 75020000 		.4byte	.LASF30
 1606 022c 01       		.byte	0x1
 1607 022d 3604     		.2byte	0x436
 1608 022f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 63


 1609 0233 02       		.uleb128 0x2
 1610 0234 91       		.byte	0x91
 1611 0235 77       		.sleb128 -9
 1612 0236 00       		.byte	0
 1613 0237 08       		.uleb128 0x8
 1614 0238 C8010000 		.4byte	.LASF34
 1615 023c 01       		.byte	0x1
 1616 023d 4B04     		.2byte	0x44b
 1617 023f 00000000 		.4byte	.LFB10
 1618 0243 28000000 		.4byte	.LFE10-.LFB10
 1619 0247 01       		.uleb128 0x1
 1620 0248 9C       		.byte	0x9c
 1621 0249 5B020000 		.4byte	0x25b
 1622 024d 0D       		.uleb128 0xd
 1623 024e 6900     		.ascii	"i\000"
 1624 0250 01       		.byte	0x1
 1625 0251 4D04     		.2byte	0x44d
 1626 0253 6B000000 		.4byte	0x6b
 1627 0257 02       		.uleb128 0x2
 1628 0258 91       		.byte	0x91
 1629 0259 77       		.sleb128 -9
 1630 025a 00       		.byte	0
 1631 025b 08       		.uleb128 0x8
 1632 025c E5020000 		.4byte	.LASF35
 1633 0260 01       		.byte	0x1
 1634 0261 E104     		.2byte	0x4e1
 1635 0263 00000000 		.4byte	.LFB11
 1636 0267 6C000000 		.4byte	.LFE11-.LFB11
 1637 026b 01       		.uleb128 0x1
 1638 026c 9C       		.byte	0x9c
 1639 026d 9F020000 		.4byte	0x29f
 1640 0271 0C       		.uleb128 0xc
 1641 0272 75020000 		.4byte	.LASF30
 1642 0276 01       		.byte	0x1
 1643 0277 E104     		.2byte	0x4e1
 1644 0279 6B000000 		.4byte	0x6b
 1645 027d 02       		.uleb128 0x2
 1646 027e 91       		.byte	0x91
 1647 027f 6F       		.sleb128 -17
 1648 0280 09       		.uleb128 0x9
 1649 0281 E2010000 		.4byte	.LASF36
 1650 0285 01       		.byte	0x1
 1651 0286 E304     		.2byte	0x4e3
 1652 0288 6B000000 		.4byte	0x6b
 1653 028c 02       		.uleb128 0x2
 1654 028d 91       		.byte	0x91
 1655 028e 77       		.sleb128 -9
 1656 028f 09       		.uleb128 0x9
 1657 0290 C3010000 		.4byte	.LASF37
 1658 0294 01       		.byte	0x1
 1659 0295 E404     		.2byte	0x4e4
 1660 0297 6B000000 		.4byte	0x6b
 1661 029b 02       		.uleb128 0x2
 1662 029c 91       		.byte	0x91
 1663 029d 76       		.sleb128 -10
 1664 029e 00       		.byte	0
 1665 029f 08       		.uleb128 0x8
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 64


 1666 02a0 7C020000 		.4byte	.LASF38
 1667 02a4 01       		.byte	0x1
 1668 02a5 3605     		.2byte	0x536
 1669 02a7 00000000 		.4byte	.LFB12
 1670 02ab 70000000 		.4byte	.LFE12-.LFB12
 1671 02af 01       		.uleb128 0x1
 1672 02b0 9C       		.byte	0x9c
 1673 02b1 E3020000 		.4byte	0x2e3
 1674 02b5 0C       		.uleb128 0xc
 1675 02b6 75020000 		.4byte	.LASF30
 1676 02ba 01       		.byte	0x1
 1677 02bb 3605     		.2byte	0x536
 1678 02bd 6B000000 		.4byte	0x6b
 1679 02c1 02       		.uleb128 0x2
 1680 02c2 91       		.byte	0x91
 1681 02c3 6F       		.sleb128 -17
 1682 02c4 09       		.uleb128 0x9
 1683 02c5 E2010000 		.4byte	.LASF36
 1684 02c9 01       		.byte	0x1
 1685 02ca 3805     		.2byte	0x538
 1686 02cc 6B000000 		.4byte	0x6b
 1687 02d0 02       		.uleb128 0x2
 1688 02d1 91       		.byte	0x91
 1689 02d2 77       		.sleb128 -9
 1690 02d3 09       		.uleb128 0x9
 1691 02d4 C3010000 		.4byte	.LASF37
 1692 02d8 01       		.byte	0x1
 1693 02d9 3905     		.2byte	0x539
 1694 02db 6B000000 		.4byte	0x6b
 1695 02df 02       		.uleb128 0x2
 1696 02e0 91       		.byte	0x91
 1697 02e1 76       		.sleb128 -10
 1698 02e2 00       		.byte	0
 1699 02e3 08       		.uleb128 0x8
 1700 02e4 E7010000 		.4byte	.LASF39
 1701 02e8 01       		.byte	0x1
 1702 02e9 8A05     		.2byte	0x58a
 1703 02eb 00000000 		.4byte	.LFB13
 1704 02ef 5C000000 		.4byte	.LFE13-.LFB13
 1705 02f3 01       		.uleb128 0x1
 1706 02f4 9C       		.byte	0x9c
 1707 02f5 09030000 		.4byte	0x309
 1708 02f9 0C       		.uleb128 0xc
 1709 02fa 75020000 		.4byte	.LASF30
 1710 02fe 01       		.byte	0x1
 1711 02ff 8A05     		.2byte	0x58a
 1712 0301 6B000000 		.4byte	0x6b
 1713 0305 02       		.uleb128 0x2
 1714 0306 91       		.byte	0x91
 1715 0307 77       		.sleb128 -9
 1716 0308 00       		.byte	0
 1717 0309 08       		.uleb128 0x8
 1718 030a 97020000 		.4byte	.LASF40
 1719 030e 01       		.byte	0x1
 1720 030f 3206     		.2byte	0x632
 1721 0311 00000000 		.4byte	.LFB14
 1722 0315 98000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 65


 1723 0319 01       		.uleb128 0x1
 1724 031a 9C       		.byte	0x9c
 1725 031b 2F030000 		.4byte	0x32f
 1726 031f 0C       		.uleb128 0xc
 1727 0320 75020000 		.4byte	.LASF30
 1728 0324 01       		.byte	0x1
 1729 0325 3206     		.2byte	0x632
 1730 0327 6B000000 		.4byte	0x6b
 1731 032b 02       		.uleb128 0x2
 1732 032c 91       		.byte	0x91
 1733 032d 77       		.sleb128 -9
 1734 032e 00       		.byte	0
 1735 032f 0F       		.uleb128 0xf
 1736 0330 9E000000 		.4byte	.LASF41
 1737 0334 01       		.byte	0x1
 1738 0335 4007     		.2byte	0x740
 1739 0337 00000000 		.4byte	.LFB15
 1740 033b 2C000000 		.4byte	.LFE15-.LFB15
 1741 033f 01       		.uleb128 0x1
 1742 0340 9C       		.byte	0x9c
 1743 0341 55030000 		.4byte	0x355
 1744 0345 0C       		.uleb128 0xc
 1745 0346 5C030000 		.4byte	.LASF42
 1746 034a 01       		.byte	0x1
 1747 034b 4007     		.2byte	0x740
 1748 034d 6B000000 		.4byte	0x6b
 1749 0351 02       		.uleb128 0x2
 1750 0352 91       		.byte	0x91
 1751 0353 77       		.sleb128 -9
 1752 0354 00       		.byte	0
 1753 0355 0B       		.uleb128 0xb
 1754 0356 66030000 		.4byte	.LASF43
 1755 035a 01       		.byte	0x1
 1756 035b 5D07     		.2byte	0x75d
 1757 035d 6B000000 		.4byte	0x6b
 1758 0361 00000000 		.4byte	.LFB16
 1759 0365 20000000 		.4byte	.LFE16-.LFB16
 1760 0369 01       		.uleb128 0x1
 1761 036a 9C       		.byte	0x9c
 1762 036b 7F030000 		.4byte	0x37f
 1763 036f 09       		.uleb128 0x9
 1764 0370 5C030000 		.4byte	.LASF42
 1765 0374 01       		.byte	0x1
 1766 0375 5F07     		.2byte	0x75f
 1767 0377 6B000000 		.4byte	0x6b
 1768 037b 02       		.uleb128 0x2
 1769 037c 91       		.byte	0x91
 1770 037d 77       		.sleb128 -9
 1771 037e 00       		.byte	0
 1772 037f 0F       		.uleb128 0xf
 1773 0380 CF030000 		.4byte	.LASF44
 1774 0384 01       		.byte	0x1
 1775 0385 7F07     		.2byte	0x77f
 1776 0387 00000000 		.4byte	.LFB17
 1777 038b 20000000 		.4byte	.LFE17-.LFB17
 1778 038f 01       		.uleb128 0x1
 1779 0390 9C       		.byte	0x9c
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 66


 1780 0391 A5030000 		.4byte	0x3a5
 1781 0395 0C       		.uleb128 0xc
 1782 0396 27030000 		.4byte	.LASF45
 1783 039a 01       		.byte	0x1
 1784 039b 7F07     		.2byte	0x77f
 1785 039d 6B000000 		.4byte	0x6b
 1786 03a1 02       		.uleb128 0x2
 1787 03a2 91       		.byte	0x91
 1788 03a3 77       		.sleb128 -9
 1789 03a4 00       		.byte	0
 1790 03a5 07       		.uleb128 0x7
 1791 03a6 87010000 		.4byte	.LASF46
 1792 03aa 01       		.byte	0x1
 1793 03ab 16       		.byte	0x16
 1794 03ac 6B000000 		.4byte	0x6b
 1795 03b0 05       		.uleb128 0x5
 1796 03b1 03       		.byte	0x3
 1797 03b2 00000000 		.4byte	CapSense_CSD_initVar
 1798 03b6 10       		.uleb128 0x10
 1799 03b7 0E050000 		.4byte	.LASF47
 1800 03bb 01       		.byte	0x1
 1801 03bc 19       		.byte	0x19
 1802 03bd B0000000 		.4byte	0xb0
 1803 03c1 05       		.uleb128 0x5
 1804 03c2 03       		.byte	0x3
 1805 03c3 00000000 		.4byte	CapSense_CSD_csv
 1806 03c7 10       		.uleb128 0x10
 1807 03c8 17010000 		.4byte	.LASF48
 1808 03cc 01       		.byte	0x1
 1809 03cd 1A       		.byte	0x1a
 1810 03ce B0000000 		.4byte	0xb0
 1811 03d2 05       		.uleb128 0x5
 1812 03d3 03       		.byte	0x3
 1813 03d4 00000000 		.4byte	CapSense_CSD_sensorIndex
 1814 03d8 11       		.uleb128 0x11
 1815 03d9 77000000 		.4byte	0x77
 1816 03dd E8030000 		.4byte	0x3e8
 1817 03e1 12       		.uleb128 0x12
 1818 03e2 CD000000 		.4byte	0xcd
 1819 03e6 01       		.byte	0x1
 1820 03e7 00       		.byte	0
 1821 03e8 10       		.uleb128 0x10
 1822 03e9 B8030000 		.4byte	.LASF49
 1823 03ed 01       		.byte	0x1
 1824 03ee 29       		.byte	0x29
 1825 03ef D8030000 		.4byte	0x3d8
 1826 03f3 05       		.uleb128 0x5
 1827 03f4 03       		.byte	0x3
 1828 03f5 00000000 		.4byte	CapSense_CSD_sensorRaw
 1829 03f9 11       		.uleb128 0x11
 1830 03fa 6B000000 		.4byte	0x6b
 1831 03fe 09040000 		.4byte	0x409
 1832 0402 12       		.uleb128 0x12
 1833 0403 CD000000 		.4byte	0xcd
 1834 0407 00       		.byte	0
 1835 0408 00       		.byte	0
 1836 0409 10       		.uleb128 0x10
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 67


 1837 040a 38030000 		.4byte	.LASF50
 1838 040e 01       		.byte	0x1
 1839 040f 2B       		.byte	0x2b
 1840 0410 F9030000 		.4byte	0x3f9
 1841 0414 05       		.uleb128 0x5
 1842 0415 03       		.byte	0x3
 1843 0416 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1844 041a 11       		.uleb128 0x11
 1845 041b 30040000 		.4byte	0x430
 1846 041f 2A040000 		.4byte	0x42a
 1847 0423 12       		.uleb128 0x12
 1848 0424 CD000000 		.4byte	0xcd
 1849 0428 01       		.byte	0x1
 1850 0429 00       		.byte	0
 1851 042a 13       		.uleb128 0x13
 1852 042b 04       		.byte	0x4
 1853 042c 6B000000 		.4byte	0x6b
 1854 0430 14       		.uleb128 0x14
 1855 0431 2A040000 		.4byte	0x42a
 1856 0435 10       		.uleb128 0x10
 1857 0436 B2020000 		.4byte	.LASF51
 1858 043a 01       		.byte	0x1
 1859 043b 2E       		.byte	0x2e
 1860 043c 46040000 		.4byte	0x446
 1861 0440 05       		.uleb128 0x5
 1862 0441 03       		.byte	0x3
 1863 0442 00000000 		.4byte	CapSense_CSD_pcTable
 1864 0446 14       		.uleb128 0x14
 1865 0447 1A040000 		.4byte	0x41a
 1866 044b 11       		.uleb128 0x11
 1867 044c 5B040000 		.4byte	0x45b
 1868 0450 5B040000 		.4byte	0x45b
 1869 0454 12       		.uleb128 0x12
 1870 0455 CD000000 		.4byte	0xcd
 1871 0459 01       		.byte	0x1
 1872 045a 00       		.byte	0
 1873 045b 14       		.uleb128 0x14
 1874 045c 6B000000 		.4byte	0x6b
 1875 0460 10       		.uleb128 0x10
 1876 0461 E6000000 		.4byte	.LASF52
 1877 0465 01       		.byte	0x1
 1878 0466 33       		.byte	0x33
 1879 0467 71040000 		.4byte	0x471
 1880 046b 05       		.uleb128 0x5
 1881 046c 03       		.byte	0x3
 1882 046d 00000000 		.4byte	CapSense_CSD_portTable
 1883 0471 14       		.uleb128 0x14
 1884 0472 4B040000 		.4byte	0x44b
 1885 0476 10       		.uleb128 0x10
 1886 0477 CF000000 		.4byte	.LASF53
 1887 047b 01       		.byte	0x1
 1888 047c 38       		.byte	0x38
 1889 047d 87040000 		.4byte	0x487
 1890 0481 05       		.uleb128 0x5
 1891 0482 03       		.byte	0x3
 1892 0483 00000000 		.4byte	CapSense_CSD_maskTable
 1893 0487 14       		.uleb128 0x14
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 68


 1894 0488 4B040000 		.4byte	0x44b
 1895 048c 11       		.uleb128 0x11
 1896 048d 30040000 		.4byte	0x430
 1897 0491 9C040000 		.4byte	0x49c
 1898 0495 12       		.uleb128 0x12
 1899 0496 CD000000 		.4byte	0xcd
 1900 049a 07       		.byte	0x7
 1901 049b 00       		.byte	0
 1902 049c 10       		.uleb128 0x10
 1903 049d 65010000 		.4byte	.LASF54
 1904 04a1 01       		.byte	0x1
 1905 04a2 3D       		.byte	0x3d
 1906 04a3 AD040000 		.4byte	0x4ad
 1907 04a7 05       		.uleb128 0x5
 1908 04a8 03       		.byte	0x3
 1909 04a9 00000000 		.4byte	CapSense_CSD_csTable
 1910 04ad 14       		.uleb128 0x14
 1911 04ae 8C040000 		.4byte	0x48c
 1912 04b2 11       		.uleb128 0x11
 1913 04b3 6B000000 		.4byte	0x6b
 1914 04b7 C2040000 		.4byte	0x4c2
 1915 04bb 12       		.uleb128 0x12
 1916 04bc CD000000 		.4byte	0xcd
 1917 04c0 01       		.byte	0x1
 1918 04c1 00       		.byte	0
 1919 04c2 10       		.uleb128 0x10
 1920 04c3 B3040000 		.4byte	.LASF55
 1921 04c7 01       		.byte	0x1
 1922 04c8 43       		.byte	0x43
 1923 04c9 B2040000 		.4byte	0x4b2
 1924 04cd 05       		.uleb128 0x5
 1925 04ce 03       		.byte	0x3
 1926 04cf 00000000 		.4byte	CapSense_CSD_idacSettings
 1927 04d3 10       		.uleb128 0x10
 1928 04d4 95040000 		.4byte	.LASF56
 1929 04d8 01       		.byte	0x1
 1930 04d9 47       		.byte	0x47
 1931 04da B2040000 		.4byte	0x4b2
 1932 04de 05       		.uleb128 0x5
 1933 04df 03       		.byte	0x3
 1934 04e0 00000000 		.4byte	CapSense_CSD_widgetResolution
 1935 04e4 10       		.uleb128 0x10
 1936 04e5 41020000 		.4byte	.LASF57
 1937 04e9 01       		.byte	0x1
 1938 04ea 4C       		.byte	0x4c
 1939 04eb B2040000 		.4byte	0x4b2
 1940 04ef 05       		.uleb128 0x5
 1941 04f0 03       		.byte	0x3
 1942 04f1 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 1943 04f5 10       		.uleb128 0x10
 1944 04f6 4B010000 		.4byte	.LASF58
 1945 04fa 01       		.byte	0x1
 1946 04fb 50       		.byte	0x50
 1947 04fc 06050000 		.4byte	0x506
 1948 0500 05       		.uleb128 0x5
 1949 0501 03       		.byte	0x3
 1950 0502 00000000 		.4byte	CapSense_CSD_widgetNumber
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 69


 1951 0506 14       		.uleb128 0x14
 1952 0507 4B040000 		.4byte	0x44b
 1953 050b 00       		.byte	0
 1954              		.section	.debug_abbrev,"",%progbits
 1955              	.Ldebug_abbrev0:
 1956 0000 01       		.uleb128 0x1
 1957 0001 11       		.uleb128 0x11
 1958 0002 01       		.byte	0x1
 1959 0003 25       		.uleb128 0x25
 1960 0004 0E       		.uleb128 0xe
 1961 0005 13       		.uleb128 0x13
 1962 0006 0B       		.uleb128 0xb
 1963 0007 03       		.uleb128 0x3
 1964 0008 0E       		.uleb128 0xe
 1965 0009 1B       		.uleb128 0x1b
 1966 000a 0E       		.uleb128 0xe
 1967 000b 55       		.uleb128 0x55
 1968 000c 17       		.uleb128 0x17
 1969 000d 11       		.uleb128 0x11
 1970 000e 01       		.uleb128 0x1
 1971 000f 10       		.uleb128 0x10
 1972 0010 17       		.uleb128 0x17
 1973 0011 00       		.byte	0
 1974 0012 00       		.byte	0
 1975 0013 02       		.uleb128 0x2
 1976 0014 24       		.uleb128 0x24
 1977 0015 00       		.byte	0
 1978 0016 0B       		.uleb128 0xb
 1979 0017 0B       		.uleb128 0xb
 1980 0018 3E       		.uleb128 0x3e
 1981 0019 0B       		.uleb128 0xb
 1982 001a 03       		.uleb128 0x3
 1983 001b 0E       		.uleb128 0xe
 1984 001c 00       		.byte	0
 1985 001d 00       		.byte	0
 1986 001e 03       		.uleb128 0x3
 1987 001f 24       		.uleb128 0x24
 1988 0020 00       		.byte	0
 1989 0021 0B       		.uleb128 0xb
 1990 0022 0B       		.uleb128 0xb
 1991 0023 3E       		.uleb128 0x3e
 1992 0024 0B       		.uleb128 0xb
 1993 0025 03       		.uleb128 0x3
 1994 0026 08       		.uleb128 0x8
 1995 0027 00       		.byte	0
 1996 0028 00       		.byte	0
 1997 0029 04       		.uleb128 0x4
 1998 002a 16       		.uleb128 0x16
 1999 002b 00       		.byte	0
 2000 002c 03       		.uleb128 0x3
 2001 002d 0E       		.uleb128 0xe
 2002 002e 3A       		.uleb128 0x3a
 2003 002f 0B       		.uleb128 0xb
 2004 0030 3B       		.uleb128 0x3b
 2005 0031 05       		.uleb128 0x5
 2006 0032 49       		.uleb128 0x49
 2007 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 70


 2008 0034 00       		.byte	0
 2009 0035 00       		.byte	0
 2010 0036 05       		.uleb128 0x5
 2011 0037 35       		.uleb128 0x35
 2012 0038 00       		.byte	0
 2013 0039 49       		.uleb128 0x49
 2014 003a 13       		.uleb128 0x13
 2015 003b 00       		.byte	0
 2016 003c 00       		.byte	0
 2017 003d 06       		.uleb128 0x6
 2018 003e 2E       		.uleb128 0x2e
 2019 003f 01       		.byte	0x1
 2020 0040 3F       		.uleb128 0x3f
 2021 0041 19       		.uleb128 0x19
 2022 0042 03       		.uleb128 0x3
 2023 0043 0E       		.uleb128 0xe
 2024 0044 3A       		.uleb128 0x3a
 2025 0045 0B       		.uleb128 0xb
 2026 0046 3B       		.uleb128 0x3b
 2027 0047 0B       		.uleb128 0xb
 2028 0048 27       		.uleb128 0x27
 2029 0049 19       		.uleb128 0x19
 2030 004a 11       		.uleb128 0x11
 2031 004b 01       		.uleb128 0x1
 2032 004c 12       		.uleb128 0x12
 2033 004d 06       		.uleb128 0x6
 2034 004e 40       		.uleb128 0x40
 2035 004f 18       		.uleb128 0x18
 2036 0050 9642     		.uleb128 0x2116
 2037 0052 19       		.uleb128 0x19
 2038 0053 01       		.uleb128 0x1
 2039 0054 13       		.uleb128 0x13
 2040 0055 00       		.byte	0
 2041 0056 00       		.byte	0
 2042 0057 07       		.uleb128 0x7
 2043 0058 34       		.uleb128 0x34
 2044 0059 00       		.byte	0
 2045 005a 03       		.uleb128 0x3
 2046 005b 0E       		.uleb128 0xe
 2047 005c 3A       		.uleb128 0x3a
 2048 005d 0B       		.uleb128 0xb
 2049 005e 3B       		.uleb128 0x3b
 2050 005f 0B       		.uleb128 0xb
 2051 0060 49       		.uleb128 0x49
 2052 0061 13       		.uleb128 0x13
 2053 0062 02       		.uleb128 0x2
 2054 0063 18       		.uleb128 0x18
 2055 0064 00       		.byte	0
 2056 0065 00       		.byte	0
 2057 0066 08       		.uleb128 0x8
 2058 0067 2E       		.uleb128 0x2e
 2059 0068 01       		.byte	0x1
 2060 0069 3F       		.uleb128 0x3f
 2061 006a 19       		.uleb128 0x19
 2062 006b 03       		.uleb128 0x3
 2063 006c 0E       		.uleb128 0xe
 2064 006d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 71


 2065 006e 0B       		.uleb128 0xb
 2066 006f 3B       		.uleb128 0x3b
 2067 0070 05       		.uleb128 0x5
 2068 0071 27       		.uleb128 0x27
 2069 0072 19       		.uleb128 0x19
 2070 0073 11       		.uleb128 0x11
 2071 0074 01       		.uleb128 0x1
 2072 0075 12       		.uleb128 0x12
 2073 0076 06       		.uleb128 0x6
 2074 0077 40       		.uleb128 0x40
 2075 0078 18       		.uleb128 0x18
 2076 0079 9642     		.uleb128 0x2116
 2077 007b 19       		.uleb128 0x19
 2078 007c 01       		.uleb128 0x1
 2079 007d 13       		.uleb128 0x13
 2080 007e 00       		.byte	0
 2081 007f 00       		.byte	0
 2082 0080 09       		.uleb128 0x9
 2083 0081 34       		.uleb128 0x34
 2084 0082 00       		.byte	0
 2085 0083 03       		.uleb128 0x3
 2086 0084 0E       		.uleb128 0xe
 2087 0085 3A       		.uleb128 0x3a
 2088 0086 0B       		.uleb128 0xb
 2089 0087 3B       		.uleb128 0x3b
 2090 0088 05       		.uleb128 0x5
 2091 0089 49       		.uleb128 0x49
 2092 008a 13       		.uleb128 0x13
 2093 008b 02       		.uleb128 0x2
 2094 008c 18       		.uleb128 0x18
 2095 008d 00       		.byte	0
 2096 008e 00       		.byte	0
 2097 008f 0A       		.uleb128 0xa
 2098 0090 2E       		.uleb128 0x2e
 2099 0091 00       		.byte	0
 2100 0092 3F       		.uleb128 0x3f
 2101 0093 19       		.uleb128 0x19
 2102 0094 03       		.uleb128 0x3
 2103 0095 0E       		.uleb128 0xe
 2104 0096 3A       		.uleb128 0x3a
 2105 0097 0B       		.uleb128 0xb
 2106 0098 3B       		.uleb128 0x3b
 2107 0099 05       		.uleb128 0x5
 2108 009a 27       		.uleb128 0x27
 2109 009b 19       		.uleb128 0x19
 2110 009c 11       		.uleb128 0x11
 2111 009d 01       		.uleb128 0x1
 2112 009e 12       		.uleb128 0x12
 2113 009f 06       		.uleb128 0x6
 2114 00a0 40       		.uleb128 0x40
 2115 00a1 18       		.uleb128 0x18
 2116 00a2 9642     		.uleb128 0x2116
 2117 00a4 19       		.uleb128 0x19
 2118 00a5 00       		.byte	0
 2119 00a6 00       		.byte	0
 2120 00a7 0B       		.uleb128 0xb
 2121 00a8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 72


 2122 00a9 01       		.byte	0x1
 2123 00aa 3F       		.uleb128 0x3f
 2124 00ab 19       		.uleb128 0x19
 2125 00ac 03       		.uleb128 0x3
 2126 00ad 0E       		.uleb128 0xe
 2127 00ae 3A       		.uleb128 0x3a
 2128 00af 0B       		.uleb128 0xb
 2129 00b0 3B       		.uleb128 0x3b
 2130 00b1 05       		.uleb128 0x5
 2131 00b2 27       		.uleb128 0x27
 2132 00b3 19       		.uleb128 0x19
 2133 00b4 49       		.uleb128 0x49
 2134 00b5 13       		.uleb128 0x13
 2135 00b6 11       		.uleb128 0x11
 2136 00b7 01       		.uleb128 0x1
 2137 00b8 12       		.uleb128 0x12
 2138 00b9 06       		.uleb128 0x6
 2139 00ba 40       		.uleb128 0x40
 2140 00bb 18       		.uleb128 0x18
 2141 00bc 9742     		.uleb128 0x2117
 2142 00be 19       		.uleb128 0x19
 2143 00bf 01       		.uleb128 0x1
 2144 00c0 13       		.uleb128 0x13
 2145 00c1 00       		.byte	0
 2146 00c2 00       		.byte	0
 2147 00c3 0C       		.uleb128 0xc
 2148 00c4 05       		.uleb128 0x5
 2149 00c5 00       		.byte	0
 2150 00c6 03       		.uleb128 0x3
 2151 00c7 0E       		.uleb128 0xe
 2152 00c8 3A       		.uleb128 0x3a
 2153 00c9 0B       		.uleb128 0xb
 2154 00ca 3B       		.uleb128 0x3b
 2155 00cb 05       		.uleb128 0x5
 2156 00cc 49       		.uleb128 0x49
 2157 00cd 13       		.uleb128 0x13
 2158 00ce 02       		.uleb128 0x2
 2159 00cf 18       		.uleb128 0x18
 2160 00d0 00       		.byte	0
 2161 00d1 00       		.byte	0
 2162 00d2 0D       		.uleb128 0xd
 2163 00d3 34       		.uleb128 0x34
 2164 00d4 00       		.byte	0
 2165 00d5 03       		.uleb128 0x3
 2166 00d6 08       		.uleb128 0x8
 2167 00d7 3A       		.uleb128 0x3a
 2168 00d8 0B       		.uleb128 0xb
 2169 00d9 3B       		.uleb128 0x3b
 2170 00da 05       		.uleb128 0x5
 2171 00db 49       		.uleb128 0x49
 2172 00dc 13       		.uleb128 0x13
 2173 00dd 02       		.uleb128 0x2
 2174 00de 18       		.uleb128 0x18
 2175 00df 00       		.byte	0
 2176 00e0 00       		.byte	0
 2177 00e1 0E       		.uleb128 0xe
 2178 00e2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 73


 2179 00e3 00       		.byte	0
 2180 00e4 3F       		.uleb128 0x3f
 2181 00e5 19       		.uleb128 0x19
 2182 00e6 03       		.uleb128 0x3
 2183 00e7 0E       		.uleb128 0xe
 2184 00e8 3A       		.uleb128 0x3a
 2185 00e9 0B       		.uleb128 0xb
 2186 00ea 3B       		.uleb128 0x3b
 2187 00eb 05       		.uleb128 0x5
 2188 00ec 27       		.uleb128 0x27
 2189 00ed 19       		.uleb128 0x19
 2190 00ee 49       		.uleb128 0x49
 2191 00ef 13       		.uleb128 0x13
 2192 00f0 11       		.uleb128 0x11
 2193 00f1 01       		.uleb128 0x1
 2194 00f2 12       		.uleb128 0x12
 2195 00f3 06       		.uleb128 0x6
 2196 00f4 40       		.uleb128 0x40
 2197 00f5 18       		.uleb128 0x18
 2198 00f6 9742     		.uleb128 0x2117
 2199 00f8 19       		.uleb128 0x19
 2200 00f9 00       		.byte	0
 2201 00fa 00       		.byte	0
 2202 00fb 0F       		.uleb128 0xf
 2203 00fc 2E       		.uleb128 0x2e
 2204 00fd 01       		.byte	0x1
 2205 00fe 3F       		.uleb128 0x3f
 2206 00ff 19       		.uleb128 0x19
 2207 0100 03       		.uleb128 0x3
 2208 0101 0E       		.uleb128 0xe
 2209 0102 3A       		.uleb128 0x3a
 2210 0103 0B       		.uleb128 0xb
 2211 0104 3B       		.uleb128 0x3b
 2212 0105 05       		.uleb128 0x5
 2213 0106 27       		.uleb128 0x27
 2214 0107 19       		.uleb128 0x19
 2215 0108 11       		.uleb128 0x11
 2216 0109 01       		.uleb128 0x1
 2217 010a 12       		.uleb128 0x12
 2218 010b 06       		.uleb128 0x6
 2219 010c 40       		.uleb128 0x40
 2220 010d 18       		.uleb128 0x18
 2221 010e 9742     		.uleb128 0x2117
 2222 0110 19       		.uleb128 0x19
 2223 0111 01       		.uleb128 0x1
 2224 0112 13       		.uleb128 0x13
 2225 0113 00       		.byte	0
 2226 0114 00       		.byte	0
 2227 0115 10       		.uleb128 0x10
 2228 0116 34       		.uleb128 0x34
 2229 0117 00       		.byte	0
 2230 0118 03       		.uleb128 0x3
 2231 0119 0E       		.uleb128 0xe
 2232 011a 3A       		.uleb128 0x3a
 2233 011b 0B       		.uleb128 0xb
 2234 011c 3B       		.uleb128 0x3b
 2235 011d 0B       		.uleb128 0xb
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 74


 2236 011e 49       		.uleb128 0x49
 2237 011f 13       		.uleb128 0x13
 2238 0120 3F       		.uleb128 0x3f
 2239 0121 19       		.uleb128 0x19
 2240 0122 02       		.uleb128 0x2
 2241 0123 18       		.uleb128 0x18
 2242 0124 00       		.byte	0
 2243 0125 00       		.byte	0
 2244 0126 11       		.uleb128 0x11
 2245 0127 01       		.uleb128 0x1
 2246 0128 01       		.byte	0x1
 2247 0129 49       		.uleb128 0x49
 2248 012a 13       		.uleb128 0x13
 2249 012b 01       		.uleb128 0x1
 2250 012c 13       		.uleb128 0x13
 2251 012d 00       		.byte	0
 2252 012e 00       		.byte	0
 2253 012f 12       		.uleb128 0x12
 2254 0130 21       		.uleb128 0x21
 2255 0131 00       		.byte	0
 2256 0132 49       		.uleb128 0x49
 2257 0133 13       		.uleb128 0x13
 2258 0134 2F       		.uleb128 0x2f
 2259 0135 0B       		.uleb128 0xb
 2260 0136 00       		.byte	0
 2261 0137 00       		.byte	0
 2262 0138 13       		.uleb128 0x13
 2263 0139 0F       		.uleb128 0xf
 2264 013a 00       		.byte	0
 2265 013b 0B       		.uleb128 0xb
 2266 013c 0B       		.uleb128 0xb
 2267 013d 49       		.uleb128 0x49
 2268 013e 13       		.uleb128 0x13
 2269 013f 00       		.byte	0
 2270 0140 00       		.byte	0
 2271 0141 14       		.uleb128 0x14
 2272 0142 26       		.uleb128 0x26
 2273 0143 00       		.byte	0
 2274 0144 49       		.uleb128 0x49
 2275 0145 13       		.uleb128 0x13
 2276 0146 00       		.byte	0
 2277 0147 00       		.byte	0
 2278 0148 00       		.byte	0
 2279              		.section	.debug_aranges,"",%progbits
 2280 0000 A4000000 		.4byte	0xa4
 2281 0004 0200     		.2byte	0x2
 2282 0006 00000000 		.4byte	.Ldebug_info0
 2283 000a 04       		.byte	0x4
 2284 000b 00       		.byte	0
 2285 000c 0000     		.2byte	0
 2286 000e 0000     		.2byte	0
 2287 0010 00000000 		.4byte	.LFB0
 2288 0014 F4000000 		.4byte	.LFE0-.LFB0
 2289 0018 00000000 		.4byte	.LFB1
 2290 001c 98000000 		.4byte	.LFE1-.LFB1
 2291 0020 00000000 		.4byte	.LFB2
 2292 0024 24000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 75


 2293 0028 00000000 		.4byte	.LFB3
 2294 002c 98000000 		.4byte	.LFE3-.LFB3
 2295 0030 00000000 		.4byte	.LFB4
 2296 0034 50000000 		.4byte	.LFE4-.LFB4
 2297 0038 00000000 		.4byte	.LFB5
 2298 003c 50000000 		.4byte	.LFE5-.LFB5
 2299 0040 00000000 		.4byte	.LFB6
 2300 0044 34000000 		.4byte	.LFE6-.LFB6
 2301 0048 00000000 		.4byte	.LFB7
 2302 004c 58000000 		.4byte	.LFE7-.LFB7
 2303 0050 00000000 		.4byte	.LFB8
 2304 0054 1C000000 		.4byte	.LFE8-.LFB8
 2305 0058 00000000 		.4byte	.LFB9
 2306 005c 20000000 		.4byte	.LFE9-.LFB9
 2307 0060 00000000 		.4byte	.LFB10
 2308 0064 28000000 		.4byte	.LFE10-.LFB10
 2309 0068 00000000 		.4byte	.LFB11
 2310 006c 6C000000 		.4byte	.LFE11-.LFB11
 2311 0070 00000000 		.4byte	.LFB12
 2312 0074 70000000 		.4byte	.LFE12-.LFB12
 2313 0078 00000000 		.4byte	.LFB13
 2314 007c 5C000000 		.4byte	.LFE13-.LFB13
 2315 0080 00000000 		.4byte	.LFB14
 2316 0084 98000000 		.4byte	.LFE14-.LFB14
 2317 0088 00000000 		.4byte	.LFB15
 2318 008c 2C000000 		.4byte	.LFE15-.LFB15
 2319 0090 00000000 		.4byte	.LFB16
 2320 0094 20000000 		.4byte	.LFE16-.LFB16
 2321 0098 00000000 		.4byte	.LFB17
 2322 009c 20000000 		.4byte	.LFE17-.LFB17
 2323 00a0 00000000 		.4byte	0
 2324 00a4 00000000 		.4byte	0
 2325              		.section	.debug_ranges,"",%progbits
 2326              	.Ldebug_ranges0:
 2327 0000 00000000 		.4byte	.LFB0
 2328 0004 F4000000 		.4byte	.LFE0
 2329 0008 00000000 		.4byte	.LFB1
 2330 000c 98000000 		.4byte	.LFE1
 2331 0010 00000000 		.4byte	.LFB2
 2332 0014 24000000 		.4byte	.LFE2
 2333 0018 00000000 		.4byte	.LFB3
 2334 001c 98000000 		.4byte	.LFE3
 2335 0020 00000000 		.4byte	.LFB4
 2336 0024 50000000 		.4byte	.LFE4
 2337 0028 00000000 		.4byte	.LFB5
 2338 002c 50000000 		.4byte	.LFE5
 2339 0030 00000000 		.4byte	.LFB6
 2340 0034 34000000 		.4byte	.LFE6
 2341 0038 00000000 		.4byte	.LFB7
 2342 003c 58000000 		.4byte	.LFE7
 2343 0040 00000000 		.4byte	.LFB8
 2344 0044 1C000000 		.4byte	.LFE8
 2345 0048 00000000 		.4byte	.LFB9
 2346 004c 20000000 		.4byte	.LFE9
 2347 0050 00000000 		.4byte	.LFB10
 2348 0054 28000000 		.4byte	.LFE10
 2349 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 76


 2350 005c 6C000000 		.4byte	.LFE11
 2351 0060 00000000 		.4byte	.LFB12
 2352 0064 70000000 		.4byte	.LFE12
 2353 0068 00000000 		.4byte	.LFB13
 2354 006c 5C000000 		.4byte	.LFE13
 2355 0070 00000000 		.4byte	.LFB14
 2356 0074 98000000 		.4byte	.LFE14
 2357 0078 00000000 		.4byte	.LFB15
 2358 007c 2C000000 		.4byte	.LFE15
 2359 0080 00000000 		.4byte	.LFB16
 2360 0084 20000000 		.4byte	.LFE16
 2361 0088 00000000 		.4byte	.LFB17
 2362 008c 20000000 		.4byte	.LFE17
 2363 0090 00000000 		.4byte	0
 2364 0094 00000000 		.4byte	0
 2365              		.section	.debug_line,"",%progbits
 2366              	.Ldebug_line0:
 2367 0000 36020000 		.section	.debug_str,"MS",%progbits,1
 2367      02004900 
 2367      00000201 
 2367      FB0E0D00 
 2367      01010101 
 2368              	.LASF10:
 2369 0000 75696E74 		.ascii	"uint16\000"
 2369      313600
 2370              	.LASF26:
 2371 0007 736E7349 		.ascii	"snsIndex\000"
 2371      6E646578 
 2371      00
 2372              	.LASF59:
 2373 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2373      43313120 
 2373      352E342E 
 2373      31203230 
 2373      31363036 
 2374 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2374      20726576 
 2374      6973696F 
 2374      6E203233 
 2374      37373135 
 2375 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2375      66756E63 
 2375      74696F6E 
 2375      2D736563 
 2375      74696F6E 
 2376              	.LASF41:
 2377 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2377      656E7365 
 2377      5F435344 
 2377      5F536574 
 2377      50726573 
 2378              	.LASF7:
 2379 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2379      206C6F6E 
 2379      6720756E 
 2379      7369676E 
 2379      65642069 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 77


 2380              	.LASF53:
 2381 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2381      656E7365 
 2381      5F435344 
 2381      5F6D6173 
 2381      6B546162 
 2382              	.LASF52:
 2383 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2383      656E7365 
 2383      5F435344 
 2383      5F706F72 
 2383      74546162 
 2384              	.LASF6:
 2385 00fd 6C6F6E67 		.ascii	"long long int\000"
 2385      206C6F6E 
 2385      6720696E 
 2385      7400
 2386              	.LASF0:
 2387 010b 7369676E 		.ascii	"signed char\000"
 2387      65642063 
 2387      68617200 
 2388              	.LASF48:
 2389 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2389      656E7365 
 2389      5F435344 
 2389      5F73656E 
 2389      736F7249 
 2390              	.LASF19:
 2391 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
 2391      656E7365 
 2391      5F435344 
 2391      5F496E69 
 2391      7400
 2392              	.LASF4:
 2393 0142 6C6F6E67 		.ascii	"long int\000"
 2393      20696E74 
 2393      00
 2394              	.LASF58:
 2395 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2395      656E7365 
 2395      5F435344 
 2395      5F776964 
 2395      6765744E 
 2396              	.LASF54:
 2397 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2397      656E7365 
 2397      5F435344 
 2397      5F637354 
 2397      61626C65 
 2398              	.LASF9:
 2399 017a 75696E74 		.ascii	"uint8\000"
 2399      3800
 2400              	.LASF13:
 2401 0180 646F7562 		.ascii	"double\000"
 2401      6C6500
 2402              	.LASF46:
 2403 0187 43617053 		.ascii	"CapSense_CSD_initVar\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 78


 2403      656E7365 
 2403      5F435344 
 2403      5F696E69 
 2403      74566172 
 2404              	.LASF11:
 2405 019c 75696E74 		.ascii	"uint32\000"
 2405      333200
 2406              	.LASF31:
 2407 01a3 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2407      656E7365 
 2407      5F435344 
 2407      5F536361 
 2407      6E456E61 
 2408              	.LASF37:
 2409 01c3 6D61736B 		.ascii	"mask\000"
 2409      00
 2410              	.LASF34:
 2411 01c8 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2411      656E7365 
 2411      5F435344 
 2411      5F436C65 
 2411      61725365 
 2412              	.LASF36:
 2413 01e2 706F7274 		.ascii	"port\000"
 2413      00
 2414              	.LASF39:
 2415 01e7 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2415      656E7365 
 2415      5F435344 
 2415      5F507265 
 2415      5363616E 
 2416              	.LASF8:
 2417 01fc 756E7369 		.ascii	"unsigned int\000"
 2417      676E6564 
 2417      20696E74 
 2417      00
 2418              	.LASF5:
 2419 0209 6C6F6E67 		.ascii	"long unsigned int\000"
 2419      20756E73 
 2419      69676E65 
 2419      6420696E 
 2419      7400
 2420              	.LASF60:
 2421 021b 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2421      72617465 
 2421      645F536F 
 2421      75726365 
 2421      5C50536F 
 2422              	.LASF57:
 2423 0241 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2423      656E7365 
 2423      5F435344 
 2423      5F616E61 
 2423      6C6F6753 
 2424              	.LASF3:
 2425 0262 73686F72 		.ascii	"short unsigned int\000"
 2425      7420756E 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 79


 2425      7369676E 
 2425      65642069 
 2425      6E7400
 2426              	.LASF30:
 2427 0275 73656E73 		.ascii	"sensor\000"
 2427      6F7200
 2428              	.LASF38:
 2429 027c 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2429      656E7365 
 2429      5F435344 
 2429      5F446973 
 2429      61626C65 
 2430              	.LASF40:
 2431 0297 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2431      656E7365 
 2431      5F435344 
 2431      5F506F73 
 2431      74536361 
 2432              	.LASF27:
 2433 02ad 736C6F74 		.ascii	"slot\000"
 2433      00
 2434              	.LASF51:
 2435 02b2 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2435      656E7365 
 2435      5F435344 
 2435      5F706354 
 2435      61626C65 
 2436              	.LASF29:
 2437 02c7 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2437      656E7365 
 2437      5F435344 
 2437      5F536361 
 2437      6E53656E 
 2438              	.LASF16:
 2439 02df 72656733 		.ascii	"reg32\000"
 2439      3200
 2440              	.LASF35:
 2441 02e5 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2441      656E7365 
 2441      5F435344 
 2441      5F456E61 
 2441      626C6553 
 2442              	.LASF18:
 2443 02ff 73697A65 		.ascii	"sizetype\000"
 2443      74797065 
 2443      00
 2444              	.LASF17:
 2445 0308 6C6F6E67 		.ascii	"long double\000"
 2445      20646F75 
 2445      626C6500 
 2446              	.LASF22:
 2447 0314 43617053 		.ascii	"CapSense_CSD_Start\000"
 2447      656E7365 
 2447      5F435344 
 2447      5F537461 
 2447      727400
 2448              	.LASF45:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 80


 2449 0327 7363616E 		.ascii	"scanSpeed\000"
 2449      53706565 
 2449      6400
 2450              	.LASF24:
 2451 0331 656E4D61 		.ascii	"enMask\000"
 2451      736B00
 2452              	.LASF50:
 2453 0338 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2453      656E7365 
 2453      5F435344 
 2453      5F73656E 
 2453      736F7245 
 2454              	.LASF12:
 2455 0356 666C6F61 		.ascii	"float\000"
 2455      7400
 2456              	.LASF42:
 2457 035c 70726573 		.ascii	"prescaler\000"
 2457      63616C65 
 2457      7200
 2458              	.LASF43:
 2459 0366 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2459      656E7365 
 2459      5F435344 
 2459      5F476574 
 2459      50726573 
 2460              	.LASF15:
 2461 0380 72656738 		.ascii	"reg8\000"
 2461      00
 2462              	.LASF1:
 2463 0385 756E7369 		.ascii	"unsigned char\000"
 2463      676E6564 
 2463      20636861 
 2463      7200
 2464              	.LASF2:
 2465 0393 73686F72 		.ascii	"short int\000"
 2465      7420696E 
 2465      7400
 2466              	.LASF28:
 2467 039d 77696467 		.ascii	"widget\000"
 2467      657400
 2468              	.LASF62:
 2469 03a4 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2469      656E7365 
 2469      5F435344 
 2469      5F497342 
 2469      75737900 
 2470              	.LASF49:
 2471 03b8 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2471      656E7365 
 2471      5F435344 
 2471      5F73656E 
 2471      736F7252 
 2472              	.LASF44:
 2473 03cf 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2473      656E7365 
 2473      5F435344 
 2473      5F536574 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 81


 2473      5363616E 
 2474              	.LASF61:
 2475 03e9 483A5C50 		.ascii	"H:\\P4P\\New\\P4P_Project-130\\Capsense_stuff\\Cap_"
 2475      34505C4E 
 2475      65775C50 
 2475      34505F50 
 2475      726F6A65 
 2476 0417 53656E73 		.ascii	"Sense.cydsn\\CapSense_CSD_WithTuner01.cydsn\000"
 2476      652E6379 
 2476      64736E5C 
 2476      43617053 
 2476      656E7365 
 2477              	.LASF23:
 2478 0442 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2478      656E7365 
 2478      5F435344 
 2478      5F53746F 
 2478      7000
 2479              	.LASF14:
 2480 0454 63686172 		.ascii	"char\000"
 2480      00
 2481              	.LASF25:
 2482 0459 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2482      656E7365 
 2482      5F435344 
 2482      5F536574 
 2482      5363616E 
 2483              	.LASF33:
 2484 047a 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2484      656E7365 
 2484      5F435344 
 2484      5F526561 
 2484      6453656E 
 2485              	.LASF56:
 2486 0495 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2486      656E7365 
 2486      5F435344 
 2486      5F776964 
 2486      67657452 
 2487              	.LASF55:
 2488 04b3 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2488      656E7365 
 2488      5F435344 
 2488      5F696461 
 2488      63536574 
 2489              	.LASF20:
 2490 04cd 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2490      656E7365 
 2490      5F435344 
 2490      5F456E61 
 2490      626C6500 
 2491              	.LASF21:
 2492 04e1 656E6162 		.ascii	"enableInterrupts\000"
 2492      6C65496E 
 2492      74657272 
 2492      75707473 
 2492      00
ARM GAS  C:\Users\ash750\AppData\Local\Temp\ccOTQEhU.s 			page 82


 2493              	.LASF32:
 2494 04f2 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2494      656E7365 
 2494      5F435344 
 2494      5F46696E 
 2494      644E6578 
 2495              	.LASF47:
 2496 050e 43617053 		.ascii	"CapSense_CSD_csv\000"
 2496      656E7365 
 2496      5F435344 
 2496      5F637376 
 2496      00
 2497              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
