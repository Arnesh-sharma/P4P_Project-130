ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_CSD_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_CSD_csv,1,1
  23              		.comm	CapSense_CSD_sensorIndex,1,1
  24              		.comm	CapSense_CSD_sensorRaw,14,4
  25              		.global	CapSense_CSD_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_CSD_sensorEnableMask, %object
  29              		.size	CapSense_CSD_sensorEnableMask, 1
  30              	CapSense_CSD_sensorEnableMask:
  31 0000 7F       		.byte	127
  32              		.global	CapSense_CSD_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_CSD_pcTable, %object
  36              		.size	CapSense_CSD_pcTable, 28
  37              	CapSense_CSD_pcTable:
  38 0000 05500040 		.word	1073762309
  39 0004 06500040 		.word	1073762310
  40 0008 00500040 		.word	1073762304
  41 000c 01500040 		.word	1073762305
  42 0010 02500040 		.word	1073762306
  43 0014 03500040 		.word	1073762307
  44 0018 04500040 		.word	1073762308
  45              		.global	CapSense_CSD_portTable
  46              		.align	2
  47              		.type	CapSense_CSD_portTable, %object
  48              		.size	CapSense_CSD_portTable, 7
  49              	CapSense_CSD_portTable:
  50 001c 00000000 		.space	7
  50      000000
  51              		.global	CapSense_CSD_maskTable
  52 0023 00       		.align	2
  53              		.type	CapSense_CSD_maskTable, %object
  54              		.size	CapSense_CSD_maskTable, 7
  55              	CapSense_CSD_maskTable:
  56 0024 20       		.byte	32
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 2


  57 0025 40       		.byte	64
  58 0026 01       		.byte	1
  59 0027 02       		.byte	2
  60 0028 04       		.byte	4
  61 0029 08       		.byte	8
  62 002a 10       		.byte	16
  63              		.global	CapSense_CSD_csTable
  64 002b 00       		.align	2
  65              		.type	CapSense_CSD_csTable, %object
  66              		.size	CapSense_CSD_csTable, 32
  67              	CapSense_CSD_csTable:
  68 002c 06520040 		.word	1073762822
  69 0030 0E520040 		.word	1073762830
  70 0034 16520040 		.word	1073762838
  71 0038 1E520040 		.word	1073762846
  72 003c 26520040 		.word	1073762854
  73 0040 2E520040 		.word	1073762862
  74 0044 36520040 		.word	1073762870
  75 0048 7E520040 		.word	1073762942
  76              		.global	CapSense_CSD_idacSettings
  77              		.data
  78 0001 000000   		.align	2
  79              		.type	CapSense_CSD_idacSettings, %object
  80              		.size	CapSense_CSD_idacSettings, 7
  81              	CapSense_CSD_idacSettings:
  82 0004 2B       		.byte	43
  83 0005 29       		.byte	41
  84 0006 30       		.byte	48
  85 0007 31       		.byte	49
  86 0008 29       		.byte	41
  87 0009 26       		.byte	38
  88 000a 22       		.byte	34
  89              		.global	CapSense_CSD_widgetResolution
  90 000b 00       		.align	2
  91              		.type	CapSense_CSD_widgetResolution, %object
  92              		.size	CapSense_CSD_widgetResolution, 3
  93              	CapSense_CSD_widgetResolution:
  94 000c 3F       		.byte	63
  95 000d 3F       		.byte	63
  96 000e 1F       		.byte	31
  97              		.global	CapSense_CSD_analogSwitchDivider
  98 000f 00       		.align	2
  99              		.type	CapSense_CSD_analogSwitchDivider, %object
 100              		.size	CapSense_CSD_analogSwitchDivider, 7
 101              	CapSense_CSD_analogSwitchDivider:
 102 0010 02       		.byte	2
 103 0011 02       		.byte	2
 104 0012 03       		.byte	3
 105 0013 03       		.byte	3
 106 0014 03       		.byte	3
 107 0015 03       		.byte	3
 108 0016 03       		.byte	3
 109              		.global	CapSense_CSD_widgetNumber
 110              		.section	.rodata
 111              		.align	2
 112              		.type	CapSense_CSD_widgetNumber, %object
 113              		.size	CapSense_CSD_widgetNumber, 7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 3


 114              	CapSense_CSD_widgetNumber:
 115 004c 01       		.byte	1
 116 004d 02       		.byte	2
 117 004e 00       		.byte	0
 118 004f 00       		.byte	0
 119 0050 00       		.byte	0
 120 0051 00       		.byte	0
 121 0052 00       		.byte	0
 122              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 123              		.align	2
 124              		.global	CapSense_CSD_Init
 125              		.thumb
 126              		.thumb_func
 127              		.type	CapSense_CSD_Init, %function
 128              	CapSense_CSD_Init:
 129              	.LFB0:
 130              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 4


  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x7Fu, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PC, 
  50:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PC, 
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PC, 
  52:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PC, 
  53:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PC, 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  57:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  58:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__PORT, 
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PORT, 
  61:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PORT, 
  62:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PORT, 
  63:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PORT, 
  64:Generated_Source\PSoC5/CapSense_CSD.c **** };
  65:Generated_Source\PSoC5/CapSense_CSD.c **** 
  66:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  67:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  68:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__MASK,
  69:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__MASK,
  70:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__MASK,
  71:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__MASK,
  72:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__MASK,
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__MASK,
  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  78:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  79:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  80:Generated_Source\PSoC5/CapSense_CSD.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_idacSettings[] = {
  83:Generated_Source\PSoC5/CapSense_CSD.c ****     43u,41u,48u,49u,41u,38u,34u,
  84:Generated_Source\PSoC5/CapSense_CSD.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_widgetResolution[] = {
  87:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  88:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  89:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_13_BITS,
  90:Generated_Source\PSoC5/CapSense_CSD.c **** };
  91:Generated_Source\PSoC5/CapSense_CSD.c **** 
  92:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  93:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, 2u, 3u, 3u, 3u, 3u, 3u, 
  94:Generated_Source\PSoC5/CapSense_CSD.c **** };
  95:Generated_Source\PSoC5/CapSense_CSD.c **** 
  96:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  97:Generated_Source\PSoC5/CapSense_CSD.c ****     1u, /* Button0__BTN */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 5


  98:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, /* Button1__BTN */
  99:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 100:Generated_Source\PSoC5/CapSense_CSD.c ****     
 101:Generated_Source\PSoC5/CapSense_CSD.c **** };
 102:Generated_Source\PSoC5/CapSense_CSD.c **** 
 103:Generated_Source\PSoC5/CapSense_CSD.c **** 
 104:Generated_Source\PSoC5/CapSense_CSD.c **** 
 105:Generated_Source\PSoC5/CapSense_CSD.c **** 
 106:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 108:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 109:Generated_Source\PSoC5/CapSense_CSD.c **** *
 110:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 111:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
 112:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
 113:Generated_Source\PSoC5/CapSense_CSD.c **** *
 114:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 115:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 116:Generated_Source\PSoC5/CapSense_CSD.c **** *
 117:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 118:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 119:Generated_Source\PSoC5/CapSense_CSD.c **** *
 120:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 121:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 122:Generated_Source\PSoC5/CapSense_CSD.c **** {
 131              		.loc 1 122 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 82B0     		sub	sp, sp, #8
 140              		.cfi_def_cfa_offset 16
 141 0004 00AF     		add	r7, sp, #0
 142              		.cfi_def_cfa_register 7
 123:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 124:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 125:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 126:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 127:Generated_Source\PSoC5/CapSense_CSD.c ****         
 128:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 130:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 131:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 132:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 134:Generated_Source\PSoC5/CapSense_CSD.c ****     
 135:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 136:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 143              		.loc 1 136 0
 144 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 137:Generated_Source\PSoC5/CapSense_CSD.c **** 
 138:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 139:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 6


 141:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 143:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 144:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 145:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 146:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 148:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 149:Generated_Source\PSoC5/CapSense_CSD.c **** 
 150:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 151:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 153:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 154:Generated_Source\PSoC5/CapSense_CSD.c **** 
 155:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 156:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         
 166:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 172:Generated_Source\PSoC5/CapSense_CSD.c ****         
 173:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 174:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 175:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 176:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 177:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 178:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 180:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 181:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 188:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         
 191:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 193:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 194:Generated_Source\PSoC5/CapSense_CSD.c ****     
 195:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 145              		.loc 1 196 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 7


 146 000a 2E4B     		ldr	r3, .L2
 147 000c 0722     		movs	r2, #7
 148 000e 1A70     		strb	r2, [r3]
 197:Generated_Source\PSoC5/CapSense_CSD.c ****     
 198:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 199:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 206:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 207:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 209:Generated_Source\PSoC5/CapSense_CSD.c ****     
 210:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 211:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 212:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 149              		.loc 1 212 0
 150 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 151 0014 0346     		mov	r3, r0
 152 0016 FB71     		strb	r3, [r7, #7]
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 153              		.loc 1 213 0
 154 0018 2B4A     		ldr	r2, .L2+4
 155 001a 2B4B     		ldr	r3, .L2+4
 156 001c 1B78     		ldrb	r3, [r3]
 157 001e DBB2     		uxtb	r3, r3
 158 0020 43F00303 		orr	r3, r3, #3
 159 0024 DBB2     		uxtb	r3, r3
 160 0026 1370     		strb	r3, [r2]
 214:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 161              		.loc 1 214 0
 162 0028 284A     		ldr	r2, .L2+8
 163 002a 284B     		ldr	r3, .L2+8
 164 002c 1B78     		ldrb	r3, [r3]
 165 002e DBB2     		uxtb	r3, r3
 166 0030 43F00303 		orr	r3, r3, #3
 167 0034 DBB2     		uxtb	r3, r3
 168 0036 1370     		strb	r3, [r2]
 215:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 169              		.loc 1 215 0
 170 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 171 003a 1846     		mov	r0, r3
 172 003c FFF7FEFF 		bl	CyExitCriticalSection
 216:Generated_Source\PSoC5/CapSense_CSD.c ****         
 217:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 218:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 173              		.loc 1 218 0
 174 0040 234B     		ldr	r3, .L2+12
 175 0042 FF22     		movs	r2, #255
 176 0044 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 177              		.loc 1 219 0
 178 0046 234B     		ldr	r3, .L2+16
 179 0048 FF22     		movs	r2, #255
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 8


 180 004a 1A70     		strb	r2, [r3]
 220:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 181              		.loc 1 220 0
 182 004c 224B     		ldr	r3, .L2+20
 183 004e FF22     		movs	r2, #255
 184 0050 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/CapSense_CSD.c ****         
 222:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 223:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 185              		.loc 1 223 0
 186 0052 224B     		ldr	r3, .L2+24
 187 0054 FF22     		movs	r2, #255
 188 0056 1A70     		strb	r2, [r3]
 224:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 189              		.loc 1 224 0
 190 0058 214B     		ldr	r3, .L2+28
 191 005a FF22     		movs	r2, #255
 192 005c 1A70     		strb	r2, [r3]
 225:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 193              		.loc 1 225 0
 194 005e 214B     		ldr	r3, .L2+32
 195 0060 FF22     		movs	r2, #255
 196 0062 1A70     		strb	r2, [r3]
 226:Generated_Source\PSoC5/CapSense_CSD.c ****         
 227:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 228:Generated_Source\PSoC5/CapSense_CSD.c ****     
 229:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 230:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 237:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 238:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 239:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 240:Generated_Source\PSoC5/CapSense_CSD.c ****            
 241:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 242:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 243:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 244:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 245:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 246:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 247:Generated_Source\PSoC5/CapSense_CSD.c ****             
 248:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 249:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 250:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 251:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 252:Generated_Source\PSoC5/CapSense_CSD.c ****             
 253:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 254:Generated_Source\PSoC5/CapSense_CSD.c ****             
 255:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 256:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 257:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 258:Generated_Source\PSoC5/CapSense_CSD.c ****             
 259:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 9


 260:Generated_Source\PSoC5/CapSense_CSD.c ****     
 261:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 262:Generated_Source\PSoC5/CapSense_CSD.c ****     
 263:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 264:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 197              		.loc 1 264 0
 198 0064 204B     		ldr	r3, .L2+36
 199 0066 0122     		movs	r2, #1
 200 0068 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 201              		.loc 1 265 0
 202 006a 2049     		ldr	r1, .L2+40
 203 006c 0020     		movs	r0, #0
 204 006e FFF7FEFF 		bl	CyIntSetVector
 266:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 205              		.loc 1 266 0
 206 0072 0721     		movs	r1, #7
 207 0074 0020     		movs	r0, #0
 208 0076 FFF7FEFF 		bl	CyIntSetPriority
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 269:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 270:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 209              		.loc 1 275 0
 210 007a FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 211              		.loc 1 276 0
 212 007e 0720     		movs	r0, #7
 213 0080 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 277:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 214              		.loc 1 277 0
 215 0084 0820     		movs	r0, #8
 216 0086 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 279:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 217              		.loc 1 279 0
 218 008a 0920     		movs	r0, #9
 219 008c FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 284:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 285:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 286:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 287:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 288:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 289:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 290:Generated_Source\PSoC5/CapSense_CSD.c ****     
 291:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 292:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 293:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 10


 294:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 295:Generated_Source\PSoC5/CapSense_CSD.c ****     
 296:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 220              		.loc 1 297 0
 221 0090 174A     		ldr	r2, .L2+44
 222 0092 174B     		ldr	r3, .L2+44
 223 0094 1B78     		ldrb	r3, [r3]
 224 0096 DBB2     		uxtb	r3, r3
 225 0098 43F00403 		orr	r3, r3, #4
 226 009c DBB2     		uxtb	r3, r3
 227 009e 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 299:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 301:Generated_Source\PSoC5/CapSense_CSD.c ****     
 302:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 303:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 228              		.loc 1 303 0
 229 00a0 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 304:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 305:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 230              		.loc 1 305 0
 231 00a4 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 306:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 232              		.loc 1 306 0
 233 00a8 0020     		movs	r0, #0
 234 00aa FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 307:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 235              		.loc 1 307 0
 236 00ae 0420     		movs	r0, #4
 237 00b0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 308:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 238              		.loc 1 308 0
 239 00b4 0020     		movs	r0, #0
 240 00b6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 309:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 310:Generated_Source\PSoC5/CapSense_CSD.c ****     
 311:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 312:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 313:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 314:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 315:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 316:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 317:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 319:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 320:Generated_Source\PSoC5/CapSense_CSD.c ****     
 321:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 322:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 323:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 324:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 325:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 326:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 327:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 328:Generated_Source\PSoC5/CapSense_CSD.c **** }
 241              		.loc 1 328 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 11


 242 00ba 00BF     		nop
 243 00bc 0837     		adds	r7, r7, #8
 244              		.cfi_def_cfa_offset 8
 245 00be BD46     		mov	sp, r7
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 00c0 80BD     		pop	{r7, pc}
 249              	.L3:
 250 00c2 00BF     		.align	2
 251              	.L2:
 252 00c4 8C640040 		.word	1073767564
 253 00c8 9B640040 		.word	1073767579
 254 00cc 9A640040 		.word	1073767578
 255 00d0 2B640040 		.word	1073767467
 256 00d4 4B640040 		.word	1073767499
 257 00d8 0B640040 		.word	1073767435
 258 00dc 2A640040 		.word	1073767466
 259 00e0 5A640040 		.word	1073767514
 260 00e4 4A640040 		.word	1073767498
 261 00e8 80E100E0 		.word	-536813184
 262 00ec 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 263 00f0 7B640040 		.word	1073767547
 264              		.cfi_endproc
 265              	.LFE0:
 266              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 267              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 268              		.align	2
 269              		.global	CapSense_CSD_Enable
 270              		.thumb
 271              		.thumb_func
 272              		.type	CapSense_CSD_Enable, %function
 273              	CapSense_CSD_Enable:
 274              	.LFB1:
 329:Generated_Source\PSoC5/CapSense_CSD.c **** 
 330:Generated_Source\PSoC5/CapSense_CSD.c **** 
 331:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 332:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 333:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 334:Generated_Source\PSoC5/CapSense_CSD.c **** *
 335:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 336:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 337:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 338:Generated_Source\PSoC5/CapSense_CSD.c **** *
 339:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 340:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSD.c **** *
 342:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 343:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 344:Generated_Source\PSoC5/CapSense_CSD.c **** *
 345:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 346:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 347:Generated_Source\PSoC5/CapSense_CSD.c **** {
 275              		.loc 1 347 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 12


 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 348:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 349:Generated_Source\PSoC5/CapSense_CSD.c ****     
 350:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 287              		.loc 1 350 0
 288 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 289 000a 0346     		mov	r3, r0
 290 000c FB71     		strb	r3, [r7, #7]
 351:Generated_Source\PSoC5/CapSense_CSD.c ****     
 352:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 353:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 354:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 355:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 356:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 358:Generated_Source\PSoC5/CapSense_CSD.c ****         
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 360:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 361:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 362:Generated_Source\PSoC5/CapSense_CSD.c ****     
 363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 364:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 291              		.loc 1 364 0
 292 000e 1C4A     		ldr	r2, .L5
 293 0010 1B4B     		ldr	r3, .L5
 294 0012 1B78     		ldrb	r3, [r3]
 295 0014 DBB2     		uxtb	r3, r3
 296 0016 43F02003 		orr	r3, r3, #32
 297 001a DBB2     		uxtb	r3, r3
 298 001c 1370     		strb	r3, [r2]
 365:Generated_Source\PSoC5/CapSense_CSD.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 367:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 368:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 369:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 371:Generated_Source\PSoC5/CapSense_CSD.c ****         
 372:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 375:Generated_Source\PSoC5/CapSense_CSD.c ****         
 376:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 377:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 378:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 379:Generated_Source\PSoC5/CapSense_CSD.c ****         
 380:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 381:Generated_Source\PSoC5/CapSense_CSD.c ****     
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 384:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 385:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 13


 386:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 387:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 388:Generated_Source\PSoC5/CapSense_CSD.c ****             
 389:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 390:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 391:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 392:Generated_Source\PSoC5/CapSense_CSD.c ****            
 393:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 394:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 396:Generated_Source\PSoC5/CapSense_CSD.c ****         
 397:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     
 399:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 400:Generated_Source\PSoC5/CapSense_CSD.c ****     
 401:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 402:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 403:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 299              		.loc 1 403 0
 300 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
 404:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 405:Generated_Source\PSoC5/CapSense_CSD.c ****     
 406:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 301              		.loc 1 407 0
 302 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 408:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 303              		.loc 1 409 0
 304 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 410:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 411:Generated_Source\PSoC5/CapSense_CSD.c ****     
 412:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 414:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 415:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 416:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 418:Generated_Source\PSoC5/CapSense_CSD.c ****     
 419:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 420:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 421:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 424:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 425:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 426:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 427:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 429:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 305              		.loc 1 429 0
 306 002a 164A     		ldr	r2, .L5+4
 307 002c 154B     		ldr	r3, .L5+4
 308 002e 1B78     		ldrb	r3, [r3]
 309 0030 DBB2     		uxtb	r3, r3
 310 0032 43F01003 		orr	r3, r3, #16
 311 0036 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 14


 312 0038 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 313              		.loc 1 430 0
 314 003a 134A     		ldr	r2, .L5+8
 315 003c 124B     		ldr	r3, .L5+8
 316 003e 1B78     		ldrb	r3, [r3]
 317 0040 DBB2     		uxtb	r3, r3
 318 0042 43F01003 		orr	r3, r3, #16
 319 0046 DBB2     		uxtb	r3, r3
 320 0048 1370     		strb	r3, [r2]
 431:Generated_Source\PSoC5/CapSense_CSD.c ****         
 432:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 433:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 434:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 435:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     
 438:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 440:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 441:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 442:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 443:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 444:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 445:Generated_Source\PSoC5/CapSense_CSD.c ****         
 446:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 447:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 448:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 321              		.loc 1 448 0
 322 004a 104A     		ldr	r2, .L5+12
 323 004c 0F4B     		ldr	r3, .L5+12
 324 004e 1B78     		ldrb	r3, [r3]
 325 0050 DBB2     		uxtb	r3, r3
 326 0052 43F00103 		orr	r3, r3, #1
 327 0056 DBB2     		uxtb	r3, r3
 328 0058 1370     		strb	r3, [r2]
 449:Generated_Source\PSoC5/CapSense_CSD.c ****         
 450:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 451:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 452:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 453:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 454:Generated_Source\PSoC5/CapSense_CSD.c ****     
 455:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 329              		.loc 1 455 0
 330 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 005c 1846     		mov	r0, r3
 332 005e FFF7FEFF 		bl	CyExitCriticalSection
 456:Generated_Source\PSoC5/CapSense_CSD.c ****     
 457:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 458:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 333              		.loc 1 458 0
 334 0062 0B4B     		ldr	r3, .L5+16
 335 0064 0122     		movs	r2, #1
 336 0066 1A60     		str	r2, [r3]
 459:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 460:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 461:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 15


 462:Generated_Source\PSoC5/CapSense_CSD.c ****     
 463:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 464:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 337              		.loc 1 464 0
 338 0068 0A4A     		ldr	r2, .L5+20
 339 006a 0A4B     		ldr	r3, .L5+20
 340 006c 1B78     		ldrb	r3, [r3]
 341 006e DBB2     		uxtb	r3, r3
 342 0070 63F07F03 		orn	r3, r3, #127
 343 0074 DBB2     		uxtb	r3, r3
 344 0076 1370     		strb	r3, [r2]
 465:Generated_Source\PSoC5/CapSense_CSD.c **** }
 345              		.loc 1 465 0
 346 0078 00BF     		nop
 347 007a 0837     		adds	r7, r7, #8
 348              		.cfi_def_cfa_offset 8
 349 007c BD46     		mov	sp, r7
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 007e 80BD     		pop	{r7, pc}
 353              	.L6:
 354              		.align	2
 355              	.L5:
 356 0080 9C640040 		.word	1073767580
 357 0084 BB430040 		.word	1073759163
 358 0088 AB430040 		.word	1073759147
 359 008c 70580040 		.word	1073764464
 360 0090 00E100E0 		.word	-536813312
 361 0094 7B640040 		.word	1073767547
 362              		.cfi_endproc
 363              	.LFE1:
 364              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 365              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 366              		.align	2
 367              		.global	CapSense_CSD_Start
 368              		.thumb
 369              		.thumb_func
 370              		.type	CapSense_CSD_Start, %function
 371              	CapSense_CSD_Start:
 372              	.LFB2:
 466:Generated_Source\PSoC5/CapSense_CSD.c **** 
 467:Generated_Source\PSoC5/CapSense_CSD.c **** 
 468:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 469:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 470:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 471:Generated_Source\PSoC5/CapSense_CSD.c **** *
 472:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 477:Generated_Source\PSoC5/CapSense_CSD.c **** *
 478:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 479:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 480:Generated_Source\PSoC5/CapSense_CSD.c **** *
 481:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 482:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 16


 483:Generated_Source\PSoC5/CapSense_CSD.c **** *
 484:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 485:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 486:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 487:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 488:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 489:Generated_Source\PSoC5/CapSense_CSD.c **** *
 490:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 491:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 492:Generated_Source\PSoC5/CapSense_CSD.c **** *
 493:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 494:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 495:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 496:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 497:Generated_Source\PSoC5/CapSense_CSD.c **** *
 498:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 499:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 500:Generated_Source\PSoC5/CapSense_CSD.c **** {
 373              		.loc 1 500 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377 0000 80B5     		push	{r7, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 00AF     		add	r7, sp, #0
 382              		.cfi_def_cfa_register 7
 501:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 383              		.loc 1 501 0
 384 0004 064B     		ldr	r3, .L9
 385 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 0008 002B     		cmp	r3, #0
 387 000a 04D1     		bne	.L8
 502:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 503:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 388              		.loc 1 503 0
 389 000c FFF7FEFF 		bl	CapSense_CSD_Init
 504:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 390              		.loc 1 504 0
 391 0010 034B     		ldr	r3, .L9
 392 0012 0122     		movs	r2, #1
 393 0014 1A70     		strb	r2, [r3]
 394              	.L8:
 505:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 506:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 395              		.loc 1 506 0
 396 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 507:Generated_Source\PSoC5/CapSense_CSD.c ****     
 508:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 509:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 510:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 511:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 512:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 513:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 514:Generated_Source\PSoC5/CapSense_CSD.c **** }
 397              		.loc 1 514 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 17


 398 001a 00BF     		nop
 399 001c 80BD     		pop	{r7, pc}
 400              	.L10:
 401 001e 00BF     		.align	2
 402              	.L9:
 403 0020 00000000 		.word	CapSense_CSD_initVar
 404              		.cfi_endproc
 405              	.LFE2:
 406              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 407              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 408              		.align	2
 409              		.global	CapSense_CSD_Stop
 410              		.thumb
 411              		.thumb_func
 412              		.type	CapSense_CSD_Stop, %function
 413              	CapSense_CSD_Stop:
 414              	.LFB3:
 515:Generated_Source\PSoC5/CapSense_CSD.c **** 
 516:Generated_Source\PSoC5/CapSense_CSD.c **** 
 517:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 518:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 519:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 520:Generated_Source\PSoC5/CapSense_CSD.c **** *
 521:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 522:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 523:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 524:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 525:Generated_Source\PSoC5/CapSense_CSD.c **** *
 526:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 527:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 528:Generated_Source\PSoC5/CapSense_CSD.c **** *
 529:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 530:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 531:Generated_Source\PSoC5/CapSense_CSD.c **** *
 532:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 533:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 534:Generated_Source\PSoC5/CapSense_CSD.c **** *
 535:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 536:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 537:Generated_Source\PSoC5/CapSense_CSD.c **** {
 415              		.loc 1 537 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 425              		.loc 1 539 0
 426 0004 1E4A     		ldr	r2, .L12
 427 0006 1E4B     		ldr	r3, .L12
 428 0008 1B78     		ldrb	r3, [r3]
 429 000a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 18


 430 000c 23F00203 		bic	r3, r3, #2
 431 0010 DBB2     		uxtb	r3, r3
 432 0012 1370     		strb	r3, [r2]
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 433              		.loc 1 542 0
 434 0014 1B4B     		ldr	r3, .L12+4
 435 0016 0122     		movs	r2, #1
 436 0018 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 545:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 546:Generated_Source\PSoC5/CapSense_CSD.c ****     
 547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 548:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 437              		.loc 1 548 0
 438 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 549:Generated_Source\PSoC5/CapSense_CSD.c ****     
 550:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 551:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 552:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 553:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 556:Generated_Source\PSoC5/CapSense_CSD.c ****         
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 558:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 560:Generated_Source\PSoC5/CapSense_CSD.c ****     
 561:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 562:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 439              		.loc 1 562 0
 440 001e 1A4A     		ldr	r2, .L12+8
 441 0020 194B     		ldr	r3, .L12+8
 442 0022 1B78     		ldrb	r3, [r3]
 443 0024 DBB2     		uxtb	r3, r3
 444 0026 23F02003 		bic	r3, r3, #32
 445 002a DBB2     		uxtb	r3, r3
 446 002c 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/CapSense_CSD.c ****     
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 565:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 566:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 567:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 569:Generated_Source\PSoC5/CapSense_CSD.c **** 
 570:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 573:Generated_Source\PSoC5/CapSense_CSD.c **** 
 574:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 575:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 576:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 577:Generated_Source\PSoC5/CapSense_CSD.c ****         
 578:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 579:Generated_Source\PSoC5/CapSense_CSD.c ****     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 19


 580:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 581:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 582:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 583:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 584:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 585:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 588:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 589:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 590:Generated_Source\PSoC5/CapSense_CSD.c ****            
 591:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 592:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 593:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 594:Generated_Source\PSoC5/CapSense_CSD.c ****         
 595:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     
 597:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 598:Generated_Source\PSoC5/CapSense_CSD.c ****     
 599:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 600:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 601:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 447              		.loc 1 601 0
 448 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 602:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 603:Generated_Source\PSoC5/CapSense_CSD.c ****     
 604:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 449              		.loc 1 605 0
 450 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 606:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 607:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 451              		.loc 1 607 0
 452 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 608:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 609:Generated_Source\PSoC5/CapSense_CSD.c ****     
 610:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 612:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 614:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 615:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 616:Generated_Source\PSoC5/CapSense_CSD.c ****     
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 618:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 619:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 620:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 621:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 622:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 623:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 624:Generated_Source\PSoC5/CapSense_CSD.c **** 
 625:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 626:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 627:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 628:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 629:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 453              		.loc 1 629 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 20


 454 003a 144A     		ldr	r2, .L12+12
 455 003c 134B     		ldr	r3, .L12+12
 456 003e 1B78     		ldrb	r3, [r3]
 457 0040 DBB2     		uxtb	r3, r3
 458 0042 23F00103 		bic	r3, r3, #1
 459 0046 DBB2     		uxtb	r3, r3
 460 0048 1370     		strb	r3, [r2]
 630:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 461              		.loc 1 630 0
 462 004a 114A     		ldr	r2, .L12+16
 463 004c 104B     		ldr	r3, .L12+16
 464 004e 1B78     		ldrb	r3, [r3]
 465 0050 DBB2     		uxtb	r3, r3
 466 0052 23F01003 		bic	r3, r3, #16
 467 0056 DBB2     		uxtb	r3, r3
 468 0058 1370     		strb	r3, [r2]
 631:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 469              		.loc 1 631 0
 470 005a 0E4A     		ldr	r2, .L12+20
 471 005c 0D4B     		ldr	r3, .L12+20
 472 005e 1B78     		ldrb	r3, [r3]
 473 0060 DBB2     		uxtb	r3, r3
 474 0062 23F01003 		bic	r3, r3, #16
 475 0066 DBB2     		uxtb	r3, r3
 476 0068 1370     		strb	r3, [r2]
 632:Generated_Source\PSoC5/CapSense_CSD.c ****         
 633:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 634:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 635:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 637:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 639:Generated_Source\PSoC5/CapSense_CSD.c ****     
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 477              		.loc 1 641 0
 478 006a 054A     		ldr	r2, .L12
 479 006c 044B     		ldr	r3, .L12
 480 006e 1B78     		ldrb	r3, [r3]
 481 0070 DBB2     		uxtb	r3, r3
 482 0072 03F07F03 		and	r3, r3, #127
 483 0076 DBB2     		uxtb	r3, r3
 484 0078 1370     		strb	r3, [r2]
 642:Generated_Source\PSoC5/CapSense_CSD.c **** }
 485              		.loc 1 642 0
 486 007a 00BF     		nop
 487 007c 80BD     		pop	{r7, pc}
 488              	.L13:
 489 007e 00BF     		.align	2
 490              	.L12:
 491 0080 7B640040 		.word	1073767547
 492 0084 80E100E0 		.word	-536813184
 493 0088 9C640040 		.word	1073767580
 494 008c 70580040 		.word	1073764464
 495 0090 AB430040 		.word	1073759147
 496 0094 BB430040 		.word	1073759163
 497              		.cfi_endproc
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 21


 498              	.LFE3:
 499              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 500              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 501              		.align	2
 502              		.global	CapSense_CSD_FindNextSensor
 503              		.thumb
 504              		.thumb_func
 505              		.type	CapSense_CSD_FindNextSensor, %function
 506              	CapSense_CSD_FindNextSensor:
 507              	.LFB4:
 643:Generated_Source\PSoC5/CapSense_CSD.c **** 
 644:Generated_Source\PSoC5/CapSense_CSD.c **** 
 645:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 655:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 656:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 657:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 658:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 659:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 660:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 662:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 663:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 665:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 666:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 667:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 668:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 669:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 670:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 671:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 672:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 673:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 674:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 675:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 508              		.loc 1 675 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 16
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 80B4     		push	{r7}
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
 516 0002 85B0     		sub	sp, sp, #20
 517              		.cfi_def_cfa_offset 24
 518 0004 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 520 0006 0346     		mov	r3, r0
 521 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 22


 522              	.L17:
 676:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 677:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 678:Generated_Source\PSoC5/CapSense_CSD.c ****         
 679:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 680:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 681:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 682:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 683:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 523              		.loc 1 683 0
 524 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 525 000c 0133     		adds	r3, r3, #1
 526 000e FB71     		strb	r3, [r7, #7]
 684:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 527              		.loc 1 684 0
 528 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 529 0012 072B     		cmp	r3, #7
 530 0014 12D0     		beq	.L19
 685:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 686:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 687:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 688:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 531              		.loc 1 688 0
 532 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 533 0018 DB08     		lsrs	r3, r3, #3
 534 001a FB73     		strb	r3, [r7, #15]
 689:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 535              		.loc 1 689 0
 536 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 537 001e 03F00703 		and	r3, r3, #7
 538 0022 0122     		movs	r2, #1
 539 0024 02FA03F3 		lsl	r3, r2, r3
 540 0028 BB73     		strb	r3, [r7, #14]
 690:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 691:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 541              		.loc 1 691 0
 542 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 543 002c 074A     		ldr	r2, .L20
 544 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 545 0030 BB7B     		ldrb	r3, [r7, #14]
 546 0032 1340     		ands	r3, r3, r2
 547 0034 DBB2     		uxtb	r3, r3
 548 0036 002B     		cmp	r3, #0
 549 0038 E7D0     		beq	.L17
 550 003a 00E0     		b	.L16
 551              	.L19:
 686:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 552              		.loc 1 686 0
 553 003c 00BF     		nop
 554              	.L16:
 692:Generated_Source\PSoC5/CapSense_CSD.c ****         
 693:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 555              		.loc 1 693 0
 556 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 557              		.loc 1 694 0
 558 0040 1846     		mov	r0, r3
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 23


 559 0042 1437     		adds	r7, r7, #20
 560              		.cfi_def_cfa_offset 4
 561 0044 BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
 564 0046 80BC     		pop	{r7}
 565              		.cfi_restore 7
 566              		.cfi_def_cfa_offset 0
 567 0048 7047     		bx	lr
 568              	.L21:
 569 004a 00BF     		.align	2
 570              	.L20:
 571 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 572              		.cfi_endproc
 573              	.LFE4:
 574              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 575              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 576              		.align	2
 577              		.global	CapSense_CSD_SetScanSlotSettings
 578              		.thumb
 579              		.thumb_func
 580              		.type	CapSense_CSD_SetScanSlotSettings, %function
 581              	CapSense_CSD_SetScanSlotSettings:
 582              	.LFB5:
 695:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 696:Generated_Source\PSoC5/CapSense_CSD.c ****  
 697:Generated_Source\PSoC5/CapSense_CSD.c ****  
 698:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 708:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 709:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 710:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 711:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 713:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 714:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 715:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 719:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 720:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 721:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 722:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 723:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 724:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 725:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 726:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 727:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 24


 728:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 729:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 730:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 731:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 733:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 734:Generated_Source\PSoC5/CapSense_CSD.c ****         
 735:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 736:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 737:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 738:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 739:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 741:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 742:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 743:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 744:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 745:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 746:Generated_Source\PSoC5/CapSense_CSD.c ****             
 747:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 748:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         
 752:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 753:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 754:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 756:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 757:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 758:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 759:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 760:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 761:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 762:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 763:Generated_Source\PSoC5/CapSense_CSD.c ****             
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 765:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 766:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 767:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 768:Generated_Source\PSoC5/CapSense_CSD.c ****         
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 770:Generated_Source\PSoC5/CapSense_CSD.c ****         
 771:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 772:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 773:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 774:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             
 777:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 778:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 780:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 782:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 783:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 784:Generated_Source\PSoC5/CapSense_CSD.c ****            
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 25


 785:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 786:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 787:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 788:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 789:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 790:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 791:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 792:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 793:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 794:Generated_Source\PSoC5/CapSense_CSD.c ****             
 795:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 796:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 797:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 798:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 799:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 800:Generated_Source\PSoC5/CapSense_CSD.c ****         
 801:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 802:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 803:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 804:Generated_Source\PSoC5/CapSense_CSD.c **** 
 805:Generated_Source\PSoC5/CapSense_CSD.c **** 
 806:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 807:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 808:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 809:Generated_Source\PSoC5/CapSense_CSD.c **** *
 810:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 811:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 812:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 813:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 814:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 815:Generated_Source\PSoC5/CapSense_CSD.c **** *
 816:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 817:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 818:Generated_Source\PSoC5/CapSense_CSD.c **** *
 819:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 820:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 821:Generated_Source\PSoC5/CapSense_CSD.c **** *
 822:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 823:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 824:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 825:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 826:Generated_Source\PSoC5/CapSense_CSD.c **** *
 827:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 828:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 829:Generated_Source\PSoC5/CapSense_CSD.c **** {
 583              		.loc 1 829 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 16
 586              		@ frame_needed = 1, uses_anonymous_args = 0
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 84B0     		sub	sp, sp, #16
 592              		.cfi_def_cfa_offset 24
 593 0004 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 26


 595 0006 0346     		mov	r3, r0
 596 0008 FB71     		strb	r3, [r7, #7]
 830:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 831:Generated_Source\PSoC5/CapSense_CSD.c ****     
 832:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 833:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 834:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 597              		.loc 1 834 0
 598 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 599 000c 0B4A     		ldr	r2, .L23
 600 000e D35C     		ldrb	r3, [r2, r3]
 601 0010 FB73     		strb	r3, [r7, #15]
 835:Generated_Source\PSoC5/CapSense_CSD.c ****         
 836:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 838:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 602              		.loc 1 838 0
 603 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 604 0014 0A4A     		ldr	r2, .L23+4
 605 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 606 0018 1846     		mov	r0, r3
 607 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 839:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 840:Generated_Source\PSoC5/CapSense_CSD.c ****         
 841:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 842:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 844:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 845:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 608              		.loc 1 846 0
 609 001e 094A     		ldr	r2, .L23+8
 610 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 611 0022 0949     		ldr	r1, .L23+12
 612 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 613 0026 1370     		strb	r3, [r2]
 847:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 848:Generated_Source\PSoC5/CapSense_CSD.c **** 
 849:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 850:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 614              		.loc 1 851 0
 615 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 616 002a 084A     		ldr	r2, .L23+16
 617 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 618 002e 1846     		mov	r0, r3
 619 0030 FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 852:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 855:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 856:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 857:Generated_Source\PSoC5/CapSense_CSD.c **** 
 858:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 860:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 861:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 27


 862:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 863:Generated_Source\PSoC5/CapSense_CSD.c ****             
 864:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 866:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 867:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 868:Generated_Source\PSoC5/CapSense_CSD.c ****             
 869:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 871:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 872:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 873:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 874:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 875:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 876:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 877:Generated_Source\PSoC5/CapSense_CSD.c ****         
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 879:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 880:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 881:Generated_Source\PSoC5/CapSense_CSD.c ****         
 882:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 883:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 884:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 885:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 886:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 887:Generated_Source\PSoC5/CapSense_CSD.c ****             
 888:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 889:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 890:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 891:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 892:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 893:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 894:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 895:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 896:Generated_Source\PSoC5/CapSense_CSD.c **** 
 897:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 898:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 899:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 900:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 901:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 902:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 903:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 904:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 905:Generated_Source\PSoC5/CapSense_CSD.c **** 
 906:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 907:Generated_Source\PSoC5/CapSense_CSD.c **** }
 620              		.loc 1 907 0
 621 0034 00BF     		nop
 622 0036 1037     		adds	r7, r7, #16
 623              		.cfi_def_cfa_offset 8
 624 0038 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 003a 80BD     		pop	{r7, pc}
 628              	.L24:
 629              		.align	2
 630              	.L23:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 28


 631 003c 00000000 		.word	CapSense_CSD_widgetNumber
 632 0040 00000000 		.word	CapSense_CSD_idacSettings
 633 0044 5B640040 		.word	1073767515
 634 0048 00000000 		.word	CapSense_CSD_widgetResolution
 635 004c 00000000 		.word	CapSense_CSD_analogSwitchDivider
 636              		.cfi_endproc
 637              	.LFE5:
 638              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 639              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 640              		.align	2
 641              		.global	CapSense_CSD_ScanSensor
 642              		.thumb
 643              		.thumb_func
 644              		.type	CapSense_CSD_ScanSensor, %function
 645              	CapSense_CSD_ScanSensor:
 646              	.LFB6:
 908:Generated_Source\PSoC5/CapSense_CSD.c **** 
 909:Generated_Source\PSoC5/CapSense_CSD.c **** 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 912:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 918:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 919:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 920:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 921:Generated_Source\PSoC5/CapSense_CSD.c **** *
 922:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 923:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 924:Generated_Source\PSoC5/CapSense_CSD.c **** *
 925:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 926:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 927:Generated_Source\PSoC5/CapSense_CSD.c **** *
 928:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 929:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 930:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 931:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 932:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 933:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 934:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 935:Generated_Source\PSoC5/CapSense_CSD.c **** *
 936:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 937:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 938:Generated_Source\PSoC5/CapSense_CSD.c **** *
 939:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 940:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 941:Generated_Source\PSoC5/CapSense_CSD.c **** {
 647              		.loc 1 941 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 8
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 29


 654              		.cfi_offset 14, -4
 655 0002 82B0     		sub	sp, sp, #8
 656              		.cfi_def_cfa_offset 16
 657 0004 00AF     		add	r7, sp, #0
 658              		.cfi_def_cfa_register 7
 659 0006 0346     		mov	r3, r0
 660 0008 FB71     		strb	r3, [r7, #7]
 942:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 943:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 661              		.loc 1 943 0
 662 000a 084B     		ldr	r3, .L26
 663 000c 0022     		movs	r2, #0
 664 000e 1A70     		strb	r2, [r3]
 944:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 665              		.loc 1 944 0
 666 0010 074A     		ldr	r2, .L26+4
 667 0012 FB79     		ldrb	r3, [r7, #7]
 668 0014 1370     		strb	r3, [r2]
 945:Generated_Source\PSoC5/CapSense_CSD.c ****     
 946:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 947:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 669              		.loc 1 948 0
 670 0016 054B     		ldr	r3, .L26
 671 0018 8122     		movs	r2, #129
 672 001a 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 673              		.loc 1 949 0
 674 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 675 001e 1846     		mov	r0, r3
 676 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         
 951:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 952:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 956:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 960:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 961:Generated_Source\PSoC5/CapSense_CSD.c ****         
 962:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 963:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 964:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 965:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 966:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 967:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 968:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 969:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 970:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 971:Generated_Source\PSoC5/CapSense_CSD.c ****         
 972:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 973:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 974:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 975:Generated_Source\PSoC5/CapSense_CSD.c ****         {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 30


 976:Generated_Source\PSoC5/CapSense_CSD.c ****         
 977:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 978:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 979:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 980:Generated_Source\PSoC5/CapSense_CSD.c ****         
 981:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 982:Generated_Source\PSoC5/CapSense_CSD.c **** }
 677              		.loc 1 982 0
 678 0024 00BF     		nop
 679 0026 0837     		adds	r7, r7, #8
 680              		.cfi_def_cfa_offset 8
 681 0028 BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 002a 80BD     		pop	{r7, pc}
 685              	.L27:
 686              		.align	2
 687              	.L26:
 688 002c 00000000 		.word	CapSense_CSD_csv
 689 0030 00000000 		.word	CapSense_CSD_sensorIndex
 690              		.cfi_endproc
 691              	.LFE6:
 692              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 693              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 694              		.align	2
 695              		.global	CapSense_CSD_ScanEnabledWidgets
 696              		.thumb
 697              		.thumb_func
 698              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 699              	CapSense_CSD_ScanEnabledWidgets:
 700              	.LFB7:
 983:Generated_Source\PSoC5/CapSense_CSD.c **** 
 984:Generated_Source\PSoC5/CapSense_CSD.c **** 
 985:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 986:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 987:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *
 989:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 991:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 993:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 995:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 996:Generated_Source\PSoC5/CapSense_CSD.c **** *
 997:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 998:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 999:Generated_Source\PSoC5/CapSense_CSD.c **** *
1000:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1001:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1002:Generated_Source\PSoC5/CapSense_CSD.c **** *
1003:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1004:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1005:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1006:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
1007:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
1008:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 31


1009:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
1010:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
1011:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
1012:Generated_Source\PSoC5/CapSense_CSD.c **** *
1013:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
1014:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
1015:Generated_Source\PSoC5/CapSense_CSD.c **** *
1016:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1017:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1018:Generated_Source\PSoC5/CapSense_CSD.c **** {
 701              		.loc 1 1018 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705 0000 80B5     		push	{r7, lr}
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
1019:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1020:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 711              		.loc 1 1020 0
 712 0004 124B     		ldr	r3, .L31
 713 0006 0022     		movs	r2, #0
 714 0008 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 715              		.loc 1 1021 0
 716 000a 124B     		ldr	r3, .L31+4
 717 000c FF22     		movs	r2, #255
 718 000e 1A70     		strb	r2, [r3]
1022:Generated_Source\PSoC5/CapSense_CSD.c ****     
1023:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1024:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1025:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 719              		.loc 1 1025 0
 720 0010 104B     		ldr	r3, .L31+4
 721 0012 1B78     		ldrb	r3, [r3]
 722 0014 DBB2     		uxtb	r3, r3
 723 0016 1846     		mov	r0, r3
 724 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 725 001c 0346     		mov	r3, r0
 726 001e 1A46     		mov	r2, r3
 727 0020 0C4B     		ldr	r3, .L31+4
 728 0022 1A70     		strb	r2, [r3]
1026:Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 729              		.loc 1 1028 0
 730 0024 0B4B     		ldr	r3, .L31+4
 731 0026 1B78     		ldrb	r3, [r3]
 732 0028 DBB2     		uxtb	r3, r3
 733 002a 062B     		cmp	r3, #6
 734 002c 0DD8     		bhi	.L30
1029:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1030:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 735              		.loc 1 1030 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 32


 736 002e 084B     		ldr	r3, .L31
 737 0030 1B78     		ldrb	r3, [r3]
 738 0032 DBB2     		uxtb	r3, r3
 739 0034 43F00103 		orr	r3, r3, #1
 740 0038 DAB2     		uxtb	r2, r3
 741 003a 054B     		ldr	r3, .L31
 742 003c 1A70     		strb	r2, [r3]
1031:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 743              		.loc 1 1031 0
 744 003e 054B     		ldr	r3, .L31+4
 745 0040 1B78     		ldrb	r3, [r3]
 746 0042 DBB2     		uxtb	r3, r3
 747 0044 1846     		mov	r0, r3
 748 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 749              	.L30:
1032:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1033:Generated_Source\PSoC5/CapSense_CSD.c ****         
1034:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1035:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1036:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1037:Generated_Source\PSoC5/CapSense_CSD.c ****         
1038:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1039:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1040:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1041:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1042:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1043:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1044:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1045:Generated_Source\PSoC5/CapSense_CSD.c ****         
1046:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1047:Generated_Source\PSoC5/CapSense_CSD.c **** }
 750              		.loc 1 1047 0
 751 004a 00BF     		nop
 752 004c 80BD     		pop	{r7, pc}
 753              	.L32:
 754 004e 00BF     		.align	2
 755              	.L31:
 756 0050 00000000 		.word	CapSense_CSD_csv
 757 0054 00000000 		.word	CapSense_CSD_sensorIndex
 758              		.cfi_endproc
 759              	.LFE7:
 760              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 761              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 762              		.align	2
 763              		.global	CapSense_CSD_IsBusy
 764              		.thumb
 765              		.thumb_func
 766              		.type	CapSense_CSD_IsBusy, %function
 767              	CapSense_CSD_IsBusy:
 768              	.LFB8:
1048:Generated_Source\PSoC5/CapSense_CSD.c **** 
1049:Generated_Source\PSoC5/CapSense_CSD.c **** 
1050:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1051:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1052:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1053:Generated_Source\PSoC5/CapSense_CSD.c **** *
1054:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 33


1055:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1056:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1060:Generated_Source\PSoC5/CapSense_CSD.c **** *
1061:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1063:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *
1065:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1066:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1068:Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1071:Generated_Source\PSoC5/CapSense_CSD.c **** {
 769              		.loc 1 1071 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774 0000 80B4     		push	{r7}
 775              		.cfi_def_cfa_offset 4
 776              		.cfi_offset 7, -4
 777 0002 00AF     		add	r7, sp, #0
 778              		.cfi_def_cfa_register 7
1072:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 779              		.loc 1 1072 0
 780 0004 044B     		ldr	r3, .L35
 781 0006 1B78     		ldrb	r3, [r3]
 782 0008 DBB2     		uxtb	r3, r3
 783 000a 03F00103 		and	r3, r3, #1
 784 000e DBB2     		uxtb	r3, r3
1073:Generated_Source\PSoC5/CapSense_CSD.c **** }
 785              		.loc 1 1073 0
 786 0010 1846     		mov	r0, r3
 787 0012 BD46     		mov	sp, r7
 788              		.cfi_def_cfa_register 13
 789              		@ sp needed
 790 0014 80BC     		pop	{r7}
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 0016 7047     		bx	lr
 794              	.L36:
 795              		.align	2
 796              	.L35:
 797 0018 00000000 		.word	CapSense_CSD_csv
 798              		.cfi_endproc
 799              	.LFE8:
 800              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 801              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 802              		.align	2
 803              		.global	CapSense_CSD_ReadSensorRaw
 804              		.thumb
 805              		.thumb_func
 806              		.type	CapSense_CSD_ReadSensorRaw, %function
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 34


 807              	CapSense_CSD_ReadSensorRaw:
 808              	.LFB9:
1074:Generated_Source\PSoC5/CapSense_CSD.c **** 
1075:Generated_Source\PSoC5/CapSense_CSD.c **** 
1076:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1078:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense_CSD.c **** *
1080:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1081:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1083:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *
1085:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1086:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1087:Generated_Source\PSoC5/CapSense_CSD.c **** *
1088:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1089:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1090:Generated_Source\PSoC5/CapSense_CSD.c **** *
1091:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1092:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *
1094:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1095:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1096:Generated_Source\PSoC5/CapSense_CSD.c **** {
 809              		.loc 1 1096 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 8
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814 0000 80B4     		push	{r7}
 815              		.cfi_def_cfa_offset 4
 816              		.cfi_offset 7, -4
 817 0002 83B0     		sub	sp, sp, #12
 818              		.cfi_def_cfa_offset 16
 819 0004 00AF     		add	r7, sp, #0
 820              		.cfi_def_cfa_register 7
 821 0006 0346     		mov	r3, r0
 822 0008 FB71     		strb	r3, [r7, #7]
1097:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 823              		.loc 1 1097 0
 824 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 825 000c 034A     		ldr	r2, .L39
 826 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1098:Generated_Source\PSoC5/CapSense_CSD.c **** }
 827              		.loc 1 1098 0
 828 0012 1846     		mov	r0, r3
 829 0014 0C37     		adds	r7, r7, #12
 830              		.cfi_def_cfa_offset 4
 831 0016 BD46     		mov	sp, r7
 832              		.cfi_def_cfa_register 13
 833              		@ sp needed
 834 0018 80BC     		pop	{r7}
 835              		.cfi_restore 7
 836              		.cfi_def_cfa_offset 0
 837 001a 7047     		bx	lr
 838              	.L40:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 35


 839              		.align	2
 840              	.L39:
 841 001c 00000000 		.word	CapSense_CSD_sensorRaw
 842              		.cfi_endproc
 843              	.LFE9:
 844              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 845              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 846              		.align	2
 847              		.global	CapSense_CSD_ClearSensors
 848              		.thumb
 849              		.thumb_func
 850              		.type	CapSense_CSD_ClearSensors, %function
 851              	CapSense_CSD_ClearSensors:
 852              	.LFB10:
1099:Generated_Source\PSoC5/CapSense_CSD.c **** 
1100:Generated_Source\PSoC5/CapSense_CSD.c **** 
1101:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1102:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1103:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1104:Generated_Source\PSoC5/CapSense_CSD.c **** *
1105:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1106:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1107:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1108:Generated_Source\PSoC5/CapSense_CSD.c **** *
1109:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1110:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1111:Generated_Source\PSoC5/CapSense_CSD.c **** *
1112:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1113:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1114:Generated_Source\PSoC5/CapSense_CSD.c **** *
1115:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1116:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1117:Generated_Source\PSoC5/CapSense_CSD.c **** {
 853              		.loc 1 1117 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1119:Generated_Source\PSoC5/CapSense_CSD.c ****    
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 865              		.loc 1 1120 0
 866 0006 0023     		movs	r3, #0
 867 0008 FB71     		strb	r3, [r7, #7]
 868 000a 06E0     		b	.L42
 869              	.L43:
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1122:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 870              		.loc 1 1122 0 discriminator 3
 871 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 36


 872 000e 1846     		mov	r0, r3
 873 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 874              		.loc 1 1120 0 discriminator 3
 875 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 876 0016 0133     		adds	r3, r3, #1
 877 0018 FB71     		strb	r3, [r7, #7]
 878              	.L42:
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 879              		.loc 1 1120 0 is_stmt 0 discriminator 1
 880 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 881 001c 062B     		cmp	r3, #6
 882 001e F5D9     		bls	.L43
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1124:Generated_Source\PSoC5/CapSense_CSD.c **** }
 883              		.loc 1 1124 0 is_stmt 1
 884 0020 00BF     		nop
 885 0022 0837     		adds	r7, r7, #8
 886              		.cfi_def_cfa_offset 8
 887 0024 BD46     		mov	sp, r7
 888              		.cfi_def_cfa_register 13
 889              		@ sp needed
 890 0026 80BD     		pop	{r7, pc}
 891              		.cfi_endproc
 892              	.LFE10:
 893              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 894              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 895              		.align	2
 896              		.global	CapSense_CSD_EnableSensor
 897              		.thumb
 898              		.thumb_func
 899              		.type	CapSense_CSD_EnableSensor, %function
 900              	CapSense_CSD_EnableSensor:
 901              	.LFB11:
1125:Generated_Source\PSoC5/CapSense_CSD.c **** 
1126:Generated_Source\PSoC5/CapSense_CSD.c **** 
1127:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1134:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1135:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1136:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1137:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1138:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1139:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1140:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1141:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1142:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1143:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1144:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1145:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1146:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1147:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 37


1148:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1149:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1150:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1151:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1152:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1153:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1154:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1155:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1156:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1158:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1159:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1160:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1161:Generated_Source\PSoC5/CapSense_CSD.c ****         
1162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1163:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1164:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1165:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1166:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1167:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1168:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1169:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1170:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1171:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1172:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1173:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1174:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1175:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1176:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1177:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1178:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1179:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1188:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1189:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1190:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1191:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1192:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1193:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1194:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1195:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1196:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1197:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1198:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1199:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1200:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1201:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1202:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1203:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1204:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 38


1205:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1206:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1207:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1208:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1209:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1210:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1212:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1213:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1214:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1215:Generated_Source\PSoC5/CapSense_CSD.c ****         
1216:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1217:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1218:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1219:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1220:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1221:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1222:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1223:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1224:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1225:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1226:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1227:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1228:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1229:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1230:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1231:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1232:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1233:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1234:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1235:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1236:Generated_Source\PSoC5/CapSense_CSD.c **** 
1237:Generated_Source\PSoC5/CapSense_CSD.c **** 
1238:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1239:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1240:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *
1242:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1244:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1245:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1246:Generated_Source\PSoC5/CapSense_CSD.c **** *
1247:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1248:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1249:Generated_Source\PSoC5/CapSense_CSD.c **** *
1250:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1251:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1252:Generated_Source\PSoC5/CapSense_CSD.c **** *
1253:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1254:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1255:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1256:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1257:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1258:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1259:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1260:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1261:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 39


1262:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1263:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1264:Generated_Source\PSoC5/CapSense_CSD.c **** *
1265:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1266:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1267:Generated_Source\PSoC5/CapSense_CSD.c **** {
 902              		.loc 1 1267 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 16
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 80B5     		push	{r7, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 84B0     		sub	sp, sp, #16
 911              		.cfi_def_cfa_offset 24
 912 0004 00AF     		add	r7, sp, #0
 913              		.cfi_def_cfa_register 7
 914 0006 0346     		mov	r3, r0
 915 0008 FB71     		strb	r3, [r7, #7]
1268:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 916              		.loc 1 1268 0
 917 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 918 000c 134A     		ldr	r2, .L46
 919 000e D35C     		ldrb	r3, [r2, r3]
 920 0010 FB73     		strb	r3, [r7, #15]
1269:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 921              		.loc 1 1269 0
 922 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 923 0014 124A     		ldr	r2, .L46+4
 924 0016 D35C     		ldrb	r3, [r2, r3]
 925 0018 BB73     		strb	r3, [r7, #14]
1270:Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1272:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1273:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1274:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1275:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1277:Generated_Source\PSoC5/CapSense_CSD.c ****     
1278:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1279:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 926              		.loc 1 1279 0
 927 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 928 001c 114A     		ldr	r2, .L46+8
 929 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 930 0022 0922     		movs	r2, #9
 931 0024 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/CapSense_CSD.c ****     
1281:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1282:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 932              		.loc 1 1282 0
 933 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 934 0028 0F2B     		cmp	r3, #15
 935 002a 01D1     		bne	.L45
1283:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1284:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 40


 936              		.loc 1 1284 0
 937 002c 0723     		movs	r3, #7
 938 002e FB73     		strb	r3, [r7, #15]
 939              	.L45:
1285:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1286:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 940              		.loc 1 1286 0
 941 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 942 0032 0D4A     		ldr	r2, .L46+12
 943 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 944 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 945 003a 0B49     		ldr	r1, .L46+12
 946 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 947 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 948 0042 BA7B     		ldrb	r2, [r7, #14]
 949 0044 0A43     		orrs	r2, r2, r1
 950 0046 D2B2     		uxtb	r2, r2
 951 0048 1A70     		strb	r2, [r3]
1287:Generated_Source\PSoC5/CapSense_CSD.c ****     
1288:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1289:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1290:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1292:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1293:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 952              		.loc 1 1293 0
 953 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 954 004c 1846     		mov	r0, r3
 955 004e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
1294:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1295:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1296:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1297:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1298:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1299:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1300:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1301:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1302:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1303:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1304:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1305:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1306:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1307:Generated_Source\PSoC5/CapSense_CSD.c ****             
1308:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1309:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1310:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1311:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1312:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1313:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1314:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1315:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1316:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1317:Generated_Source\PSoC5/CapSense_CSD.c ****             
1318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1319:Generated_Source\PSoC5/CapSense_CSD.c ****         
1320:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1321:Generated_Source\PSoC5/CapSense_CSD.c **** }
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 41


 956              		.loc 1 1321 0
 957 0052 00BF     		nop
 958 0054 1037     		adds	r7, r7, #16
 959              		.cfi_def_cfa_offset 8
 960 0056 BD46     		mov	sp, r7
 961              		.cfi_def_cfa_register 13
 962              		@ sp needed
 963 0058 80BD     		pop	{r7, pc}
 964              	.L47:
 965 005a 00BF     		.align	2
 966              	.L46:
 967 005c 00000000 		.word	CapSense_CSD_portTable
 968 0060 00000000 		.word	CapSense_CSD_maskTable
 969 0064 00000000 		.word	CapSense_CSD_pcTable
 970 0068 00000000 		.word	CapSense_CSD_csTable
 971              		.cfi_endproc
 972              	.LFE11:
 973              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 974              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 975              		.align	2
 976              		.global	CapSense_CSD_DisableSensor
 977              		.thumb
 978              		.thumb_func
 979              		.type	CapSense_CSD_DisableSensor, %function
 980              	CapSense_CSD_DisableSensor:
 981              	.LFB12:
1322:Generated_Source\PSoC5/CapSense_CSD.c **** 
1323:Generated_Source\PSoC5/CapSense_CSD.c **** 
1324:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1325:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1326:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1329:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1330:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1331:Generated_Source\PSoC5/CapSense_CSD.c **** *
1332:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1333:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1334:Generated_Source\PSoC5/CapSense_CSD.c **** *
1335:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1336:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1337:Generated_Source\PSoC5/CapSense_CSD.c **** *
1338:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1339:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1340:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1341:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1342:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1343:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1344:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1345:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1346:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1347:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1348:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1349:Generated_Source\PSoC5/CapSense_CSD.c **** *
1350:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1351:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1352:Generated_Source\PSoC5/CapSense_CSD.c **** {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 42


 982              		.loc 1 1352 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 16
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 80B5     		push	{r7, lr}
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 84B0     		sub	sp, sp, #16
 991              		.cfi_def_cfa_offset 24
 992 0004 00AF     		add	r7, sp, #0
 993              		.cfi_def_cfa_register 7
 994 0006 0346     		mov	r3, r0
 995 0008 FB71     		strb	r3, [r7, #7]
1353:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 996              		.loc 1 1353 0
 997 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 000c 144A     		ldr	r2, .L50
 999 000e D35C     		ldrb	r3, [r2, r3]
 1000 0010 FB73     		strb	r3, [r7, #15]
1354:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 1001              		.loc 1 1354 0
 1002 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1003 0014 134A     		ldr	r2, .L50+4
 1004 0016 D35C     		ldrb	r3, [r2, r3]
 1005 0018 BB73     		strb	r3, [r7, #14]
1355:Generated_Source\PSoC5/CapSense_CSD.c ****     
1356:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1357:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1358:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1359:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1361:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1362:Generated_Source\PSoC5/CapSense_CSD.c ****     
1363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1364:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1365:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1367:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1368:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 1006              		.loc 1 1368 0
 1007 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1008 001c 1846     		mov	r0, r3
 1009 001e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1369:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1370:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1371:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1372:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1373:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1374:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1375:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1376:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1377:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1378:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1379:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1380:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1381:Generated_Source\PSoC5/CapSense_CSD.c ****             }
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 43


1382:Generated_Source\PSoC5/CapSense_CSD.c ****             
1383:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1384:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1385:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1386:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1387:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1388:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1389:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1390:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1391:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1392:Generated_Source\PSoC5/CapSense_CSD.c ****             
1393:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1394:Generated_Source\PSoC5/CapSense_CSD.c ****         
1395:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1396:Generated_Source\PSoC5/CapSense_CSD.c ****     
1397:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1398:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 1010              		.loc 1 1398 0
 1011 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1012 0024 0F2B     		cmp	r3, #15
 1013 0026 01D1     		bne	.L49
1399:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1400:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 1014              		.loc 1 1400 0
 1015 0028 0723     		movs	r3, #7
 1016 002a FB73     		strb	r3, [r7, #15]
 1017              	.L49:
1401:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1402:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 1018              		.loc 1 1402 0
 1019 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1020 002e 0E4A     		ldr	r2, .L50+8
 1021 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1022 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1023 0036 0C49     		ldr	r1, .L50+8
 1024 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1025 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1026 003e BA7B     		ldrb	r2, [r7, #14]
 1027 0040 D243     		mvns	r2, r2
 1028 0042 D2B2     		uxtb	r2, r2
 1029 0044 0A40     		ands	r2, r2, r1
 1030 0046 D2B2     		uxtb	r2, r2
 1031 0048 1A70     		strb	r2, [r3]
1403:Generated_Source\PSoC5/CapSense_CSD.c ****     
1404:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1405:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1406:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 1032              		.loc 1 1406 0
 1033 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1034 004c 074A     		ldr	r2, .L50+12
 1035 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1036 0052 0822     		movs	r2, #8
 1037 0054 1A70     		strb	r2, [r3]
1407:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1408:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1409:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1410:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 44


1411:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1412:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1038              		.loc 1 1412 0
 1039 0056 00BF     		nop
 1040 0058 1037     		adds	r7, r7, #16
 1041              		.cfi_def_cfa_offset 8
 1042 005a BD46     		mov	sp, r7
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 005c 80BD     		pop	{r7, pc}
 1046              	.L51:
 1047 005e 00BF     		.align	2
 1048              	.L50:
 1049 0060 00000000 		.word	CapSense_CSD_portTable
 1050 0064 00000000 		.word	CapSense_CSD_maskTable
 1051 0068 00000000 		.word	CapSense_CSD_csTable
 1052 006c 00000000 		.word	CapSense_CSD_pcTable
 1053              		.cfi_endproc
 1054              	.LFE12:
 1055              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1056              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1057              		.align	2
 1058              		.global	CapSense_CSD_PreScan
 1059              		.thumb
 1060              		.thumb_func
 1061              		.type	CapSense_CSD_PreScan, %function
 1062              	CapSense_CSD_PreScan:
 1063              	.LFB13:
1413:Generated_Source\PSoC5/CapSense_CSD.c **** 
1414:Generated_Source\PSoC5/CapSense_CSD.c **** 
1415:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1416:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1417:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1418:Generated_Source\PSoC5/CapSense_CSD.c **** *
1419:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1420:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1421:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1422:Generated_Source\PSoC5/CapSense_CSD.c **** *
1423:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1424:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1425:Generated_Source\PSoC5/CapSense_CSD.c **** *
1426:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1427:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1428:Generated_Source\PSoC5/CapSense_CSD.c **** *
1429:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1430:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1431:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1432:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1433:Generated_Source\PSoC5/CapSense_CSD.c **** *
1434:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1435:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1436:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1064              		.loc 1 1436 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 8
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 45


 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              		.cfi_def_cfa_offset 16
 1074 0004 00AF     		add	r7, sp, #0
 1075              		.cfi_def_cfa_register 7
 1076 0006 0346     		mov	r3, r0
 1077 0008 FB71     		strb	r3, [r7, #7]
1437:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1438:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1078              		.loc 1 1438 0
 1079 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1080 000c 1846     		mov	r0, r3
 1081 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1439:Generated_Source\PSoC5/CapSense_CSD.c ****     
1440:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1441:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1442:Generated_Source\PSoC5/CapSense_CSD.c **** 
1443:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1444:Generated_Source\PSoC5/CapSense_CSD.c ****     
1445:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1446:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1447:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1448:Generated_Source\PSoC5/CapSense_CSD.c **** 
1449:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1450:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1082              		.loc 1 1450 0
 1083 0012 104A     		ldr	r2, .L53
 1084 0014 0F4B     		ldr	r3, .L53
 1085 0016 1B78     		ldrb	r3, [r3]
 1086 0018 DBB2     		uxtb	r3, r3
 1087 001a 43F00103 		orr	r3, r3, #1
 1088 001e DBB2     		uxtb	r3, r3
 1089 0020 1370     		strb	r3, [r2]
1451:Generated_Source\PSoC5/CapSense_CSD.c ****         
1452:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1453:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1456:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1458:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1090              		.loc 1 1458 0
 1091 0022 0D4A     		ldr	r2, .L53+4
 1092 0024 0C4B     		ldr	r3, .L53+4
 1093 0026 1B78     		ldrb	r3, [r3]
 1094 0028 DBB2     		uxtb	r3, r3
 1095 002a 23F00103 		bic	r3, r3, #1
 1096 002e DBB2     		uxtb	r3, r3
 1097 0030 1370     		strb	r3, [r2]
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1460:Generated_Source\PSoC5/CapSense_CSD.c **** 
1461:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1098              		.loc 1 1462 0
 1099 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 46


 1100 0034 1846     		mov	r0, r3
 1101 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1463:Generated_Source\PSoC5/CapSense_CSD.c ****             
1464:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1465:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1466:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1467:Generated_Source\PSoC5/CapSense_CSD.c ****             
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1469:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1470:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1471:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1472:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1473:Generated_Source\PSoC5/CapSense_CSD.c ****             
1474:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1475:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1476:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1477:Generated_Source\PSoC5/CapSense_CSD.c ****             
1478:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1479:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1480:Generated_Source\PSoC5/CapSense_CSD.c ****              
1481:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1482:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1483:Generated_Source\PSoC5/CapSense_CSD.c ****         
1484:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1485:Generated_Source\PSoC5/CapSense_CSD.c ****         
1486:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1487:Generated_Source\PSoC5/CapSense_CSD.c **** 
1488:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1489:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1490:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1498:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1499:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1500:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1501:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1502:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1503:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1504:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1505:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1506:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1507:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1511:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1512:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                     
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 47


1518:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1520:Generated_Source\PSoC5/CapSense_CSD.c ****             
1521:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1522:Generated_Source\PSoC5/CapSense_CSD.c ****             
1523:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1524:Generated_Source\PSoC5/CapSense_CSD.c ****         
1525:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1526:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1527:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1528:Generated_Source\PSoC5/CapSense_CSD.c ****             
1529:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1537:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1538:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1539:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1541:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1543:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1544:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1545:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1546:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1547:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1548:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1549:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1550:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1551:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1552:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1553:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1554:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1555:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1556:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1557:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1558:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1559:Generated_Source\PSoC5/CapSense_CSD.c ****             
1560:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1561:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1562:Generated_Source\PSoC5/CapSense_CSD.c ****     
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1102              		.loc 1 1566 0
 1103 003a 064A     		ldr	r2, .L53
 1104 003c 054B     		ldr	r3, .L53
 1105 003e 1B78     		ldrb	r3, [r3]
 1106 0040 DBB2     		uxtb	r3, r3
 1107 0042 43F00203 		orr	r3, r3, #2
 1108 0046 DBB2     		uxtb	r3, r3
 1109 0048 1370     		strb	r3, [r2]
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 48


1567:Generated_Source\PSoC5/CapSense_CSD.c ****     
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1570:Generated_Source\PSoC5/CapSense_CSD.c **** 
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1572:Generated_Source\PSoC5/CapSense_CSD.c **** 
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1574:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1576:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1110              		.loc 1 1576 0
 1111 004a 00BF     		nop
 1112 004c 0837     		adds	r7, r7, #8
 1113              		.cfi_def_cfa_offset 8
 1114 004e BD46     		mov	sp, r7
 1115              		.cfi_def_cfa_register 13
 1116              		@ sp needed
 1117 0050 80BD     		pop	{r7, pc}
 1118              	.L54:
 1119 0052 00BF     		.align	2
 1120              	.L53:
 1121 0054 7B640040 		.word	1073767547
 1122 0058 70580040 		.word	1073764464
 1123              		.cfi_endproc
 1124              	.LFE13:
 1125              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1126              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1127              		.align	2
 1128              		.global	CapSense_CSD_PostScan
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	CapSense_CSD_PostScan, %function
 1132              	CapSense_CSD_PostScan:
 1133              	.LFB14:
1577:Generated_Source\PSoC5/CapSense_CSD.c **** 
1578:Generated_Source\PSoC5/CapSense_CSD.c **** 
1579:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1583:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1584:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1585:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1586:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1587:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1588:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1589:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1590:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1591:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1592:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1593:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1594:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1595:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1596:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1597:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1598:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1599:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 49


1600:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1601:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1602:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1603:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1604:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1134              		.loc 1 1604 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0000 80B5     		push	{r7, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
 1141              		.cfi_offset 14, -4
 1142 0002 82B0     		sub	sp, sp, #8
 1143              		.cfi_def_cfa_offset 16
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 1146 0006 0346     		mov	r3, r0
 1147 0008 FB71     		strb	r3, [r7, #7]
1605:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1606:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1148              		.loc 1 1606 0
 1149 000a 1E4A     		ldr	r2, .L56
 1150 000c 1D4B     		ldr	r3, .L56
 1151 000e 1B78     		ldrb	r3, [r3]
 1152 0010 DBB2     		uxtb	r3, r3
 1153 0012 23F00303 		bic	r3, r3, #3
 1154 0016 DBB2     		uxtb	r3, r3
 1155 0018 1370     		strb	r3, [r2]
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         
1608:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1609:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1610:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1611:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1156              		.loc 1 1613 0
 1157 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1158 001c 1A4A     		ldr	r2, .L56+4
 1159 001e 1278     		ldrb	r2, [r2]
 1160 0020 D2B2     		uxtb	r2, r2
 1161 0022 92B2     		uxth	r2, r2
 1162 0024 1202     		lsls	r2, r2, #8
 1163 0026 91B2     		uxth	r1, r2
 1164 0028 184A     		ldr	r2, .L56+8
 1165 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1166              		.loc 1 1614 0
 1167 002e 184B     		ldr	r3, .L56+12
 1168 0030 1B78     		ldrb	r3, [r3]
 1169 0032 DBB2     		uxtb	r3, r3
 1170 0034 9AB2     		uxth	r2, r3
 1171 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1172 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1173 003a 1448     		ldr	r0, .L56+8
 1174 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1175 0040 0A43     		orrs	r2, r2, r1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 50


 1176 0042 91B2     		uxth	r1, r2
 1177 0044 114A     		ldr	r2, .L56+8
 1178 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1179              		.loc 1 1615 0
 1180 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1616:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1181              		.loc 1 1616 0
 1182 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1183 004e 0F49     		ldr	r1, .L56+8
 1184 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1185              		.loc 1 1615 0
 1186 0054 D243     		mvns	r2, r2
 1187 0056 91B2     		uxth	r1, r2
 1188 0058 0C4A     		ldr	r2, .L56+8
 1189 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****         
1619:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1620:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1190              		.loc 1 1620 0
 1191 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1192 0060 1846     		mov	r0, r3
 1193 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1621:Generated_Source\PSoC5/CapSense_CSD.c ****         
1622:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1623:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1624:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1194              		.loc 1 1624 0
 1195 0066 0020     		movs	r0, #0
 1196 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
1625:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1626:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1627:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1628:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1629:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1630:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1631:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1632:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1633:Generated_Source\PSoC5/CapSense_CSD.c ****             
1634:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1635:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1637:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1638:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1197              		.loc 1 1638 0
 1198 006c 094A     		ldr	r2, .L56+16
 1199 006e 094B     		ldr	r3, .L56+16
 1200 0070 1B78     		ldrb	r3, [r3]
 1201 0072 DBB2     		uxtb	r3, r3
 1202 0074 43F00103 		orr	r3, r3, #1
 1203 0078 DBB2     		uxtb	r3, r3
 1204 007a 1370     		strb	r3, [r2]
1639:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1205              		.loc 1 1640 0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 51


 1206 007c 00BF     		nop
 1207 007e 0837     		adds	r7, r7, #8
 1208              		.cfi_def_cfa_offset 8
 1209 0080 BD46     		mov	sp, r7
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0082 80BD     		pop	{r7, pc}
 1213              	.L57:
 1214              		.align	2
 1215              	.L56:
 1216 0084 7B640040 		.word	1073767547
 1217 0088 1A640040 		.word	1073767450
 1218 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1219 0090 0A640040 		.word	1073767434
 1220 0094 70580040 		.word	1073764464
 1221              		.cfi_endproc
 1222              	.LFE14:
 1223              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1224              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1225              		.align	2
 1226              		.global	CapSense_CSD_SetPrescaler
 1227              		.thumb
 1228              		.thumb_func
 1229              		.type	CapSense_CSD_SetPrescaler, %function
 1230              	CapSense_CSD_SetPrescaler:
 1231              	.LFB15:
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     
1642:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1643:Generated_Source\PSoC5/CapSense_CSD.c **** 
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1647:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1648:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1649:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1650:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1652:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1653:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1654:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1655:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1656:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1657:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1658:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1659:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1660:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1662:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1663:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1665:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1666:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1667:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1668:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1669:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1670:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1671:Generated_Source\PSoC5/CapSense_CSD.c ****         {
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 52


1672:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1673:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1674:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         
1676:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1677:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1678:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1679:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1681:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1683:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1684:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1685:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1686:Generated_Source\PSoC5/CapSense_CSD.c ****         
1687:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1688:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1689:Generated_Source\PSoC5/CapSense_CSD.c ****         
1690:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1691:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1692:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1693:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1694:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1695:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1696:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1697:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1698:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1699:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1700:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1701:Generated_Source\PSoC5/CapSense_CSD.c ****         
1702:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1703:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1704:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1705:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1706:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1707:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1714:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1715:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1719:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1720:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1721:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1722:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1723:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1724:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1725:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1726:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1727:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1728:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 53


1729:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1730:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1731:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1732:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1733:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1734:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1735:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1736:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1737:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1738:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1739:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1740:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1741:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1742:Generated_Source\PSoC5/CapSense_CSD.c ****         
1743:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1744:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1745:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1746:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1748:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1750:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1751:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1753:Generated_Source\PSoC5/CapSense_CSD.c ****         
1754:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1755:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1756:Generated_Source\PSoC5/CapSense_CSD.c ****         
1757:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1758:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1759:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1760:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1761:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1762:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1763:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1764:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1765:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1766:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1767:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1768:Generated_Source\PSoC5/CapSense_CSD.c **** 
1769:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1770:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1771:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1772:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1773:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1774:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1776:Generated_Source\PSoC5/CapSense_CSD.c ****     
1777:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1778:Generated_Source\PSoC5/CapSense_CSD.c **** 
1779:Generated_Source\PSoC5/CapSense_CSD.c **** 
1780:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1781:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1782:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1783:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1784:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 54


1786:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1789:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1799:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1800:Generated_Source\PSoC5/CapSense_CSD.c ****         
1801:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1802:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1803:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1804:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1805:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1806:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1819:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1820:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1821:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1822:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1823:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1824:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1825:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1826:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1827:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1828:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1829:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1830:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1831:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1832:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1833:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1834:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1835:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1836:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1837:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1838:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1839:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1840:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1841:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1842:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 55


1843:Generated_Source\PSoC5/CapSense_CSD.c ****             
1844:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1845:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1846:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1847:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1848:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1849:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1850:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1851:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1852:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1853:Generated_Source\PSoC5/CapSense_CSD.c ****     
1854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1855:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1856:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1857:Generated_Source\PSoC5/CapSense_CSD.c **** 
1858:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1859:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1860:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1861:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1862:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1864:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1865:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1866:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1867:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1869:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1870:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1232              		.loc 1 1874 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 8
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237 0000 80B4     		push	{r7}
 1238              		.cfi_def_cfa_offset 4
 1239              		.cfi_offset 7, -4
 1240 0002 83B0     		sub	sp, sp, #12
 1241              		.cfi_def_cfa_offset 16
 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 1244 0006 0346     		mov	r3, r0
 1245 0008 FB71     		strb	r3, [r7, #7]
1875:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1876:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1877:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1246              		.loc 1 1877 0
 1247 000a 064A     		ldr	r2, .L59
 1248 000c FB79     		ldrb	r3, [r7, #7]
 1249 000e 1370     		strb	r3, [r2]
1878:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1250              		.loc 1 1878 0
 1251 0010 054A     		ldr	r2, .L59+4
 1252 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 56


 1253 0014 5B08     		lsrs	r3, r3, #1
 1254 0016 DBB2     		uxtb	r3, r3
 1255 0018 1370     		strb	r3, [r2]
1879:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1880:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1881:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1882:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1883:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1884:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1885:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1256              		.loc 1 1885 0
 1257 001a 00BF     		nop
 1258 001c 0C37     		adds	r7, r7, #12
 1259              		.cfi_def_cfa_offset 4
 1260 001e BD46     		mov	sp, r7
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 0020 80BC     		pop	{r7}
 1264              		.cfi_restore 7
 1265              		.cfi_def_cfa_offset 0
 1266 0022 7047     		bx	lr
 1267              	.L60:
 1268              		.align	2
 1269              	.L59:
 1270 0024 2D640040 		.word	1073767469
 1271 0028 3D640040 		.word	1073767485
 1272              		.cfi_endproc
 1273              	.LFE15:
 1274              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1275              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1276              		.align	2
 1277              		.global	CapSense_CSD_GetPrescaler
 1278              		.thumb
 1279              		.thumb_func
 1280              		.type	CapSense_CSD_GetPrescaler, %function
 1281              	CapSense_CSD_GetPrescaler:
 1282              	.LFB16:
1886:Generated_Source\PSoC5/CapSense_CSD.c **** 
1887:Generated_Source\PSoC5/CapSense_CSD.c **** 
1888:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1889:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1890:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1891:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1892:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1893:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1894:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1895:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1896:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1897:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1898:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1899:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1900:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1901:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1902:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1903:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1283              		.loc 1 1903 0
 1284              		.cfi_startproc
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 57


 1285              		@ args = 0, pretend = 0, frame = 8
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288 0000 80B4     		push	{r7}
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 7, -4
 1291 0002 83B0     		sub	sp, sp, #12
 1292              		.cfi_def_cfa_offset 16
 1293 0004 00AF     		add	r7, sp, #0
 1294              		.cfi_def_cfa_register 7
1904:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1295              		.loc 1 1904 0
 1296 0006 0023     		movs	r3, #0
 1297 0008 FB71     		strb	r3, [r7, #7]
1905:Generated_Source\PSoC5/CapSense_CSD.c **** 
1906:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1907:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1908:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1298              		.loc 1 1908 0
 1299 000a 044B     		ldr	r3, .L63
 1300 000c 1B78     		ldrb	r3, [r3]
 1301 000e FB71     		strb	r3, [r7, #7]
1909:Generated_Source\PSoC5/CapSense_CSD.c ****             
1910:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1911:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1912:Generated_Source\PSoC5/CapSense_CSD.c ****             
1913:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1914:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1915:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1916:Generated_Source\PSoC5/CapSense_CSD.c ****         
1917:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1302              		.loc 1 1917 0
 1303 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1918:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1304              		.loc 1 1918 0
 1305 0012 1846     		mov	r0, r3
 1306 0014 0C37     		adds	r7, r7, #12
 1307              		.cfi_def_cfa_offset 4
 1308 0016 BD46     		mov	sp, r7
 1309              		.cfi_def_cfa_register 13
 1310              		@ sp needed
 1311 0018 80BC     		pop	{r7}
 1312              		.cfi_restore 7
 1313              		.cfi_def_cfa_offset 0
 1314 001a 7047     		bx	lr
 1315              	.L64:
 1316              		.align	2
 1317              	.L63:
 1318 001c 2D640040 		.word	1073767469
 1319              		.cfi_endproc
 1320              	.LFE16:
 1321              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1322              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1323              		.align	2
 1324              		.global	CapSense_CSD_SetScanSpeed
 1325              		.thumb
 1326              		.thumb_func
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 58


 1327              		.type	CapSense_CSD_SetScanSpeed, %function
 1328              	CapSense_CSD_SetScanSpeed:
 1329              	.LFB17:
1919:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1920:Generated_Source\PSoC5/CapSense_CSD.c **** 
1921:Generated_Source\PSoC5/CapSense_CSD.c **** 
1922:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1923:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1924:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1925:Generated_Source\PSoC5/CapSense_CSD.c **** *
1926:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1927:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1928:Generated_Source\PSoC5/CapSense_CSD.c **** *
1929:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1930:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1931:Generated_Source\PSoC5/CapSense_CSD.c **** *
1932:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1933:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1934:Generated_Source\PSoC5/CapSense_CSD.c **** *
1935:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1936:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1937:Generated_Source\PSoC5/CapSense_CSD.c **** {
 1330              		.loc 1 1937 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 8
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335 0000 80B4     		push	{r7}
 1336              		.cfi_def_cfa_offset 4
 1337              		.cfi_offset 7, -4
 1338 0002 83B0     		sub	sp, sp, #12
 1339              		.cfi_def_cfa_offset 16
 1340 0004 00AF     		add	r7, sp, #0
 1341              		.cfi_def_cfa_register 7
 1342 0006 0346     		mov	r3, r0
 1343 0008 FB71     		strb	r3, [r7, #7]
1938:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1344              		.loc 1 1938 0
 1345 000a 044A     		ldr	r2, .L66
 1346 000c FB79     		ldrb	r3, [r7, #7]
 1347 000e 1370     		strb	r3, [r2]
1939:Generated_Source\PSoC5/CapSense_CSD.c **** }
 1348              		.loc 1 1939 0
 1349 0010 00BF     		nop
 1350 0012 0C37     		adds	r7, r7, #12
 1351              		.cfi_def_cfa_offset 4
 1352 0014 BD46     		mov	sp, r7
 1353              		.cfi_def_cfa_register 13
 1354              		@ sp needed
 1355 0016 80BC     		pop	{r7}
 1356              		.cfi_restore 7
 1357              		.cfi_def_cfa_offset 0
 1358 0018 7047     		bx	lr
 1359              	.L67:
 1360 001a 00BF     		.align	2
 1361              	.L66:
 1362 001c 8C640040 		.word	1073767564
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 59


 1363              		.cfi_endproc
 1364              	.LFE17:
 1365              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1366              		.text
 1367              	.Letext0:
 1368              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1369              		.section	.debug_info,"",%progbits
 1370              	.Ldebug_info0:
 1371 0000 18050000 		.4byte	0x518
 1372 0004 0400     		.2byte	0x4
 1373 0006 00000000 		.4byte	.Ldebug_abbrev0
 1374 000a 04       		.byte	0x4
 1375 000b 01       		.uleb128 0x1
 1376 000c 10000000 		.4byte	.LASF59
 1377 0010 0C       		.byte	0xc
 1378 0011 1B020000 		.4byte	.LASF60
 1379 0015 62020000 		.4byte	.LASF61
 1380 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1381 001d 00000000 		.4byte	0
 1382 0021 00000000 		.4byte	.Ldebug_line0
 1383 0025 02       		.uleb128 0x2
 1384 0026 01       		.byte	0x1
 1385 0027 06       		.byte	0x6
 1386 0028 0B010000 		.4byte	.LASF0
 1387 002c 02       		.uleb128 0x2
 1388 002d 01       		.byte	0x1
 1389 002e 08       		.byte	0x8
 1390 002f DA030000 		.4byte	.LASF1
 1391 0033 02       		.uleb128 0x2
 1392 0034 02       		.byte	0x2
 1393 0035 05       		.byte	0x5
 1394 0036 E8030000 		.4byte	.LASF2
 1395 003a 02       		.uleb128 0x2
 1396 003b 02       		.byte	0x2
 1397 003c 07       		.byte	0x7
 1398 003d B7020000 		.4byte	.LASF3
 1399 0041 02       		.uleb128 0x2
 1400 0042 04       		.byte	0x4
 1401 0043 05       		.byte	0x5
 1402 0044 42010000 		.4byte	.LASF4
 1403 0048 02       		.uleb128 0x2
 1404 0049 04       		.byte	0x4
 1405 004a 07       		.byte	0x7
 1406 004b 09020000 		.4byte	.LASF5
 1407 004f 02       		.uleb128 0x2
 1408 0050 08       		.byte	0x8
 1409 0051 05       		.byte	0x5
 1410 0052 FD000000 		.4byte	.LASF6
 1411 0056 02       		.uleb128 0x2
 1412 0057 08       		.byte	0x8
 1413 0058 07       		.byte	0x7
 1414 0059 B8000000 		.4byte	.LASF7
 1415 005d 03       		.uleb128 0x3
 1416 005e 04       		.byte	0x4
 1417 005f 05       		.byte	0x5
 1418 0060 696E7400 		.ascii	"int\000"
 1419 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 60


 1420 0065 04       		.byte	0x4
 1421 0066 07       		.byte	0x7
 1422 0067 FC010000 		.4byte	.LASF8
 1423 006b 04       		.uleb128 0x4
 1424 006c 7A010000 		.4byte	.LASF9
 1425 0070 02       		.byte	0x2
 1426 0071 9201     		.2byte	0x192
 1427 0073 2C000000 		.4byte	0x2c
 1428 0077 04       		.uleb128 0x4
 1429 0078 00000000 		.4byte	.LASF10
 1430 007c 02       		.byte	0x2
 1431 007d 9301     		.2byte	0x193
 1432 007f 3A000000 		.4byte	0x3a
 1433 0083 04       		.uleb128 0x4
 1434 0084 9C010000 		.4byte	.LASF11
 1435 0088 02       		.byte	0x2
 1436 0089 9401     		.2byte	0x194
 1437 008b 48000000 		.4byte	0x48
 1438 008f 02       		.uleb128 0x2
 1439 0090 04       		.byte	0x4
 1440 0091 04       		.byte	0x4
 1441 0092 AB030000 		.4byte	.LASF12
 1442 0096 02       		.uleb128 0x2
 1443 0097 08       		.byte	0x8
 1444 0098 04       		.byte	0x4
 1445 0099 80010000 		.4byte	.LASF13
 1446 009d 02       		.uleb128 0x2
 1447 009e 01       		.byte	0x1
 1448 009f 08       		.byte	0x8
 1449 00a0 50040000 		.4byte	.LASF14
 1450 00a4 04       		.uleb128 0x4
 1451 00a5 D5030000 		.4byte	.LASF15
 1452 00a9 02       		.byte	0x2
 1453 00aa 3C02     		.2byte	0x23c
 1454 00ac B0000000 		.4byte	0xb0
 1455 00b0 05       		.uleb128 0x5
 1456 00b1 6B000000 		.4byte	0x6b
 1457 00b5 04       		.uleb128 0x4
 1458 00b6 34030000 		.4byte	.LASF16
 1459 00ba 02       		.byte	0x2
 1460 00bb 3E02     		.2byte	0x23e
 1461 00bd C1000000 		.4byte	0xc1
 1462 00c1 05       		.uleb128 0x5
 1463 00c2 83000000 		.4byte	0x83
 1464 00c6 02       		.uleb128 0x2
 1465 00c7 08       		.byte	0x8
 1466 00c8 04       		.byte	0x4
 1467 00c9 5D030000 		.4byte	.LASF17
 1468 00cd 02       		.uleb128 0x2
 1469 00ce 04       		.byte	0x4
 1470 00cf 07       		.byte	0x7
 1471 00d0 54030000 		.4byte	.LASF18
 1472 00d4 06       		.uleb128 0x6
 1473 00d5 30010000 		.4byte	.LASF19
 1474 00d9 01       		.byte	0x1
 1475 00da 79       		.byte	0x79
 1476 00db 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 61


 1477 00df F4000000 		.4byte	.LFE0-.LFB0
 1478 00e3 01       		.uleb128 0x1
 1479 00e4 9C       		.byte	0x9c
 1480 00e5 F8000000 		.4byte	0xf8
 1481 00e9 07       		.uleb128 0x7
 1482 00ea DD040000 		.4byte	.LASF21
 1483 00ee 01       		.byte	0x1
 1484 00ef 80       		.byte	0x80
 1485 00f0 6B000000 		.4byte	0x6b
 1486 00f4 02       		.uleb128 0x2
 1487 00f5 91       		.byte	0x91
 1488 00f6 77       		.sleb128 -9
 1489 00f7 00       		.byte	0
 1490 00f8 08       		.uleb128 0x8
 1491 00f9 C9040000 		.4byte	.LASF20
 1492 00fd 01       		.byte	0x1
 1493 00fe 5A01     		.2byte	0x15a
 1494 0100 00000000 		.4byte	.LFB1
 1495 0104 98000000 		.4byte	.LFE1-.LFB1
 1496 0108 01       		.uleb128 0x1
 1497 0109 9C       		.byte	0x9c
 1498 010a 1E010000 		.4byte	0x11e
 1499 010e 09       		.uleb128 0x9
 1500 010f DD040000 		.4byte	.LASF21
 1501 0113 01       		.byte	0x1
 1502 0114 5C01     		.2byte	0x15c
 1503 0116 6B000000 		.4byte	0x6b
 1504 011a 02       		.uleb128 0x2
 1505 011b 91       		.byte	0x91
 1506 011c 77       		.sleb128 -9
 1507 011d 00       		.byte	0
 1508 011e 0A       		.uleb128 0xa
 1509 011f 69030000 		.4byte	.LASF22
 1510 0123 01       		.byte	0x1
 1511 0124 F301     		.2byte	0x1f3
 1512 0126 00000000 		.4byte	.LFB2
 1513 012a 24000000 		.4byte	.LFE2-.LFB2
 1514 012e 01       		.uleb128 0x1
 1515 012f 9C       		.byte	0x9c
 1516 0130 0A       		.uleb128 0xa
 1517 0131 3E040000 		.4byte	.LASF23
 1518 0135 01       		.byte	0x1
 1519 0136 1802     		.2byte	0x218
 1520 0138 00000000 		.4byte	.LFB3
 1521 013c 98000000 		.4byte	.LFE3-.LFB3
 1522 0140 01       		.uleb128 0x1
 1523 0141 9C       		.byte	0x9c
 1524 0142 0B       		.uleb128 0xb
 1525 0143 EE040000 		.4byte	.LASF32
 1526 0147 01       		.byte	0x1
 1527 0148 A202     		.2byte	0x2a2
 1528 014a 6B000000 		.4byte	0x6b
 1529 014e 00000000 		.4byte	.LFB4
 1530 0152 50000000 		.4byte	.LFE4-.LFB4
 1531 0156 01       		.uleb128 0x1
 1532 0157 9C       		.byte	0x9c
 1533 0158 8A010000 		.4byte	0x18a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 62


 1534 015c 0C       		.uleb128 0xc
 1535 015d 07000000 		.4byte	.LASF26
 1536 0161 01       		.byte	0x1
 1537 0162 A202     		.2byte	0x2a2
 1538 0164 6B000000 		.4byte	0x6b
 1539 0168 02       		.uleb128 0x2
 1540 0169 91       		.byte	0x91
 1541 016a 6F       		.sleb128 -17
 1542 016b 0D       		.uleb128 0xd
 1543 016c 706F7300 		.ascii	"pos\000"
 1544 0170 01       		.byte	0x1
 1545 0171 A402     		.2byte	0x2a4
 1546 0173 6B000000 		.4byte	0x6b
 1547 0177 02       		.uleb128 0x2
 1548 0178 91       		.byte	0x91
 1549 0179 77       		.sleb128 -9
 1550 017a 09       		.uleb128 0x9
 1551 017b 86030000 		.4byte	.LASF24
 1552 017f 01       		.byte	0x1
 1553 0180 A502     		.2byte	0x2a5
 1554 0182 6B000000 		.4byte	0x6b
 1555 0186 02       		.uleb128 0x2
 1556 0187 91       		.byte	0x91
 1557 0188 76       		.sleb128 -10
 1558 0189 00       		.byte	0
 1559 018a 08       		.uleb128 0x8
 1560 018b 55040000 		.4byte	.LASF25
 1561 018f 01       		.byte	0x1
 1562 0190 3C03     		.2byte	0x33c
 1563 0192 00000000 		.4byte	.LFB5
 1564 0196 50000000 		.4byte	.LFE5-.LFB5
 1565 019a 01       		.uleb128 0x1
 1566 019b 9C       		.byte	0x9c
 1567 019c BF010000 		.4byte	0x1bf
 1568 01a0 0C       		.uleb128 0xc
 1569 01a1 02030000 		.4byte	.LASF27
 1570 01a5 01       		.byte	0x1
 1571 01a6 3C03     		.2byte	0x33c
 1572 01a8 6B000000 		.4byte	0x6b
 1573 01ac 02       		.uleb128 0x2
 1574 01ad 91       		.byte	0x91
 1575 01ae 6F       		.sleb128 -17
 1576 01af 09       		.uleb128 0x9
 1577 01b0 F2030000 		.4byte	.LASF28
 1578 01b4 01       		.byte	0x1
 1579 01b5 3E03     		.2byte	0x33e
 1580 01b7 6B000000 		.4byte	0x6b
 1581 01bb 02       		.uleb128 0x2
 1582 01bc 91       		.byte	0x91
 1583 01bd 77       		.sleb128 -9
 1584 01be 00       		.byte	0
 1585 01bf 08       		.uleb128 0x8
 1586 01c0 1C030000 		.4byte	.LASF29
 1587 01c4 01       		.byte	0x1
 1588 01c5 AC03     		.2byte	0x3ac
 1589 01c7 00000000 		.4byte	.LFB6
 1590 01cb 34000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 63


 1591 01cf 01       		.uleb128 0x1
 1592 01d0 9C       		.byte	0x9c
 1593 01d1 E5010000 		.4byte	0x1e5
 1594 01d5 0C       		.uleb128 0xc
 1595 01d6 CA020000 		.4byte	.LASF30
 1596 01da 01       		.byte	0x1
 1597 01db AC03     		.2byte	0x3ac
 1598 01dd 6B000000 		.4byte	0x6b
 1599 01e1 02       		.uleb128 0x2
 1600 01e2 91       		.byte	0x91
 1601 01e3 77       		.sleb128 -9
 1602 01e4 00       		.byte	0
 1603 01e5 0A       		.uleb128 0xa
 1604 01e6 A3010000 		.4byte	.LASF31
 1605 01ea 01       		.byte	0x1
 1606 01eb F903     		.2byte	0x3f9
 1607 01ed 00000000 		.4byte	.LFB7
 1608 01f1 58000000 		.4byte	.LFE7-.LFB7
 1609 01f5 01       		.uleb128 0x1
 1610 01f6 9C       		.byte	0x9c
 1611 01f7 0E       		.uleb128 0xe
 1612 01f8 F9030000 		.4byte	.LASF62
 1613 01fc 01       		.byte	0x1
 1614 01fd 2E04     		.2byte	0x42e
 1615 01ff 6B000000 		.4byte	0x6b
 1616 0203 00000000 		.4byte	.LFB8
 1617 0207 1C000000 		.4byte	.LFE8-.LFB8
 1618 020b 01       		.uleb128 0x1
 1619 020c 9C       		.byte	0x9c
 1620 020d 0B       		.uleb128 0xb
 1621 020e 76040000 		.4byte	.LASF33
 1622 0212 01       		.byte	0x1
 1623 0213 4704     		.2byte	0x447
 1624 0215 77000000 		.4byte	0x77
 1625 0219 00000000 		.4byte	.LFB9
 1626 021d 20000000 		.4byte	.LFE9-.LFB9
 1627 0221 01       		.uleb128 0x1
 1628 0222 9C       		.byte	0x9c
 1629 0223 37020000 		.4byte	0x237
 1630 0227 0C       		.uleb128 0xc
 1631 0228 CA020000 		.4byte	.LASF30
 1632 022c 01       		.byte	0x1
 1633 022d 4704     		.2byte	0x447
 1634 022f 6B000000 		.4byte	0x6b
 1635 0233 02       		.uleb128 0x2
 1636 0234 91       		.byte	0x91
 1637 0235 77       		.sleb128 -9
 1638 0236 00       		.byte	0
 1639 0237 08       		.uleb128 0x8
 1640 0238 C8010000 		.4byte	.LASF34
 1641 023c 01       		.byte	0x1
 1642 023d 5C04     		.2byte	0x45c
 1643 023f 00000000 		.4byte	.LFB10
 1644 0243 28000000 		.4byte	.LFE10-.LFB10
 1645 0247 01       		.uleb128 0x1
 1646 0248 9C       		.byte	0x9c
 1647 0249 5B020000 		.4byte	0x25b
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 64


 1648 024d 0D       		.uleb128 0xd
 1649 024e 6900     		.ascii	"i\000"
 1650 0250 01       		.byte	0x1
 1651 0251 5E04     		.2byte	0x45e
 1652 0253 6B000000 		.4byte	0x6b
 1653 0257 02       		.uleb128 0x2
 1654 0258 91       		.byte	0x91
 1655 0259 77       		.sleb128 -9
 1656 025a 00       		.byte	0
 1657 025b 08       		.uleb128 0x8
 1658 025c 3A030000 		.4byte	.LASF35
 1659 0260 01       		.byte	0x1
 1660 0261 F204     		.2byte	0x4f2
 1661 0263 00000000 		.4byte	.LFB11
 1662 0267 6C000000 		.4byte	.LFE11-.LFB11
 1663 026b 01       		.uleb128 0x1
 1664 026c 9C       		.byte	0x9c
 1665 026d 9F020000 		.4byte	0x29f
 1666 0271 0C       		.uleb128 0xc
 1667 0272 CA020000 		.4byte	.LASF30
 1668 0276 01       		.byte	0x1
 1669 0277 F204     		.2byte	0x4f2
 1670 0279 6B000000 		.4byte	0x6b
 1671 027d 02       		.uleb128 0x2
 1672 027e 91       		.byte	0x91
 1673 027f 6F       		.sleb128 -17
 1674 0280 09       		.uleb128 0x9
 1675 0281 E2010000 		.4byte	.LASF36
 1676 0285 01       		.byte	0x1
 1677 0286 F404     		.2byte	0x4f4
 1678 0288 6B000000 		.4byte	0x6b
 1679 028c 02       		.uleb128 0x2
 1680 028d 91       		.byte	0x91
 1681 028e 77       		.sleb128 -9
 1682 028f 09       		.uleb128 0x9
 1683 0290 C3010000 		.4byte	.LASF37
 1684 0294 01       		.byte	0x1
 1685 0295 F504     		.2byte	0x4f5
 1686 0297 6B000000 		.4byte	0x6b
 1687 029b 02       		.uleb128 0x2
 1688 029c 91       		.byte	0x91
 1689 029d 76       		.sleb128 -10
 1690 029e 00       		.byte	0
 1691 029f 08       		.uleb128 0x8
 1692 02a0 D1020000 		.4byte	.LASF38
 1693 02a4 01       		.byte	0x1
 1694 02a5 4705     		.2byte	0x547
 1695 02a7 00000000 		.4byte	.LFB12
 1696 02ab 70000000 		.4byte	.LFE12-.LFB12
 1697 02af 01       		.uleb128 0x1
 1698 02b0 9C       		.byte	0x9c
 1699 02b1 E3020000 		.4byte	0x2e3
 1700 02b5 0C       		.uleb128 0xc
 1701 02b6 CA020000 		.4byte	.LASF30
 1702 02ba 01       		.byte	0x1
 1703 02bb 4705     		.2byte	0x547
 1704 02bd 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 65


 1705 02c1 02       		.uleb128 0x2
 1706 02c2 91       		.byte	0x91
 1707 02c3 6F       		.sleb128 -17
 1708 02c4 09       		.uleb128 0x9
 1709 02c5 E2010000 		.4byte	.LASF36
 1710 02c9 01       		.byte	0x1
 1711 02ca 4905     		.2byte	0x549
 1712 02cc 6B000000 		.4byte	0x6b
 1713 02d0 02       		.uleb128 0x2
 1714 02d1 91       		.byte	0x91
 1715 02d2 77       		.sleb128 -9
 1716 02d3 09       		.uleb128 0x9
 1717 02d4 C3010000 		.4byte	.LASF37
 1718 02d8 01       		.byte	0x1
 1719 02d9 4A05     		.2byte	0x54a
 1720 02db 6B000000 		.4byte	0x6b
 1721 02df 02       		.uleb128 0x2
 1722 02e0 91       		.byte	0x91
 1723 02e1 76       		.sleb128 -10
 1724 02e2 00       		.byte	0
 1725 02e3 08       		.uleb128 0x8
 1726 02e4 E7010000 		.4byte	.LASF39
 1727 02e8 01       		.byte	0x1
 1728 02e9 9B05     		.2byte	0x59b
 1729 02eb 00000000 		.4byte	.LFB13
 1730 02ef 5C000000 		.4byte	.LFE13-.LFB13
 1731 02f3 01       		.uleb128 0x1
 1732 02f4 9C       		.byte	0x9c
 1733 02f5 09030000 		.4byte	0x309
 1734 02f9 0C       		.uleb128 0xc
 1735 02fa CA020000 		.4byte	.LASF30
 1736 02fe 01       		.byte	0x1
 1737 02ff 9B05     		.2byte	0x59b
 1738 0301 6B000000 		.4byte	0x6b
 1739 0305 02       		.uleb128 0x2
 1740 0306 91       		.byte	0x91
 1741 0307 77       		.sleb128 -9
 1742 0308 00       		.byte	0
 1743 0309 08       		.uleb128 0x8
 1744 030a EC020000 		.4byte	.LASF40
 1745 030e 01       		.byte	0x1
 1746 030f 4306     		.2byte	0x643
 1747 0311 00000000 		.4byte	.LFB14
 1748 0315 98000000 		.4byte	.LFE14-.LFB14
 1749 0319 01       		.uleb128 0x1
 1750 031a 9C       		.byte	0x9c
 1751 031b 2F030000 		.4byte	0x32f
 1752 031f 0C       		.uleb128 0xc
 1753 0320 CA020000 		.4byte	.LASF30
 1754 0324 01       		.byte	0x1
 1755 0325 4306     		.2byte	0x643
 1756 0327 6B000000 		.4byte	0x6b
 1757 032b 02       		.uleb128 0x2
 1758 032c 91       		.byte	0x91
 1759 032d 77       		.sleb128 -9
 1760 032e 00       		.byte	0
 1761 032f 0F       		.uleb128 0xf
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 66


 1762 0330 9E000000 		.4byte	.LASF41
 1763 0334 01       		.byte	0x1
 1764 0335 5107     		.2byte	0x751
 1765 0337 00000000 		.4byte	.LFB15
 1766 033b 2C000000 		.4byte	.LFE15-.LFB15
 1767 033f 01       		.uleb128 0x1
 1768 0340 9C       		.byte	0x9c
 1769 0341 55030000 		.4byte	0x355
 1770 0345 0C       		.uleb128 0xc
 1771 0346 B1030000 		.4byte	.LASF42
 1772 034a 01       		.byte	0x1
 1773 034b 5107     		.2byte	0x751
 1774 034d 6B000000 		.4byte	0x6b
 1775 0351 02       		.uleb128 0x2
 1776 0352 91       		.byte	0x91
 1777 0353 77       		.sleb128 -9
 1778 0354 00       		.byte	0
 1779 0355 0B       		.uleb128 0xb
 1780 0356 BB030000 		.4byte	.LASF43
 1781 035a 01       		.byte	0x1
 1782 035b 6E07     		.2byte	0x76e
 1783 035d 6B000000 		.4byte	0x6b
 1784 0361 00000000 		.4byte	.LFB16
 1785 0365 20000000 		.4byte	.LFE16-.LFB16
 1786 0369 01       		.uleb128 0x1
 1787 036a 9C       		.byte	0x9c
 1788 036b 7F030000 		.4byte	0x37f
 1789 036f 09       		.uleb128 0x9
 1790 0370 B1030000 		.4byte	.LASF42
 1791 0374 01       		.byte	0x1
 1792 0375 7007     		.2byte	0x770
 1793 0377 6B000000 		.4byte	0x6b
 1794 037b 02       		.uleb128 0x2
 1795 037c 91       		.byte	0x91
 1796 037d 77       		.sleb128 -9
 1797 037e 00       		.byte	0
 1798 037f 0F       		.uleb128 0xf
 1799 0380 24040000 		.4byte	.LASF44
 1800 0384 01       		.byte	0x1
 1801 0385 9007     		.2byte	0x790
 1802 0387 00000000 		.4byte	.LFB17
 1803 038b 20000000 		.4byte	.LFE17-.LFB17
 1804 038f 01       		.uleb128 0x1
 1805 0390 9C       		.byte	0x9c
 1806 0391 A5030000 		.4byte	0x3a5
 1807 0395 0C       		.uleb128 0xc
 1808 0396 7C030000 		.4byte	.LASF45
 1809 039a 01       		.byte	0x1
 1810 039b 9007     		.2byte	0x790
 1811 039d 6B000000 		.4byte	0x6b
 1812 03a1 02       		.uleb128 0x2
 1813 03a2 91       		.byte	0x91
 1814 03a3 77       		.sleb128 -9
 1815 03a4 00       		.byte	0
 1816 03a5 07       		.uleb128 0x7
 1817 03a6 87010000 		.4byte	.LASF46
 1818 03aa 01       		.byte	0x1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 67


 1819 03ab 16       		.byte	0x16
 1820 03ac 6B000000 		.4byte	0x6b
 1821 03b0 05       		.uleb128 0x5
 1822 03b1 03       		.byte	0x3
 1823 03b2 00000000 		.4byte	CapSense_CSD_initVar
 1824 03b6 10       		.uleb128 0x10
 1825 03b7 0A050000 		.4byte	.LASF47
 1826 03bb 01       		.byte	0x1
 1827 03bc 19       		.byte	0x19
 1828 03bd B0000000 		.4byte	0xb0
 1829 03c1 05       		.uleb128 0x5
 1830 03c2 03       		.byte	0x3
 1831 03c3 00000000 		.4byte	CapSense_CSD_csv
 1832 03c7 10       		.uleb128 0x10
 1833 03c8 17010000 		.4byte	.LASF48
 1834 03cc 01       		.byte	0x1
 1835 03cd 1A       		.byte	0x1a
 1836 03ce B0000000 		.4byte	0xb0
 1837 03d2 05       		.uleb128 0x5
 1838 03d3 03       		.byte	0x3
 1839 03d4 00000000 		.4byte	CapSense_CSD_sensorIndex
 1840 03d8 11       		.uleb128 0x11
 1841 03d9 77000000 		.4byte	0x77
 1842 03dd E8030000 		.4byte	0x3e8
 1843 03e1 12       		.uleb128 0x12
 1844 03e2 CD000000 		.4byte	0xcd
 1845 03e6 06       		.byte	0x6
 1846 03e7 00       		.byte	0
 1847 03e8 10       		.uleb128 0x10
 1848 03e9 0D040000 		.4byte	.LASF49
 1849 03ed 01       		.byte	0x1
 1850 03ee 29       		.byte	0x29
 1851 03ef D8030000 		.4byte	0x3d8
 1852 03f3 05       		.uleb128 0x5
 1853 03f4 03       		.byte	0x3
 1854 03f5 00000000 		.4byte	CapSense_CSD_sensorRaw
 1855 03f9 11       		.uleb128 0x11
 1856 03fa 6B000000 		.4byte	0x6b
 1857 03fe 09040000 		.4byte	0x409
 1858 0402 12       		.uleb128 0x12
 1859 0403 CD000000 		.4byte	0xcd
 1860 0407 00       		.byte	0
 1861 0408 00       		.byte	0
 1862 0409 10       		.uleb128 0x10
 1863 040a 8D030000 		.4byte	.LASF50
 1864 040e 01       		.byte	0x1
 1865 040f 2B       		.byte	0x2b
 1866 0410 F9030000 		.4byte	0x3f9
 1867 0414 05       		.uleb128 0x5
 1868 0415 03       		.byte	0x3
 1869 0416 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1870 041a 11       		.uleb128 0x11
 1871 041b 30040000 		.4byte	0x430
 1872 041f 2A040000 		.4byte	0x42a
 1873 0423 12       		.uleb128 0x12
 1874 0424 CD000000 		.4byte	0xcd
 1875 0428 06       		.byte	0x6
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 68


 1876 0429 00       		.byte	0
 1877 042a 13       		.uleb128 0x13
 1878 042b 04       		.byte	0x4
 1879 042c 6B000000 		.4byte	0x6b
 1880 0430 14       		.uleb128 0x14
 1881 0431 2A040000 		.4byte	0x42a
 1882 0435 10       		.uleb128 0x10
 1883 0436 07030000 		.4byte	.LASF51
 1884 043a 01       		.byte	0x1
 1885 043b 2E       		.byte	0x2e
 1886 043c 46040000 		.4byte	0x446
 1887 0440 05       		.uleb128 0x5
 1888 0441 03       		.byte	0x3
 1889 0442 00000000 		.4byte	CapSense_CSD_pcTable
 1890 0446 14       		.uleb128 0x14
 1891 0447 1A040000 		.4byte	0x41a
 1892 044b 11       		.uleb128 0x11
 1893 044c 5B040000 		.4byte	0x45b
 1894 0450 5B040000 		.4byte	0x45b
 1895 0454 12       		.uleb128 0x12
 1896 0455 CD000000 		.4byte	0xcd
 1897 0459 06       		.byte	0x6
 1898 045a 00       		.byte	0
 1899 045b 14       		.uleb128 0x14
 1900 045c 6B000000 		.4byte	0x6b
 1901 0460 10       		.uleb128 0x10
 1902 0461 E6000000 		.4byte	.LASF52
 1903 0465 01       		.byte	0x1
 1904 0466 38       		.byte	0x38
 1905 0467 71040000 		.4byte	0x471
 1906 046b 05       		.uleb128 0x5
 1907 046c 03       		.byte	0x3
 1908 046d 00000000 		.4byte	CapSense_CSD_portTable
 1909 0471 14       		.uleb128 0x14
 1910 0472 4B040000 		.4byte	0x44b
 1911 0476 10       		.uleb128 0x10
 1912 0477 CF000000 		.4byte	.LASF53
 1913 047b 01       		.byte	0x1
 1914 047c 42       		.byte	0x42
 1915 047d 87040000 		.4byte	0x487
 1916 0481 05       		.uleb128 0x5
 1917 0482 03       		.byte	0x3
 1918 0483 00000000 		.4byte	CapSense_CSD_maskTable
 1919 0487 14       		.uleb128 0x14
 1920 0488 4B040000 		.4byte	0x44b
 1921 048c 11       		.uleb128 0x11
 1922 048d 30040000 		.4byte	0x430
 1923 0491 9C040000 		.4byte	0x49c
 1924 0495 12       		.uleb128 0x12
 1925 0496 CD000000 		.4byte	0xcd
 1926 049a 07       		.byte	0x7
 1927 049b 00       		.byte	0
 1928 049c 10       		.uleb128 0x10
 1929 049d 65010000 		.4byte	.LASF54
 1930 04a1 01       		.byte	0x1
 1931 04a2 4C       		.byte	0x4c
 1932 04a3 AD040000 		.4byte	0x4ad
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 69


 1933 04a7 05       		.uleb128 0x5
 1934 04a8 03       		.byte	0x3
 1935 04a9 00000000 		.4byte	CapSense_CSD_csTable
 1936 04ad 14       		.uleb128 0x14
 1937 04ae 8C040000 		.4byte	0x48c
 1938 04b2 11       		.uleb128 0x11
 1939 04b3 6B000000 		.4byte	0x6b
 1940 04b7 C2040000 		.4byte	0x4c2
 1941 04bb 12       		.uleb128 0x12
 1942 04bc CD000000 		.4byte	0xcd
 1943 04c0 06       		.byte	0x6
 1944 04c1 00       		.byte	0
 1945 04c2 10       		.uleb128 0x10
 1946 04c3 AF040000 		.4byte	.LASF55
 1947 04c7 01       		.byte	0x1
 1948 04c8 52       		.byte	0x52
 1949 04c9 B2040000 		.4byte	0x4b2
 1950 04cd 05       		.uleb128 0x5
 1951 04ce 03       		.byte	0x3
 1952 04cf 00000000 		.4byte	CapSense_CSD_idacSettings
 1953 04d3 11       		.uleb128 0x11
 1954 04d4 6B000000 		.4byte	0x6b
 1955 04d8 E3040000 		.4byte	0x4e3
 1956 04dc 12       		.uleb128 0x12
 1957 04dd CD000000 		.4byte	0xcd
 1958 04e1 02       		.byte	0x2
 1959 04e2 00       		.byte	0
 1960 04e3 10       		.uleb128 0x10
 1961 04e4 91040000 		.4byte	.LASF56
 1962 04e8 01       		.byte	0x1
 1963 04e9 56       		.byte	0x56
 1964 04ea D3040000 		.4byte	0x4d3
 1965 04ee 05       		.uleb128 0x5
 1966 04ef 03       		.byte	0x3
 1967 04f0 00000000 		.4byte	CapSense_CSD_widgetResolution
 1968 04f4 10       		.uleb128 0x10
 1969 04f5 41020000 		.4byte	.LASF57
 1970 04f9 01       		.byte	0x1
 1971 04fa 5C       		.byte	0x5c
 1972 04fb B2040000 		.4byte	0x4b2
 1973 04ff 05       		.uleb128 0x5
 1974 0500 03       		.byte	0x3
 1975 0501 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 1976 0505 10       		.uleb128 0x10
 1977 0506 4B010000 		.4byte	.LASF58
 1978 050a 01       		.byte	0x1
 1979 050b 60       		.byte	0x60
 1980 050c 16050000 		.4byte	0x516
 1981 0510 05       		.uleb128 0x5
 1982 0511 03       		.byte	0x3
 1983 0512 00000000 		.4byte	CapSense_CSD_widgetNumber
 1984 0516 14       		.uleb128 0x14
 1985 0517 4B040000 		.4byte	0x44b
 1986 051b 00       		.byte	0
 1987              		.section	.debug_abbrev,"",%progbits
 1988              	.Ldebug_abbrev0:
 1989 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 70


 1990 0001 11       		.uleb128 0x11
 1991 0002 01       		.byte	0x1
 1992 0003 25       		.uleb128 0x25
 1993 0004 0E       		.uleb128 0xe
 1994 0005 13       		.uleb128 0x13
 1995 0006 0B       		.uleb128 0xb
 1996 0007 03       		.uleb128 0x3
 1997 0008 0E       		.uleb128 0xe
 1998 0009 1B       		.uleb128 0x1b
 1999 000a 0E       		.uleb128 0xe
 2000 000b 55       		.uleb128 0x55
 2001 000c 17       		.uleb128 0x17
 2002 000d 11       		.uleb128 0x11
 2003 000e 01       		.uleb128 0x1
 2004 000f 10       		.uleb128 0x10
 2005 0010 17       		.uleb128 0x17
 2006 0011 00       		.byte	0
 2007 0012 00       		.byte	0
 2008 0013 02       		.uleb128 0x2
 2009 0014 24       		.uleb128 0x24
 2010 0015 00       		.byte	0
 2011 0016 0B       		.uleb128 0xb
 2012 0017 0B       		.uleb128 0xb
 2013 0018 3E       		.uleb128 0x3e
 2014 0019 0B       		.uleb128 0xb
 2015 001a 03       		.uleb128 0x3
 2016 001b 0E       		.uleb128 0xe
 2017 001c 00       		.byte	0
 2018 001d 00       		.byte	0
 2019 001e 03       		.uleb128 0x3
 2020 001f 24       		.uleb128 0x24
 2021 0020 00       		.byte	0
 2022 0021 0B       		.uleb128 0xb
 2023 0022 0B       		.uleb128 0xb
 2024 0023 3E       		.uleb128 0x3e
 2025 0024 0B       		.uleb128 0xb
 2026 0025 03       		.uleb128 0x3
 2027 0026 08       		.uleb128 0x8
 2028 0027 00       		.byte	0
 2029 0028 00       		.byte	0
 2030 0029 04       		.uleb128 0x4
 2031 002a 16       		.uleb128 0x16
 2032 002b 00       		.byte	0
 2033 002c 03       		.uleb128 0x3
 2034 002d 0E       		.uleb128 0xe
 2035 002e 3A       		.uleb128 0x3a
 2036 002f 0B       		.uleb128 0xb
 2037 0030 3B       		.uleb128 0x3b
 2038 0031 05       		.uleb128 0x5
 2039 0032 49       		.uleb128 0x49
 2040 0033 13       		.uleb128 0x13
 2041 0034 00       		.byte	0
 2042 0035 00       		.byte	0
 2043 0036 05       		.uleb128 0x5
 2044 0037 35       		.uleb128 0x35
 2045 0038 00       		.byte	0
 2046 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 71


 2047 003a 13       		.uleb128 0x13
 2048 003b 00       		.byte	0
 2049 003c 00       		.byte	0
 2050 003d 06       		.uleb128 0x6
 2051 003e 2E       		.uleb128 0x2e
 2052 003f 01       		.byte	0x1
 2053 0040 3F       		.uleb128 0x3f
 2054 0041 19       		.uleb128 0x19
 2055 0042 03       		.uleb128 0x3
 2056 0043 0E       		.uleb128 0xe
 2057 0044 3A       		.uleb128 0x3a
 2058 0045 0B       		.uleb128 0xb
 2059 0046 3B       		.uleb128 0x3b
 2060 0047 0B       		.uleb128 0xb
 2061 0048 27       		.uleb128 0x27
 2062 0049 19       		.uleb128 0x19
 2063 004a 11       		.uleb128 0x11
 2064 004b 01       		.uleb128 0x1
 2065 004c 12       		.uleb128 0x12
 2066 004d 06       		.uleb128 0x6
 2067 004e 40       		.uleb128 0x40
 2068 004f 18       		.uleb128 0x18
 2069 0050 9642     		.uleb128 0x2116
 2070 0052 19       		.uleb128 0x19
 2071 0053 01       		.uleb128 0x1
 2072 0054 13       		.uleb128 0x13
 2073 0055 00       		.byte	0
 2074 0056 00       		.byte	0
 2075 0057 07       		.uleb128 0x7
 2076 0058 34       		.uleb128 0x34
 2077 0059 00       		.byte	0
 2078 005a 03       		.uleb128 0x3
 2079 005b 0E       		.uleb128 0xe
 2080 005c 3A       		.uleb128 0x3a
 2081 005d 0B       		.uleb128 0xb
 2082 005e 3B       		.uleb128 0x3b
 2083 005f 0B       		.uleb128 0xb
 2084 0060 49       		.uleb128 0x49
 2085 0061 13       		.uleb128 0x13
 2086 0062 02       		.uleb128 0x2
 2087 0063 18       		.uleb128 0x18
 2088 0064 00       		.byte	0
 2089 0065 00       		.byte	0
 2090 0066 08       		.uleb128 0x8
 2091 0067 2E       		.uleb128 0x2e
 2092 0068 01       		.byte	0x1
 2093 0069 3F       		.uleb128 0x3f
 2094 006a 19       		.uleb128 0x19
 2095 006b 03       		.uleb128 0x3
 2096 006c 0E       		.uleb128 0xe
 2097 006d 3A       		.uleb128 0x3a
 2098 006e 0B       		.uleb128 0xb
 2099 006f 3B       		.uleb128 0x3b
 2100 0070 05       		.uleb128 0x5
 2101 0071 27       		.uleb128 0x27
 2102 0072 19       		.uleb128 0x19
 2103 0073 11       		.uleb128 0x11
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 72


 2104 0074 01       		.uleb128 0x1
 2105 0075 12       		.uleb128 0x12
 2106 0076 06       		.uleb128 0x6
 2107 0077 40       		.uleb128 0x40
 2108 0078 18       		.uleb128 0x18
 2109 0079 9642     		.uleb128 0x2116
 2110 007b 19       		.uleb128 0x19
 2111 007c 01       		.uleb128 0x1
 2112 007d 13       		.uleb128 0x13
 2113 007e 00       		.byte	0
 2114 007f 00       		.byte	0
 2115 0080 09       		.uleb128 0x9
 2116 0081 34       		.uleb128 0x34
 2117 0082 00       		.byte	0
 2118 0083 03       		.uleb128 0x3
 2119 0084 0E       		.uleb128 0xe
 2120 0085 3A       		.uleb128 0x3a
 2121 0086 0B       		.uleb128 0xb
 2122 0087 3B       		.uleb128 0x3b
 2123 0088 05       		.uleb128 0x5
 2124 0089 49       		.uleb128 0x49
 2125 008a 13       		.uleb128 0x13
 2126 008b 02       		.uleb128 0x2
 2127 008c 18       		.uleb128 0x18
 2128 008d 00       		.byte	0
 2129 008e 00       		.byte	0
 2130 008f 0A       		.uleb128 0xa
 2131 0090 2E       		.uleb128 0x2e
 2132 0091 00       		.byte	0
 2133 0092 3F       		.uleb128 0x3f
 2134 0093 19       		.uleb128 0x19
 2135 0094 03       		.uleb128 0x3
 2136 0095 0E       		.uleb128 0xe
 2137 0096 3A       		.uleb128 0x3a
 2138 0097 0B       		.uleb128 0xb
 2139 0098 3B       		.uleb128 0x3b
 2140 0099 05       		.uleb128 0x5
 2141 009a 27       		.uleb128 0x27
 2142 009b 19       		.uleb128 0x19
 2143 009c 11       		.uleb128 0x11
 2144 009d 01       		.uleb128 0x1
 2145 009e 12       		.uleb128 0x12
 2146 009f 06       		.uleb128 0x6
 2147 00a0 40       		.uleb128 0x40
 2148 00a1 18       		.uleb128 0x18
 2149 00a2 9642     		.uleb128 0x2116
 2150 00a4 19       		.uleb128 0x19
 2151 00a5 00       		.byte	0
 2152 00a6 00       		.byte	0
 2153 00a7 0B       		.uleb128 0xb
 2154 00a8 2E       		.uleb128 0x2e
 2155 00a9 01       		.byte	0x1
 2156 00aa 3F       		.uleb128 0x3f
 2157 00ab 19       		.uleb128 0x19
 2158 00ac 03       		.uleb128 0x3
 2159 00ad 0E       		.uleb128 0xe
 2160 00ae 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 73


 2161 00af 0B       		.uleb128 0xb
 2162 00b0 3B       		.uleb128 0x3b
 2163 00b1 05       		.uleb128 0x5
 2164 00b2 27       		.uleb128 0x27
 2165 00b3 19       		.uleb128 0x19
 2166 00b4 49       		.uleb128 0x49
 2167 00b5 13       		.uleb128 0x13
 2168 00b6 11       		.uleb128 0x11
 2169 00b7 01       		.uleb128 0x1
 2170 00b8 12       		.uleb128 0x12
 2171 00b9 06       		.uleb128 0x6
 2172 00ba 40       		.uleb128 0x40
 2173 00bb 18       		.uleb128 0x18
 2174 00bc 9742     		.uleb128 0x2117
 2175 00be 19       		.uleb128 0x19
 2176 00bf 01       		.uleb128 0x1
 2177 00c0 13       		.uleb128 0x13
 2178 00c1 00       		.byte	0
 2179 00c2 00       		.byte	0
 2180 00c3 0C       		.uleb128 0xc
 2181 00c4 05       		.uleb128 0x5
 2182 00c5 00       		.byte	0
 2183 00c6 03       		.uleb128 0x3
 2184 00c7 0E       		.uleb128 0xe
 2185 00c8 3A       		.uleb128 0x3a
 2186 00c9 0B       		.uleb128 0xb
 2187 00ca 3B       		.uleb128 0x3b
 2188 00cb 05       		.uleb128 0x5
 2189 00cc 49       		.uleb128 0x49
 2190 00cd 13       		.uleb128 0x13
 2191 00ce 02       		.uleb128 0x2
 2192 00cf 18       		.uleb128 0x18
 2193 00d0 00       		.byte	0
 2194 00d1 00       		.byte	0
 2195 00d2 0D       		.uleb128 0xd
 2196 00d3 34       		.uleb128 0x34
 2197 00d4 00       		.byte	0
 2198 00d5 03       		.uleb128 0x3
 2199 00d6 08       		.uleb128 0x8
 2200 00d7 3A       		.uleb128 0x3a
 2201 00d8 0B       		.uleb128 0xb
 2202 00d9 3B       		.uleb128 0x3b
 2203 00da 05       		.uleb128 0x5
 2204 00db 49       		.uleb128 0x49
 2205 00dc 13       		.uleb128 0x13
 2206 00dd 02       		.uleb128 0x2
 2207 00de 18       		.uleb128 0x18
 2208 00df 00       		.byte	0
 2209 00e0 00       		.byte	0
 2210 00e1 0E       		.uleb128 0xe
 2211 00e2 2E       		.uleb128 0x2e
 2212 00e3 00       		.byte	0
 2213 00e4 3F       		.uleb128 0x3f
 2214 00e5 19       		.uleb128 0x19
 2215 00e6 03       		.uleb128 0x3
 2216 00e7 0E       		.uleb128 0xe
 2217 00e8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 74


 2218 00e9 0B       		.uleb128 0xb
 2219 00ea 3B       		.uleb128 0x3b
 2220 00eb 05       		.uleb128 0x5
 2221 00ec 27       		.uleb128 0x27
 2222 00ed 19       		.uleb128 0x19
 2223 00ee 49       		.uleb128 0x49
 2224 00ef 13       		.uleb128 0x13
 2225 00f0 11       		.uleb128 0x11
 2226 00f1 01       		.uleb128 0x1
 2227 00f2 12       		.uleb128 0x12
 2228 00f3 06       		.uleb128 0x6
 2229 00f4 40       		.uleb128 0x40
 2230 00f5 18       		.uleb128 0x18
 2231 00f6 9742     		.uleb128 0x2117
 2232 00f8 19       		.uleb128 0x19
 2233 00f9 00       		.byte	0
 2234 00fa 00       		.byte	0
 2235 00fb 0F       		.uleb128 0xf
 2236 00fc 2E       		.uleb128 0x2e
 2237 00fd 01       		.byte	0x1
 2238 00fe 3F       		.uleb128 0x3f
 2239 00ff 19       		.uleb128 0x19
 2240 0100 03       		.uleb128 0x3
 2241 0101 0E       		.uleb128 0xe
 2242 0102 3A       		.uleb128 0x3a
 2243 0103 0B       		.uleb128 0xb
 2244 0104 3B       		.uleb128 0x3b
 2245 0105 05       		.uleb128 0x5
 2246 0106 27       		.uleb128 0x27
 2247 0107 19       		.uleb128 0x19
 2248 0108 11       		.uleb128 0x11
 2249 0109 01       		.uleb128 0x1
 2250 010a 12       		.uleb128 0x12
 2251 010b 06       		.uleb128 0x6
 2252 010c 40       		.uleb128 0x40
 2253 010d 18       		.uleb128 0x18
 2254 010e 9742     		.uleb128 0x2117
 2255 0110 19       		.uleb128 0x19
 2256 0111 01       		.uleb128 0x1
 2257 0112 13       		.uleb128 0x13
 2258 0113 00       		.byte	0
 2259 0114 00       		.byte	0
 2260 0115 10       		.uleb128 0x10
 2261 0116 34       		.uleb128 0x34
 2262 0117 00       		.byte	0
 2263 0118 03       		.uleb128 0x3
 2264 0119 0E       		.uleb128 0xe
 2265 011a 3A       		.uleb128 0x3a
 2266 011b 0B       		.uleb128 0xb
 2267 011c 3B       		.uleb128 0x3b
 2268 011d 0B       		.uleb128 0xb
 2269 011e 49       		.uleb128 0x49
 2270 011f 13       		.uleb128 0x13
 2271 0120 3F       		.uleb128 0x3f
 2272 0121 19       		.uleb128 0x19
 2273 0122 02       		.uleb128 0x2
 2274 0123 18       		.uleb128 0x18
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 75


 2275 0124 00       		.byte	0
 2276 0125 00       		.byte	0
 2277 0126 11       		.uleb128 0x11
 2278 0127 01       		.uleb128 0x1
 2279 0128 01       		.byte	0x1
 2280 0129 49       		.uleb128 0x49
 2281 012a 13       		.uleb128 0x13
 2282 012b 01       		.uleb128 0x1
 2283 012c 13       		.uleb128 0x13
 2284 012d 00       		.byte	0
 2285 012e 00       		.byte	0
 2286 012f 12       		.uleb128 0x12
 2287 0130 21       		.uleb128 0x21
 2288 0131 00       		.byte	0
 2289 0132 49       		.uleb128 0x49
 2290 0133 13       		.uleb128 0x13
 2291 0134 2F       		.uleb128 0x2f
 2292 0135 0B       		.uleb128 0xb
 2293 0136 00       		.byte	0
 2294 0137 00       		.byte	0
 2295 0138 13       		.uleb128 0x13
 2296 0139 0F       		.uleb128 0xf
 2297 013a 00       		.byte	0
 2298 013b 0B       		.uleb128 0xb
 2299 013c 0B       		.uleb128 0xb
 2300 013d 49       		.uleb128 0x49
 2301 013e 13       		.uleb128 0x13
 2302 013f 00       		.byte	0
 2303 0140 00       		.byte	0
 2304 0141 14       		.uleb128 0x14
 2305 0142 26       		.uleb128 0x26
 2306 0143 00       		.byte	0
 2307 0144 49       		.uleb128 0x49
 2308 0145 13       		.uleb128 0x13
 2309 0146 00       		.byte	0
 2310 0147 00       		.byte	0
 2311 0148 00       		.byte	0
 2312              		.section	.debug_aranges,"",%progbits
 2313 0000 A4000000 		.4byte	0xa4
 2314 0004 0200     		.2byte	0x2
 2315 0006 00000000 		.4byte	.Ldebug_info0
 2316 000a 04       		.byte	0x4
 2317 000b 00       		.byte	0
 2318 000c 0000     		.2byte	0
 2319 000e 0000     		.2byte	0
 2320 0010 00000000 		.4byte	.LFB0
 2321 0014 F4000000 		.4byte	.LFE0-.LFB0
 2322 0018 00000000 		.4byte	.LFB1
 2323 001c 98000000 		.4byte	.LFE1-.LFB1
 2324 0020 00000000 		.4byte	.LFB2
 2325 0024 24000000 		.4byte	.LFE2-.LFB2
 2326 0028 00000000 		.4byte	.LFB3
 2327 002c 98000000 		.4byte	.LFE3-.LFB3
 2328 0030 00000000 		.4byte	.LFB4
 2329 0034 50000000 		.4byte	.LFE4-.LFB4
 2330 0038 00000000 		.4byte	.LFB5
 2331 003c 50000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 76


 2332 0040 00000000 		.4byte	.LFB6
 2333 0044 34000000 		.4byte	.LFE6-.LFB6
 2334 0048 00000000 		.4byte	.LFB7
 2335 004c 58000000 		.4byte	.LFE7-.LFB7
 2336 0050 00000000 		.4byte	.LFB8
 2337 0054 1C000000 		.4byte	.LFE8-.LFB8
 2338 0058 00000000 		.4byte	.LFB9
 2339 005c 20000000 		.4byte	.LFE9-.LFB9
 2340 0060 00000000 		.4byte	.LFB10
 2341 0064 28000000 		.4byte	.LFE10-.LFB10
 2342 0068 00000000 		.4byte	.LFB11
 2343 006c 6C000000 		.4byte	.LFE11-.LFB11
 2344 0070 00000000 		.4byte	.LFB12
 2345 0074 70000000 		.4byte	.LFE12-.LFB12
 2346 0078 00000000 		.4byte	.LFB13
 2347 007c 5C000000 		.4byte	.LFE13-.LFB13
 2348 0080 00000000 		.4byte	.LFB14
 2349 0084 98000000 		.4byte	.LFE14-.LFB14
 2350 0088 00000000 		.4byte	.LFB15
 2351 008c 2C000000 		.4byte	.LFE15-.LFB15
 2352 0090 00000000 		.4byte	.LFB16
 2353 0094 20000000 		.4byte	.LFE16-.LFB16
 2354 0098 00000000 		.4byte	.LFB17
 2355 009c 20000000 		.4byte	.LFE17-.LFB17
 2356 00a0 00000000 		.4byte	0
 2357 00a4 00000000 		.4byte	0
 2358              		.section	.debug_ranges,"",%progbits
 2359              	.Ldebug_ranges0:
 2360 0000 00000000 		.4byte	.LFB0
 2361 0004 F4000000 		.4byte	.LFE0
 2362 0008 00000000 		.4byte	.LFB1
 2363 000c 98000000 		.4byte	.LFE1
 2364 0010 00000000 		.4byte	.LFB2
 2365 0014 24000000 		.4byte	.LFE2
 2366 0018 00000000 		.4byte	.LFB3
 2367 001c 98000000 		.4byte	.LFE3
 2368 0020 00000000 		.4byte	.LFB4
 2369 0024 50000000 		.4byte	.LFE4
 2370 0028 00000000 		.4byte	.LFB5
 2371 002c 50000000 		.4byte	.LFE5
 2372 0030 00000000 		.4byte	.LFB6
 2373 0034 34000000 		.4byte	.LFE6
 2374 0038 00000000 		.4byte	.LFB7
 2375 003c 58000000 		.4byte	.LFE7
 2376 0040 00000000 		.4byte	.LFB8
 2377 0044 1C000000 		.4byte	.LFE8
 2378 0048 00000000 		.4byte	.LFB9
 2379 004c 20000000 		.4byte	.LFE9
 2380 0050 00000000 		.4byte	.LFB10
 2381 0054 28000000 		.4byte	.LFE10
 2382 0058 00000000 		.4byte	.LFB11
 2383 005c 6C000000 		.4byte	.LFE11
 2384 0060 00000000 		.4byte	.LFB12
 2385 0064 70000000 		.4byte	.LFE12
 2386 0068 00000000 		.4byte	.LFB13
 2387 006c 5C000000 		.4byte	.LFE13
 2388 0070 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 77


 2389 0074 98000000 		.4byte	.LFE14
 2390 0078 00000000 		.4byte	.LFB15
 2391 007c 2C000000 		.4byte	.LFE15
 2392 0080 00000000 		.4byte	.LFB16
 2393 0084 20000000 		.4byte	.LFE16
 2394 0088 00000000 		.4byte	.LFB17
 2395 008c 20000000 		.4byte	.LFE17
 2396 0090 00000000 		.4byte	0
 2397 0094 00000000 		.4byte	0
 2398              		.section	.debug_line,"",%progbits
 2399              	.Ldebug_line0:
 2400 0000 36020000 		.section	.debug_str,"MS",%progbits,1
 2400      02004900 
 2400      00000201 
 2400      FB0E0D00 
 2400      01010101 
 2401              	.LASF10:
 2402 0000 75696E74 		.ascii	"uint16\000"
 2402      313600
 2403              	.LASF26:
 2404 0007 736E7349 		.ascii	"snsIndex\000"
 2404      6E646578 
 2404      00
 2405              	.LASF59:
 2406 0010 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2406      43313120 
 2406      352E342E 
 2406      31203230 
 2406      31363036 
 2407 0043 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2407      20726576 
 2407      6973696F 
 2407      6E203233 
 2407      37373135 
 2408 0076 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2408      66756E63 
 2408      74696F6E 
 2408      2D736563 
 2408      74696F6E 
 2409              	.LASF41:
 2410 009e 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2410      656E7365 
 2410      5F435344 
 2410      5F536574 
 2410      50726573 
 2411              	.LASF7:
 2412 00b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2412      206C6F6E 
 2412      6720756E 
 2412      7369676E 
 2412      65642069 
 2413              	.LASF53:
 2414 00cf 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2414      656E7365 
 2414      5F435344 
 2414      5F6D6173 
 2414      6B546162 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 78


 2415              	.LASF52:
 2416 00e6 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2416      656E7365 
 2416      5F435344 
 2416      5F706F72 
 2416      74546162 
 2417              	.LASF6:
 2418 00fd 6C6F6E67 		.ascii	"long long int\000"
 2418      206C6F6E 
 2418      6720696E 
 2418      7400
 2419              	.LASF0:
 2420 010b 7369676E 		.ascii	"signed char\000"
 2420      65642063 
 2420      68617200 
 2421              	.LASF48:
 2422 0117 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2422      656E7365 
 2422      5F435344 
 2422      5F73656E 
 2422      736F7249 
 2423              	.LASF19:
 2424 0130 43617053 		.ascii	"CapSense_CSD_Init\000"
 2424      656E7365 
 2424      5F435344 
 2424      5F496E69 
 2424      7400
 2425              	.LASF4:
 2426 0142 6C6F6E67 		.ascii	"long int\000"
 2426      20696E74 
 2426      00
 2427              	.LASF58:
 2428 014b 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2428      656E7365 
 2428      5F435344 
 2428      5F776964 
 2428      6765744E 
 2429              	.LASF54:
 2430 0165 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2430      656E7365 
 2430      5F435344 
 2430      5F637354 
 2430      61626C65 
 2431              	.LASF9:
 2432 017a 75696E74 		.ascii	"uint8\000"
 2432      3800
 2433              	.LASF13:
 2434 0180 646F7562 		.ascii	"double\000"
 2434      6C6500
 2435              	.LASF46:
 2436 0187 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2436      656E7365 
 2436      5F435344 
 2436      5F696E69 
 2436      74566172 
 2437              	.LASF11:
 2438 019c 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 79


 2438      333200
 2439              	.LASF31:
 2440 01a3 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2440      656E7365 
 2440      5F435344 
 2440      5F536361 
 2440      6E456E61 
 2441              	.LASF37:
 2442 01c3 6D61736B 		.ascii	"mask\000"
 2442      00
 2443              	.LASF34:
 2444 01c8 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2444      656E7365 
 2444      5F435344 
 2444      5F436C65 
 2444      61725365 
 2445              	.LASF36:
 2446 01e2 706F7274 		.ascii	"port\000"
 2446      00
 2447              	.LASF39:
 2448 01e7 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2448      656E7365 
 2448      5F435344 
 2448      5F507265 
 2448      5363616E 
 2449              	.LASF8:
 2450 01fc 756E7369 		.ascii	"unsigned int\000"
 2450      676E6564 
 2450      20696E74 
 2450      00
 2451              	.LASF5:
 2452 0209 6C6F6E67 		.ascii	"long unsigned int\000"
 2452      20756E73 
 2452      69676E65 
 2452      6420696E 
 2452      7400
 2453              	.LASF60:
 2454 021b 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2454      72617465 
 2454      645F536F 
 2454      75726365 
 2454      5C50536F 
 2455              	.LASF57:
 2456 0241 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2456      656E7365 
 2456      5F435344 
 2456      5F616E61 
 2456      6C6F6753 
 2457              	.LASF61:
 2458 0262 483A5C50 		.ascii	"H:\\P4P\\P4P_Project-130\\Capsense_stuff\\Cap_Sense"
 2458      34505C50 
 2458      34505F50 
 2458      726F6A65 
 2458      63742D31 
 2459 0291 2E637964 		.ascii	".cydsn\\CapSense_CSD_WithTuner01.cydsn\000"
 2459      736E5C43 
 2459      61705365 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 80


 2459      6E73655F 
 2459      4353445F 
 2460              	.LASF3:
 2461 02b7 73686F72 		.ascii	"short unsigned int\000"
 2461      7420756E 
 2461      7369676E 
 2461      65642069 
 2461      6E7400
 2462              	.LASF30:
 2463 02ca 73656E73 		.ascii	"sensor\000"
 2463      6F7200
 2464              	.LASF38:
 2465 02d1 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2465      656E7365 
 2465      5F435344 
 2465      5F446973 
 2465      61626C65 
 2466              	.LASF40:
 2467 02ec 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2467      656E7365 
 2467      5F435344 
 2467      5F506F73 
 2467      74536361 
 2468              	.LASF27:
 2469 0302 736C6F74 		.ascii	"slot\000"
 2469      00
 2470              	.LASF51:
 2471 0307 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2471      656E7365 
 2471      5F435344 
 2471      5F706354 
 2471      61626C65 
 2472              	.LASF29:
 2473 031c 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2473      656E7365 
 2473      5F435344 
 2473      5F536361 
 2473      6E53656E 
 2474              	.LASF16:
 2475 0334 72656733 		.ascii	"reg32\000"
 2475      3200
 2476              	.LASF35:
 2477 033a 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2477      656E7365 
 2477      5F435344 
 2477      5F456E61 
 2477      626C6553 
 2478              	.LASF18:
 2479 0354 73697A65 		.ascii	"sizetype\000"
 2479      74797065 
 2479      00
 2480              	.LASF17:
 2481 035d 6C6F6E67 		.ascii	"long double\000"
 2481      20646F75 
 2481      626C6500 
 2482              	.LASF22:
 2483 0369 43617053 		.ascii	"CapSense_CSD_Start\000"
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 81


 2483      656E7365 
 2483      5F435344 
 2483      5F537461 
 2483      727400
 2484              	.LASF45:
 2485 037c 7363616E 		.ascii	"scanSpeed\000"
 2485      53706565 
 2485      6400
 2486              	.LASF24:
 2487 0386 656E4D61 		.ascii	"enMask\000"
 2487      736B00
 2488              	.LASF50:
 2489 038d 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2489      656E7365 
 2489      5F435344 
 2489      5F73656E 
 2489      736F7245 
 2490              	.LASF12:
 2491 03ab 666C6F61 		.ascii	"float\000"
 2491      7400
 2492              	.LASF42:
 2493 03b1 70726573 		.ascii	"prescaler\000"
 2493      63616C65 
 2493      7200
 2494              	.LASF43:
 2495 03bb 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2495      656E7365 
 2495      5F435344 
 2495      5F476574 
 2495      50726573 
 2496              	.LASF15:
 2497 03d5 72656738 		.ascii	"reg8\000"
 2497      00
 2498              	.LASF1:
 2499 03da 756E7369 		.ascii	"unsigned char\000"
 2499      676E6564 
 2499      20636861 
 2499      7200
 2500              	.LASF2:
 2501 03e8 73686F72 		.ascii	"short int\000"
 2501      7420696E 
 2501      7400
 2502              	.LASF28:
 2503 03f2 77696467 		.ascii	"widget\000"
 2503      657400
 2504              	.LASF62:
 2505 03f9 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2505      656E7365 
 2505      5F435344 
 2505      5F497342 
 2505      75737900 
 2506              	.LASF49:
 2507 040d 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2507      656E7365 
 2507      5F435344 
 2507      5F73656E 
 2507      736F7252 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 82


 2508              	.LASF44:
 2509 0424 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2509      656E7365 
 2509      5F435344 
 2509      5F536574 
 2509      5363616E 
 2510              	.LASF23:
 2511 043e 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2511      656E7365 
 2511      5F435344 
 2511      5F53746F 
 2511      7000
 2512              	.LASF14:
 2513 0450 63686172 		.ascii	"char\000"
 2513      00
 2514              	.LASF25:
 2515 0455 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2515      656E7365 
 2515      5F435344 
 2515      5F536574 
 2515      5363616E 
 2516              	.LASF33:
 2517 0476 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2517      656E7365 
 2517      5F435344 
 2517      5F526561 
 2517      6453656E 
 2518              	.LASF56:
 2519 0491 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2519      656E7365 
 2519      5F435344 
 2519      5F776964 
 2519      67657452 
 2520              	.LASF55:
 2521 04af 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2521      656E7365 
 2521      5F435344 
 2521      5F696461 
 2521      63536574 
 2522              	.LASF20:
 2523 04c9 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2523      656E7365 
 2523      5F435344 
 2523      5F456E61 
 2523      626C6500 
 2524              	.LASF21:
 2525 04dd 656E6162 		.ascii	"enableInterrupts\000"
 2525      6C65496E 
 2525      74657272 
 2525      75707473 
 2525      00
 2526              	.LASF32:
 2527 04ee 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2527      656E7365 
 2527      5F435344 
 2527      5F46696E 
 2527      644E6578 
ARM GAS  C:\Users\ash750\AppData\Local\Temp\cc7QgJB9.s 			page 83


 2528              	.LASF47:
 2529 050a 43617053 		.ascii	"CapSense_CSD_csv\000"
 2529      656E7365 
 2529      5F435344 
 2529      5F637376 
 2529      00
 2530              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
